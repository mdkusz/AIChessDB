<?xml version="1.0"?>
<doc>
  <assembly>
    <name>OpenAIAPI</name>
  </assembly>
  <members>
    <member name="T:OpenAIAPI.Elements.OpenAIFileManager">
      <summary>
            IFileManger implementation for OpenAI API
            </summary>
      <example>
            You can find an example of use of this class in the AIAPIWinAdmin.cfFiles Form. This form allows managing OpenAI files using all the API calls.
            </example>
      <remarks>
            This object manages files using the Files API of OpenAI.
            OpenAIFileManager objects are created by the OpenAIAPIManager object.
            The APIConfiguration class contains the default settings and all endpoint definition for this class.
            The OpenAIAPIConfiguration.json contains the default configuration for this class in the "tools" element with id "default_FileManager".
            The FileObject class is used to store the file information.
            The FileList class is used to store a list of files.
            </remarks>
      <seealso cref="T:AIAssistants.Interfaces.IFileManager" />
      <seealso cref="T:OpenAIAPI.JSON.ElementConfiguration" />
      <seealso cref="T:GlobalCommonEntities.API.APIEndpoint" />
      <seealso cref="T:AIAssistants.Interfaces.IAPIManager" />
      <seealso cref="T:AIAssistants.Interfaces.ElementCapabilities" />
      <seealso cref="T:GlobalCommonEntities.API.ExtraArgs" />
      <seealso cref="T:GlobalCommonEntities.DependencyInjection.ObjectWrapper" />
      <seealso cref="T:OpenAIAPI.JSON.FileObject" />
      <seealso cref="T:OpenAIAPI.JSON.FileList" />
      <seealso cref="T:AIAssistants.Data.APIUIDataSheet" />
      <seealso cref="T:OpenAIAPI.OpenAIAPIManager" />
      <seealso cref="!:OpenAIAPIConfiguration.json" />
      <seealso cref="!:AIAPIWinAdmin.cfFiles" />
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFileManager.Identifier">
      <summary>
            IAPIElement: Unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFileManager.Name">
      <summary>
            IAPIElement: Element name
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFileManager.Description">
      <summary>
            IAPIElement: Element description
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFileManager.GenericType">
      <summary>
            IAPIElement: Element generic type
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFileManager.Capabilities">
      <summary>
            IAPIElement: Element capabilities
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFileManager.APIManager">
      <summary>
            IAPIElement: API manager object
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFileManager.EditorInfo">
      <summary>
            IAPIElement: Information to edit the object
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFileManager.ConfigInfo">
      <summary>
            IAPIElement: Information to edit the object configuration
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFileManager.Usage">
      <summary>
            IAPIElement: Usage information of this element after the current request.
            </summary>
      <remarks>
            This is a dictionary with information useful to billing and limits.
            Each dictionary key is the name of anusage element field, such as input tokens, audio tokens, etc.
            Keys can be names of composite properties, such as "input_token_details.text_tokens".
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFileManager.QueryExtraArgs(System.String)">
      <summary>
            IAPIElement: Query for function extra arguments
            </summary>
      <param name="functionName">
            Name of the function
            </param>
      <returns>
            List of extra arguments
            </returns>
      <remarks>
            The arguments for the GetFileList function are defined in the OpenAIAPIConfiguration.json file; url arguments for pagination: limit, order and after; url argument for purpose.
            The arguments for UploadFile are instead for the purpose body property, and ther is no place in configuration to define them. So they are hardcoded here.        
            </remarks>
      <seealso cref="T:GlobalCommonEntities.API.ExtraArgs" />
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFileManager.UpdateConfiguration(AIAssistants.Interfaces.IAPIElement)">
      <summary>
            IAPIElement: Update the element configuration
            </summary>
      <param name="fromElement">
            IAPIelement needed to update the configuration
            </param>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFileManager.UpdateObject(GlobalCommonEntities.DependencyInjection.ObjectWrapper)">
      <summary>
            IAPIElement: Update the element properties (exposed in the EditorInfo property)  in the provider server
            </summary>
      <param name="odata">
            Custom object information contained in an ObjectWrapper object
            </param>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFileManager.Equals(AIAssistants.Interfaces.IAPIElement)">
      <summary>
            IEquatable interface
            </summary>
      <param name="other">
            Object to compare with
            </param>
      <returns>
            True if both objects are the same
            </returns>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFileManager.DefaultExpirationTime">
      <summary>
            IFileManager: Default expiration time for uploaded files
            </summary>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFileManager.AllowedFileExtensions(AIAssistants.Interfaces.ToolTypes)">
      <summary>
            IFileManager: List of allowed file extensions
            </summary>
      <param name="tool">
            Tool type
            </param>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFileManager.MimeTypeForExtension(System.String,AIAssistants.Interfaces.FileFormat@)">
      <summary>
            IFileManager: Get the MIME type for a file extension
            </summary>
      <param name="extension">
            File extension
            </param>
      <param name="format">
            File format output parameter
            </param>
      <returns>
            Mime type or null if extension is not allowed
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFileManager.UploadFile(System.String,System.Object[])">
      <summary>
            IFileManager: Upload a file
            </summary>
      <param name="filename">
            Path and name of the file
            </param>
      <param name="args">
            Extra arguments to upload file
            </param>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFileManager.UploadFile(System.Byte[],System.String,System.Object[])">
      <summary>
            IFileManager: Upload a byte array as a file
            </summary>
      <param name="content">
            File content as byte array
            </param>
      <param name="filename">
            File name and extension
            </param>
      <param name="args">
            Extra arguments to upload file
            </param>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFileManager.UploadImage(System.String)">
      <summary>
            IFileManager: Upload an image
            </summary>
      <param name="filename">
            Image file name
            </param>
      <returns>
            File unique identifier
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFileManager.UploadImage(System.Byte[],System.String)">
      <summary>
            IFileManager: Upload an image
            </summary>
      <param name="content">
            File content as byte array
            </param>
      <param name="filename">
            Image file name
            </param>
      <returns>
            File unique identifier
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFileManager.UploadFile(System.String,System.IO.Stream,System.Object[])">
      <summary>
            IFileManager: Upload a file
            </summary>
      <param name="filename">
            Path and name of the file
            </param>
      <param name="data">
            Stream with the data to upload
            </param>
      <param name="args">
            Extra arguments to upload file
            </param>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFileManager.DownloadFile(System.String)">
      <summary>
            IFileManager: Download a file
            </summary>
      <param name="filid">
            File unique identifier
            </param>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFileManager.GetFileContent(System.String)">
      <summary>
            IFileManager: Retrieve the content of a filelist
            </summary>
      <param name="fileid">
            File unique identifier
            </param>
      <returns>
            The filelist content as byte array
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFileManager.DeleteFile(System.String,System.String)">
      <summary>
            IFileManager: Delete a file
            </summary>
      <param name="fileid">
            Unique identifier of the file or null (to use filename)
            </param>
      <param name="filename">
            Name of the file
            </param>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFileManager.DeleteFileIfExists(System.String)">
      <summary>
            IFileManager: Delete a file if exists
            </summary>
      <param name="filename">
            Name of the file
            </param>
      <returns>
            Deleted file unique identifier or empty string if not found
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFileManager.GetFileIdByName(System.String)">
      <summary>
            IFileManager: Get the file id from a file name
            </summary>
      <param name="filename">
            Name of the file
            </param>
      <returns>
            Deleted file unique identifier or empty string if not found
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFileManager.GetFileNameById(System.String)">
      <summary>
            IFileManager: Get a file name from a file id
            </summary>
      <param name="uid">
            File unique identifier
            </param>
      <returns>
            File name or empty string if not found
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFileManager.GetFileList(System.Object[])">
      <summary>
            IFileManager: Get a list of all files
            </summary>
      <param name="args">
            Aditional parameter list, in the form of url query parameters (name=value)
            </param>
      <returns>
            List of files wrapped on a common object
            </returns>
    </member>
    <member name="T:OpenAIAPI.Elements.OpenAIFineTuning">
      <summary>
            OPen AI fine-tuning job implementation
            </summary>
      <example>
            You can find an example of use of this class in the AIAPIWinAdmin.cfTuning Form. This form allows managing OpenAI fine-tuning using all the API calls.
            </example>
      <remarks>
            This object manages model fine-tuning jobs using the Fine-tuning API of OpenAI.
            OpenAIFineTuning objects are created by the OpenAIAPIManager object.
            The APIConfiguration class contains the default settings and all endpoint definition for this class.
            The OpenAIAPIConfiguration.json contains the default configuration for this class in the "tools" element with id "default_TuningJob".
            The FineTuningJobRequest class is used to create new fine-tuning jobs.
            The FineTuningJobList class is used to store a list of tuning jobs.
            The ChatTrainingItem class is used to store training data.
            This class uses the integration interfaces to read and write training data.
            </remarks>
      <seealso cref="T:OpenAIAPI.JSON.FineTuningJobRequest" />
      <seealso cref="T:OpenAIAPI.JSON.ElementConfiguration" />
      <seealso cref="T:GlobalCommonEntities.API.APIEndpoint" />
      <seealso cref="T:AIAssistants.Interfaces.IAPIManager" />
      <seealso cref="T:AIAssistants.Interfaces.ElementCapabilities" />
      <seealso cref="T:GlobalCommonEntities.API.ExtraArgs" />
      <seealso cref="T:GlobalCommonEntities.DependencyInjection.ObjectWrapper" />
      <seealso cref="T:OpenAIAPI.JSON.FineTuningJobList" />
      <seealso cref="T:OpenAIAPI.JSON.ChatTrainingItem" />
      <seealso cref="T:AIAssistants.Data.APIUIDataSheet" />
      <seealso cref="T:AIAssistants.Data.IntegrationColumnSet" />
      <seealso cref="T:AIAssistants.Data.IntegrationDataColumn" />
      <seealso cref="T:AIAssistants.Interfaces.IDataIntegration" />
      <seealso cref="T:GlobalCommonEntities.Interfaces.ISelectionObjectProvider" />
      <seealso cref="T:OpenAIAPI.OpenAIAPIManager" />
      <seealso cref="!:OpenAIAPIConfiguration.json" />
      <seealso cref="!:AIAPIWinAdmin.cfTuning" />
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFineTuning.Identifier">
      <summary>
            IAPIElement: Unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFineTuning.Name">
      <summary>
            IAPIElement: Element name
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFineTuning.Description">
      <summary>
            IAPIElement: Element description
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFineTuning.GenericType">
      <summary>
            IAPIElement: Element generic type
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFineTuning.Capabilities">
      <summary>
            IAPIElement: Element capabilities
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFineTuning.APIManager">
      <summary>
            IAPIElement: API manager object
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFineTuning.EditorInfo">
      <summary>
            IAPIElement: Information to edit the object
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFineTuning.ConfigInfo">
      <summary>
            IAPIElement: Information to edit the object configuration
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFineTuning.Usage">
      <summary>
            IAPIElement: Usage information of this element after the current request.
            </summary>
      <remarks>
            This is a dictionary with information useful to billing and limits.
            Each dictionary key is the name of anusage element field, such as input tokens, audio tokens, etc.
            Keys can be names of composite properties, such as "input_token_details.text_tokens".
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFineTuning.QueryExtraArgs(System.String)">
      <summary>
            IAPIElement: Query for function extra arguments
            </summary>
      <param name="functionName">
            Name of the function
            </param>
      <returns>
            List of extra arguments
            </returns>
      <remarks>
            The arguments for the ListJobs function are defined in the OpenAIAPIConfiguration.json file; url arguments for pagination: limit, after.
            </remarks>
      <seealso cref="T:GlobalCommonEntities.API.ExtraArgs" />
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFineTuning.UpdateConfiguration(AIAssistants.Interfaces.IAPIElement)">
      <summary>
            IAPIElement: Update the element configuration
            </summary>
      <param name="fromElement">
            IAPIelement needed to update the configuration
            </param>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFineTuning.UpdateObject(GlobalCommonEntities.DependencyInjection.ObjectWrapper)">
      <summary>
            IAPIElement: Update the element properties (exposed in the EditorInfo property)  in the provider server
            </summary>
      <param name="odata">
            Custom object information contained in an ObjectWrapper object
            </param>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFineTuning.Equals(AIAssistants.Interfaces.IAPIElement)">
      <summary>
            IEquatable interface
            </summary>
      <param name="other">
            Object to compare with
            </param>
      <returns>
            True if both objects are the same
            </returns>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFineTuning.MaxRequestRatePerMinute">
      <summary>
            IModelUser: Maxumum number of requests per minute
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFineTuning.MaxRequestRatePerDay">
      <summary>
            IModelUser: Maximum number of requests per day
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFineTuning.Model">
      <summary>
            IModelUser: AI model identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFineTuning.Temperature">
      <summary>
            IModelUser: Not used
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFineTuning.TopP">
      <summary>
            IModelUser: Not used
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFineTuning.ModelProperty">
      <summary>
            IModelUser: Property editor information to set the available model list.
            </summary>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFineTuning.ReasoningEffort(System.String@)">
      <summary>
            IModelUser: Gets or sets the reasoning effort level
            </summary>
      <param name="currentReasoning">
            Pass null or empty to get the current reasoning effort level. Pass a string to set a new reasoning effort level.
            </param>
      <returns>
            List of available reasoning effort levels, Null if the model does not support reasoning effort levels.
            </returns>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFineTuning.Title">
      <summary>
            ISelectionObjectProvider: Title for the selection user interface
            </summary>
    </member>
    <member name="E:OpenAIAPI.Elements.OpenAIFineTuning.SelectionUIInvoked">
      <summary>
            ISelectionObjectProvider: Event to notify that the user wants to select an object
            </summary>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFineTuning.ReleaseEvent">
      <summary>
            ISelectionObjectProvider: Release SelectObjectsHandler event subscriptions
            </summary>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFineTuning.HasMore(GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Check if there are more objects to select from
            </summary>
      <param name="property">
            Property editor invoking the selection
            </param>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFineTuning.GetSelectionObjects(GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Get a list of objects to select from
            </summary>
      <returns>
            List of objects
            </returns>
      <param name="property">
            Property to get the object
            </param>
      <remarks>
            The request properties that fire this event are "TrainingFile" and "ValidationFile".
            The files listed are those in the file manager.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFineTuning.GetSelectedObjects(GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Get a list of objects already selected
            </summary>
      <returns>
            List of objects
            </returns>
      <param name="property">
            Property to get the object list
            </param>
      <remarks>
            The request properties that fire this event are "TrainingFile" and "ValidationFile".
            The files listed are those in the file manager.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFineTuning.SetSelection(System.Collections.Generic.List{System.Object},GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Set the list of selected objects
            </summary>
      <param name="objects">
            Selected object list
            </param>
      <param name="property">
            Property to set the selection
            </param>
      <remarks>
            The request properties that fire this event are "TrainingFile" and "ValidationFile".
            The result provided is a file identifier from the file manager.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFineTuning.RemoveSelection(System.Collections.Generic.List{System.Object},GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Remove a list of objects
            </summary>
      <param name="objects">
            Object to remove list
            </param>
      <param name="property">
            Property to remove the selection
            </param>
      <remarks>
            The request properties that fire this event are "TrainingFile" and "ValidationFile".
            The result provided is a file identifier from the file manager.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFineTuning.RemoveContainer(GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Remove the object container
            </summary>
      <param name="property">
            Property editor invoking the selection
            </param>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFineTuning.InvokeAction(System.Object,GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Fire event to select an object
            </summary>
      <param name="sender">
            Object invoking the selection
            </param>
      <param name="property">
            Property editor invoking the selection
            </param>
      <remarks>
            This object do not know in which platform it is currently used (web, desktop, etc.) so it has to delegate the UI to the instance managing it.
            </remarks>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFineTuning.IntegrationSets">
      <summary>
            IDataIntegration: Get the list of integration set names
            </summary>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFineTuning.GetIntegrationSet(System.String)">
      <summary>
            IDataIntegration: Get the column list for a given set
            </summary>
      <param name="setName">
            Integration set name
            </param>
      <returns>
            Integration set column list
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFineTuning.BulkLoad(System.Data.DataTable,System.String)">
      <summary>
            IDataIntegration: Integrate objects from a data table
            </summary>
      <param name="data">
            DataTable with integration data
            </param>
      <param name="setName">
            Integration set name
            </param>
      <returns>
            Error message list
            </returns>
      <example>
            You can find an example of use of this method in the AIAPIWinAdmin.cfTuning Form. It is used to integrate a list of messages for training or validating the model.
            </example>
      <remarks>
            This method transforms a DataTable with a specific column structure into a list of ChatTrainingItem objects.
            The MessageColumns.json file contains the definition of the columns for the DataTable.
            The user interface uses this file to configure an IIntegrationDataReader to ask user for data and convert the user provided data into a DataTable.
            </remarks>
      <seealso cref="!:MessageColumns.json" />
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIFineTuning.TrainingData">
      <summary>
            ITuningJob: List of training data elements
            </summary>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFineTuning.SaveTrainingData(System.Boolean)">
      <summary>
            ITuningJob: Training data validated. Save it to ptocess job
            </summary>
      <param name="validation">
            Save data for validation
            </param>
      <returns>
            Error message if any
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFineTuning.ListJobs(System.Object[])">
      <summary>
            ITuningJob: Get a list of all tuning jobs
            </summary>
      <param name="args">
            Aditional parameter list, in the form of url query parameters (name=value)
            </param>
      <returns>
            List of jobs wrapped on a common object
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFineTuning.CreateJob(GlobalCommonEntities.DependencyInjection.ObjectWrapper)">
      <summary>
            ITuningJob: Create a new tuning job
            </summary>
      <param name="job">
            Job creation data. Null to use default settings
            </param>
      <returns>
            Wrapped job object
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFineTuning.GetJob(System.String)">
      <summary>
            ITuningJob: Retrieve an existing job
            </summary>
      <param name="jobid">
            Job unique identifier
            </param>
      <returns>
            Wrapped job object
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIFineTuning.CancelJob(System.String)">
      <summary>
            ITuningJob: Cancel a running job
            </summary>
      <param name="jobid">
            Job unique identifier
            </param>
      <returns>
            Cancelled job wrapped object
            </returns>
    </member>
    <member name="T:OpenAIAPI.Elements.OpenAIVectorStoreManager">
      <summary>
            IFilePackageManager OpenAI implementation.
            </summary>
      <example>
            You can find an example of use of this class in the AIAPIWinAdmin.cfFiles Form. This form allows managing OpenAI files using all the API calls.
            </example>
      <remarks>
            This object manages OpenAI vector stores.
            OpenAIVectorStoreManager objects are created by the OpenAIAPIManager object.
            The APIConfiguration class contains the default settings and all endpoint definition for this class.
            The OpenAIAPIConfiguration.json contains the default configuration for this class in the "tools" element with id "default_VectorStore".
            The VectorStore class is used to store the vector store information.
            The VectorStoreList class is used to store a list of VectorStore.
            The VectorStoreFile class is used to store information for a file in the vector store.
            The VectorStoreFileList class is used to store a list of VectorStoreFile.
            </remarks>
      <seealso cref="T:AIAssistants.Interfaces.IFileManager" />
      <seealso cref="T:OpenAIAPI.JSON.ElementConfiguration" />
      <seealso cref="T:GlobalCommonEntities.API.APIEndpoint" />
      <seealso cref="T:AIAssistants.Interfaces.IAPIManager" />
      <seealso cref="T:AIAssistants.Interfaces.ElementCapabilities" />
      <seealso cref="T:GlobalCommonEntities.API.ExtraArgs" />
      <seealso cref="T:GlobalCommonEntities.DependencyInjection.ObjectWrapper" />
      <seealso cref="T:OpenAIAPI.JSON.FileObject" />
      <seealso cref="T:OpenAIAPI.JSON.VectorStore" />
      <seealso cref="T:OpenAIAPI.JSON.VectorStoreList" />
      <seealso cref="T:OpenAIAPI.JSON.VectorStoreFile" />
      <seealso cref="T:OpenAIAPI.JSON.VectorStoreFileList" />
      <seealso cref="T:AIAssistants.Data.APIUIDataSheet" />
      <seealso cref="T:OpenAIAPI.OpenAIAPIManager" />
      <seealso cref="T:AIAssistants.Interfaces.IAppAutomationExtension" />
      <seealso cref="T:AIAssistants.Interfaces.IApplicationService" />
      <seealso cref="T:AIAssistants.Interfaces.IDocumentStoreManager" />
      <seealso cref="!:OpenAIAPIConfiguration.json" />
      <seealso cref="!:AIAPIWinAdmin.cfFiles" />
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIVectorStoreManager.StdUID">
      <summary>
            IStandardObject: Unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIVectorStoreManager.StdName">
      <summary>
            IStandardObject: Element name
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIVectorStoreManager.StdDescription">
      <summary>
            IStandardObject: Element description
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIVectorStoreManager.DataSheet">
      <summary>
            IStandardObject: Information to edit the object
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIVectorStoreManager.Identifier">
      <summary>
            IAPIElement: Unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIVectorStoreManager.Name">
      <summary>
            IAPIElement: Element name
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIVectorStoreManager.Description">
      <summary>
            IAPIElement: Element description
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIVectorStoreManager.GenericType">
      <summary>
            IAPIElement: Element generic type
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIVectorStoreManager.Capabilities">
      <summary>
            IAPIElement: Element capabilities
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIVectorStoreManager.APIManager">
      <summary>
            IAPIElement: API manager object
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIVectorStoreManager.EditorInfo">
      <summary>
            IAPIElement: Information to edit the object
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIVectorStoreManager.ConfigInfo">
      <summary>
            IAPIElement: Information to edit the object configuration
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIVectorStoreManager.Usage">
      <summary>
            IAPIElement: Usage information of this element after the current request.
            </summary>
      <remarks>
            This is a dictionary with information useful to billing and limits.
            Each dictionary key is the name of anusage element field, such as input tokens, audio tokens, etc.
            Keys can be names of composite properties, such as "input_token_details.text_tokens".
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.QueryExtraArgs(System.String)">
      <summary>
            IAPIElement: Query for function extra arguments
            </summary>
      <param name="functionName">
            Name of the function
            </param>
      <returns>
            List of extra arguments
            </returns>
      <remarks>
            The arguments for the ListJobs function are defined in the OpenAIAPIConfiguration.json file; url arguments for pagination: limit, after.
            </remarks>
      <seealso cref="T:GlobalCommonEntities.API.ExtraArgs" />
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.UpdateConfiguration(AIAssistants.Interfaces.IAPIElement)">
      <summary>
            IAPIElement: Update the element configuration
            </summary>
      <param name="fromElement">
            IAPIelement needed to update the configuration
            </param>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.UpdateObject(GlobalCommonEntities.DependencyInjection.ObjectWrapper)">
      <summary>
            IAPIElement: Update the element properties (exposed in the EditorInfo property) in the provider server
            </summary>
      <param name="odata">
            Custom object information contained in an ObjectWrapper object
            </param>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.Equals(AIAssistants.Interfaces.IAPIElement)">
      <summary>
            IEquatable interface
            </summary>
      <param name="other">
            Object to compare with
            </param>
      <returns>
            True if both objects are the same
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.SaveToStream(System.IO.Stream,System.Boolean)">
      <summary>
            IStreamReadWriter: Save the element to a stream
            </summary>
      <param name="stream">
            Target Stream
            </param>
      <param name="formatted">
            Save formatted data
            </param>
      <remarks>
            This function is not implemented in this class.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.LoadFromStream(System.IO.Stream)">
      <summary>
            IStreamReadWriter: Load the element from a stream
            </summary>
      <param name="stream">
            Source Stream
            </param>
      <remarks>
            This function is not implemented in this class.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.GetStoredElements(System.Object[])">
      <summary>
            IStorableElement: List of all available vector stores
            </summary>
      <param name="args">
            Arguments to filter the list of elements if applicable.
            </param>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.CreateFromID(System.String)">
      <summary>
            IStorableElement: Get a vector store from its identifier
            </summary>
      <param name="id">
            Vector store unique identifier
            </param>
      <returns>
            Object with the specific configuration of the vector store
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.CreateStorableElement(GlobalCommonEntities.DependencyInjection.ObjectWrapper)">
      <summary>
            IStorableElement: Create a new vector store from a generic object
            </summary>
      <param name="request">
            Generic object wrapping the vector store request
            </param>
      <returns>
            Object with the specific configuration of the vector store
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.DeleteStorableElement">
      <summary>
            IStorableElement: Remove a vector store
            </summary>
      <returns>
            True if the vector store was removed
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.ModifyStoredElement">
      <summary>
            IStorableElement: Create or modify vector store
            </summary>
      <returns>
            Modified vector store object
            </returns>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIVectorStoreManager.FileManager">
      <summary>
            IFilePackageManager: File Manager
            </summary>
      <remarks>
            This object is needed because the files stored in a Vector Store are just the identifiers of files stored in the file manager.
            Only OpenAI file managers are allowed.
            </remarks>
      <seealso cref="T:AIAssistants.Interfaces.IFileManager" />
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.CreatePackage(System.Collections.Generic.List{System.String},System.String)">
      <summary>
            IFilePackageManager: Create a new File Package
            </summary>
      <param name="fileids">
            List of file identifiers
            </param>
      <param name="name">
            File package name
            </param>
      <returns>
            File package object
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.ListPackages(System.Object[])">
      <summary>
            IFilePackageManager: Get all file collections
            </summary>
      <param name="args">
            Aditional parameter list, in the form of url query parameters (name=value)
            </param>
      <returns>
            List of generic wrapped objects
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.GetPackage(System.String)">
      <summary>
            IFilePackageManager: Get a given file package
            </summary>
      <param name="id">
            File package identifier
            </param>
      <returns>
            File package object
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.ModifyPackage(GlobalCommonEntities.DependencyInjection.ObjectWrapper)">
      <summary>
            IFilePackageManager: Modify a file package
            </summary>
      <param name="package">
            Modified package object
            </param>
      <returns>
            Modified package object
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.DeletePackage(System.String)">
      <summary>
            IFilePackageManager: Delete a file package
            </summary>
      <param name="id">
            File package identifier
            </param>
      <returns>
            True if the package was deleted
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.AddFile(System.String,System.String)">
      <summary>
            IFilePackageManager: Add a file to a package
            </summary>
      <param name="packageid">
            Package identifier
            </param>
      <param name="fileid">
            File identifier
            </param>
      <returns>
            File object
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.ListPackageFiles(System.String,System.Object[])">
      <summary>
            IFilePackageManager: Get all files un a file collections
            </summary>
      <param name="id">
            File package identifier
            </param>
      <param name="args">
            Aditional parameter list, in the form of url query parameters (name=value)
            </param>
      <returns>
            List of files as generic wrapped objects
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.GetPackageFile(System.String,System.String)">
      <summary>
            IFilePackageManager: Get a file from a given file package
            </summary>
      <param name="id">
            File package identifier
            </param>
      <param name="fileid">
            File identifier
            </param>
      <returns>
            File package file object
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.DeletePackageFile(System.String,System.String)">
      <summary>
            IFilePackageManager: Delete a file of a file package
            </summary>
      <param name="id">
            File package identifier
            </param>
      <param name="fileid">
            File identifier
            </param>
      <returns>
            True if the package was deleted
            </returns>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIVectorStoreManager.StoreIdentifier">
      <summary>
            IDocumentStoreManager: Document store identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIVectorStoreManager.MaxDocumentSize">
      <summary>
            IDocumentStoreManager: Maximum allowed document size in bytes
            </summary>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.AllowedFileExtensions(AIAssistants.Interfaces.ToolTypes)">
      <summary>
            IDocumentStoreManager: List of allowed file extensions
            </summary>
      <param name="tool">
            Tool type
            </param>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.MimeTypeForExtension(System.String,AIAssistants.Interfaces.FileFormat@)">
      <summary>
            IDocumentStoreManager: Get the MIME type for a file extension
            </summary>
      <param name="extension">
            File extension
            </param>
      <param name="format">
            File format output parameter
            </param>
      <returns>
            Mime type or null if extension is not allowed
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.ExistsDocument(System.String)">
      <summary>
            IDocumentStoreManager: Check if a document exists in the vector repository
            </summary>
      <param name="documentID">
            Document identifiewr in the local repository
            </param>
      <returns>
            true if the document exists, false otherwise
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.GetTextDocumentContent(System.String)">
      <summary>
            IDocumentStoreManager: Get the content of a text document in the store repository
            </summary>
      <param name="documentName">
            Document name
            </param>
      <returns>
            Document text content
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.StoreDocument(System.String,System.Boolean,System.String,AIAssistants.Interfaces.ToolTypes)">
      <summary>
            IDocumentStoreManager: Strore a document from the application repository
            </summary>
      <param name="documentID">
            Document id in the application repository
            </param>
      <param name="delpkg">
            Remove only from package
            </param>
      <param name="documentBlock">
            Document block id in the vector repository. Null if the document is not part of a block
            </param>
      <param name="tool">
            Tool type for which the document is stored
            </param>
      <returns>
            Document id in the vector repository
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.StoreFromFileManager(System.String)">
      <summary>
            IDocumentStoreManager: Strore a document from the file manager repository
            </summary>
      <param name="documentID">
            Document id in file manager repository
            </param>
      <returns>
            Document id in the store repository
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.StoreFile(System.String,System.Boolean,System.String,AIAssistants.Interfaces.ToolTypes)">
      <summary>
            IDocumentStoreManager: Strore a document from a file
            </summary>
      <param name="path">
            Document path
            </param>
      <param name="delpkg">
            Remove only from package
            </param>
      <param name="documentBlock">
            Document block id in the store repository. Null if the document is not part of a block
            </param>
      <param name="tool">
            Tool type for which the document is stored
            </param>
      <returns>
            Document id in the store repository
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.RemoveDocument(System.String,System.Boolean)">
      <summary>
            IDocumentStoreManager: Remove a document from the vector repository
            </summary>
      <param name="documentID">
            Document id in the vector repository
            </param>
      <param name="delpkg">
            Remove only from package
            </param>
      <returns>
            True if success, false otherwise
            </returns>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.RemoveDocumentBlock(System.String,System.Boolean)">
      <summary>
            IDocumentStoreManager: Remove all documents in a block from the vector repository
            </summary>
      <param name="documentBlock">
            Document block id in the vector repository
            </param>
      <param name="delpkg">
            Remove only from package
            </param>
      <returns>
            True if success, false otherwise
            </returns>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIVectorStoreManager.EnableLog">
      <summary>
            IAppAutomationExtension: Enable or disable logging if the extension has a log file
            </summary>
    </member>
    <member name="P:OpenAIAPI.Elements.OpenAIVectorStoreManager.AppAutomation">
      <summary>
            IAppAutomationExtension: Application automation interface
            </summary>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.GetServices(AIAssistants.Interfaces.IAppAutomation)">
      <summary>
             IAppAutomationExtension: List of extension automation services
            </summary>
      <param name="owner">
            Main IAppAutomation object (represents the application)
            </param>
    </member>
    <member name="M:OpenAIAPI.Elements.OpenAIVectorStoreManager.CallFunction(AIAssistants.Interfaces.IPlayer,AIAssistants.JSON.FunctionBatch)">
      <summary>
            IAppAutomationExtension: Make a call to a function
            </summary>
      <param name="caller">
            Function caller
            </param>
      <param name="calls">
            Block of function calls
            </param>
      <returns>
            FunctionBatch with the call results
            </returns>
      <remarks>
            Use this method to call service functions in the extension.
            Extensions must return null if they do not manage the function call.
            </remarks>
    </member>
    <member name="T:OpenAIAPI.Interfaces.IResponseChat">
      <summary>
            Custom interface to implement OpenAI Responses API as a kind of IChat
            </summary>
      <seealso cref="T:AIAssistants.Interfaces.IChat" />
      <seealso cref="T:AIAssistants.Interfaces.IConversationalPlayer" />
      <seealso cref="T:GlobalCommonEntities.Interfaces.ISelectionObjectProvider" />
      <seealso cref="T:AIAssistants.Interfaces.IStreamReadWriter" />
      <seealso cref="T:AIAssistants.Interfaces.IDocumentAnalyzer" />
      <seealso cref="T:AIAssistants.Interfaces.IStorableElement" />
    </member>
    <member name="T:OpenAIAPI.JSON.AIImage">
      <summary>
            Data generated by the AI model
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AIImage.B64Json">
      <summary>
            The base64-encoded JSON of the generated image, if response_format is b64_json.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AIImage.Url">
      <summary>
            The URL of the generated image, if response_format is url (default).
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AIImage.RevisedPrompt">
      <summary>
            The prompt that was used to generate the image, if there was any revision to the prompt.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.AIImageList">
      <summary>
            Data list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AIImageList.Created">
      <summary>
            Creation date
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AIImageList.Data">
      <summary>
            List of generated images
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AIImageList.Background">
      <summary>
            The background parameter used for the image generation. Either transparent or opaque.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AIImageList.OutputFormat">
      <summary>
            The output format of the image generation. Either png, webp, or jpeg.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AIImageList.Quality">
      <summary>
            The quality of the image generated. Either low, medium, or high.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AIImageList.Size">
      <summary>
            The size of the image generated. Either 1024x1024, 1024x1536, or 1536x1024.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AIImageList.Usage">
      <summary>
            For gpt-image-1 only, the token usage information for the image generation.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ImageTokenUsage">
      <summary>
            For gpt-image-1 only, the token usage information for the image generation.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageTokenUsage.InputTokens">
      <summary>
            The number of tokens (images and text) in the input prompt.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageTokenUsage.OutputTokens">
      <summary>
            The number of output tokens generated by the model.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageTokenUsage.TotalTokens">
      <summary>
            The total number of tokens (images and text) used for the image generation.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageTokenUsage.InputTokensDetail">
      <summary>
            The input tokens detailed information for the image generation.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ImageInputTokensDetail">
      <summary>
            The input tokens detailed information for the image generation.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageInputTokensDetail.ImageTokens">
      <summary>
            The number of image tokens in the input prompt.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageInputTokensDetail.TextTokens">
      <summary>
            The number of text tokens in the input prompt.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ImageRequest">
      <summary>
            Use this class to generate request to the OpenAI Imaging API.
            </summary>
      <seealso cref="T:AIAssistants.Data.APIUIDataSheet" />
    </member>
    <member name="P:OpenAIAPI.JSON.ImageRequest.ImageData">
      <summary>
            The image to edit or use a basis for variations. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageRequest.MaskData">
      <summary>
            An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where image should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as image.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageRequest.Prompt">
      <summary>
            A text description of the desired image(s). The maximum length is 1000 characters for dall-e-2 and 4000 characters for dall-e-3.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageRequest.Model">
      <summary>
            The model to use for image generation. Defaults to dall-e-2.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageRequest.N">
      <summary>
            The number of images to generate. Must be between 1 and 10. For dall-e-3, only n=1 is supported. Defaults to 1.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageRequest.Quality">
      <summary>
            The quality of the image that will be generated. Defaults to standard. hd creates images with finer details and greater consistency across the image. Only supported for dall-e-3.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageRequest.ResponseFormat">
      <summary>
            The format in which the generated images are returned. Must be one of url or b64_json. Defaults to url.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageRequest.Size">
      <summary>
            The size of the generated images. Must be one of 256x256, 512x512, or 1024x1024 for dall-e-2. Must be one of 1024x1024, 1792x1024, or 1024x1792 for dall-e-3 models. Defaults to 1024x1024.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageRequest.Style">
      <summary>
            The style of the generated images. Must be one of vivid or natural. Defaults to vivid. Only supported for dall-e-3.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageRequest.User">
      <summary>
            A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageRequest.Automation">
      <summary>
            Buffer to store an automation step in a multi-step procedure.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ImageRequestWithId">
      <summary>
            Image request with unique identifier
            </summary>
      <remarks>
            This format is used to store image requests in a JSON file and retrieve them by its id.
            </remarks>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageRequestWithId.Identifier">
      <summary>
            Image request identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageRequestWithId.Request">
      <summary>
            Image request
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ImageRequestFileData">
      <summary>
            Image request data file format
            </summary>
      <remarks>
            Structure representing an image requests collection to store in a JSON file.
            </remarks>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageRequestFileData.imageRequests">
      <summary>
            List of image requests.
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.ImageRequestFileData.GetByID(System.String)">
      <summary>
            Get an image request by its identifier.
            </summary>
      <param name="id">
            Request identifier
            </param>
      <returns>
            Data request or null
            </returns>
    </member>
    <member name="M:OpenAIAPI.JSON.ImageRequestFileData.AddImageData(OpenAIAPI.JSON.ImageRequestWithId)">
      <summary>
            Add or replace an image request.
            </summary>
      <param name="data">
            Data data
            </param>
    </member>
    <member name="M:OpenAIAPI.JSON.ImageRequestFileData.LoadFromStream(System.IO.Stream)">
      <summary>
            Load image requests from a stream.
            </summary>
      <param name="stream">
            Stream with the data
            </param>
    </member>
    <member name="M:OpenAIAPI.JSON.ImageRequestFileData.SaveToStream(System.IO.Stream)">
      <summary>
            Save image requests to a stream.
            </summary>
      <param name="stream">
            Stream to save the data
            </param>
    </member>
    <member name="T:OpenAIAPI.JSON.APIConfiguration">
      <summary>
            API configuration schema for JSON files
            </summary>
      <remarks>
            This class contains the configuration of all the Open AI API elements.
            The configuration is stored in a JSON file, which is read and written by the APIConfiguration class.
            There are some satellite JSON files to store the configuration of the chat completions, sound requests, and image requests.
            The configuration of assistants, instead, is stored in the OpenAI cloud database, for they are persistent objects.
            The class ElementConfiguration contains the common configuration for API elements. They are clssified as API managers, players, player assets, and tools.
            </remarks>
      <seealso cref="T:OpenAIAPI.JSON.ElementConfiguration" />
      <seealso cref="T:AIAssistants.JSON.FunctionDef" />
      <seealso cref="T:OpenAIAPI.JSON.ChatRequestFileData" />
      <seealso cref="T:OpenAIAPI.JSON.SoundRequestFileData" />
      <seealso cref="T:OpenAIAPI.JSON.ImageRequestFileData" />
      <seealso cref="!:OpenAIAPIConfiguration.json" />
      <seealso cref="!:ChatCompletions.json" />
      <seealso cref="!:ImageConfiguration.json" />
      <seealso cref="!:SpeechConfiguration.json" />
    </member>
    <member name="P:OpenAIAPI.JSON.APIConfiguration.APIManagers">
      <summary>
            API Manager configuration
            </summary>
      <remarks>
            This is the configuration for IAPIManager objects, ususally there is only one IAPIManager.
            The API key is stored in the Windows Credential Manager. The key name is stored in the Key property of the IAPIManager configuration.
            The class WindowCredentialManager is used to retrieve the API key.
            </remarks>
    </member>
    <member name="P:OpenAIAPI.JSON.APIConfiguration.Players">
      <summary>
            Player configuration list
            </summary>
      <remarks>
            Players are IAssistant, IChat, and IImageGenerator objects.
            </remarks>
    </member>
    <member name="P:OpenAIAPI.JSON.APIConfiguration.Assets">
      <summary>
            Player asset configuration list
            </summary>
      <remarks>
            Assets are ISpeechManager objects.
            </remarks>
    </member>
    <member name="P:OpenAIAPI.JSON.APIConfiguration.Tools">
      <summary>
            Element configuration list
            </summary>
      <remarks>
            Tools are IFileManger, IFilePackageManager, IEmbedding, and ITuningJob objects.
            </remarks>
    </member>
    <member name="P:OpenAIAPI.JSON.APIConfiguration.Functions">
      <summary>
            Function call definitions
            </summary>
      <remarks>
            Definition of common functions to be used by Chats and Assistant players.
            There are functions used to communicate with the application through the IAppAutomation interface.
            </remarks>
    </member>
    <member name="P:OpenAIAPI.JSON.APIConfiguration.ChatCompletions">
      <summary>
            List of chat completion saved configurations
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.APIConfiguration.ChatResponses">
      <summary>
            List of chat responses saved configurations
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.APIConfiguration.SoundData">
      <summary>
            List of speech managers saved configurations
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.APIConfiguration.ImageData">
      <summary>
            Image requests saved configurations
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.APIConfiguration.GetElementConfiguration(System.String,System.String)">
      <summary>
            Get the configuration of a given element
            </summary>
      <param name="id">
            Element unique identifier
            </param>
      <param name="defaultid">
            Default configuration identifier. To get the element endpoints.
            </param>
      <returns>
            Element configuration object
            </returns>
      <remarks>
            Two identifiers are needed, one for the object configuration and another for the default configuration.
            Only default elements have endpoints configuration, to not repeat it unnecesarily for each configured object.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.JSON.APIConfiguration.GetPlayerConfiguration(System.String,System.String)">
      <summary>
            Get the configuration of a given player
            </summary>
      <param name="id">
            Player unique identifier
            </param>
      <param name="defaultid">
            Default configuration identifier. To get the element endpoints.
            </param>
      <returns>
            Player configuration object
            </returns>
      <remarks>
            Two identifiers are needed, one for the object configuration and another for the default configuration.
            Only default elements have endpoints configuration, to not repeat it unnecesarily for each configured object.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.JSON.APIConfiguration.GetPlayerAssetConfiguration(System.String,System.String)">
      <summary>
            Get the configuration of a given player asset
            </summary>
      <param name="id">
            Player asset unique identifier
            </param>
      <param name="defaultid">
            Default configuration identifier. To get the element endpoints.
            </param>
      <returns>
            Player asset configuration object
            </returns>
      <remarks>
            Two identifiers are needed, one for the object configuration and another for the default configuration.
            Only default elements have endpoints configuration, to not repeat it unnecesarily for each configured object.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.JSON.APIConfiguration.GetAPIManagerConfiguration(System.String,System.String,System.Boolean)">
      <summary>
            Get the configuration of a given API manager
            </summary>
      <param name="id">
            API manager unique identifier
            </param>
      <param name="defaultid">
            Default configuration identifier. To get the element endpoints.
            </param>
      <param name="copy">
            Get a copy of the configuration element
            </param>
      <returns>
            API manager configuration object
            </returns>
      <remarks>
            Two identifiers are needed, one for the object configuration and another for the default configuration.
            Only default elements have endpoints configuration, to not repeat it unnecesarily for each configured object.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.JSON.APIConfiguration.GetFunctionConfiguration(System.String)">
      <summary>
            Get the configuration of a given function
            </summary>
      <param name="id">
            Function unique identifier
            </param>
      <returns>
            Function configuration object
            </returns>
    </member>
    <member name="M:OpenAIAPI.JSON.APIConfiguration.ReadFromFile(System.String)">
      <summary>
            Read configuration from a file
            </summary>
      <param name="path">
            Path to the configuration file
            </param>
    </member>
    <member name="M:OpenAIAPI.JSON.APIConfiguration.WriteToFile(System.String)">
      <summary>
            Write configuration to a file
            </summary>
      <param name="path">
            Path to the configuration file
            </param>
    </member>
    <member name="T:OpenAIAPI.JSON.ElementConfiguration">
      <summary>
            IAPIElement configuration in a JSON configuration file.
            </summary>
      <remarks>
            This object is UIDataSheet so it can be edited in the UI.
            </remarks>
      <seealso cref="T:AIAssistants.Data.APIUIDataSheet" />
      <seealso cref="T:GlobalCommonEntities.UI.PropertyEditorInfo" />
    </member>
    <member name="P:OpenAIAPI.JSON.ElementConfiguration.ROProperties">
      <summary>
            Read only versión of the Properties list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ElementConfiguration.Key">
      <summary>
            API Key Name
            </summary>
      <remarks>
            This property is only used for API managers.
            It contains the name of the API key stored in the Windows Credential Manager generic section.
            Use the WindowsCredentialManager class to retrieve the key.
            </remarks>
      <seealso cref="!:WindowsCredentialManager" />
    </member>
    <member name="P:OpenAIAPI.JSON.ElementConfiguration.Identifier">
      <summary>
            Element unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ElementConfiguration.Default">
      <summary>
            Default element configuration
            </summary>
      <remarks>
            There is only one default element configuration for each element type.
            The default element contains the endpoints configuration.
            </remarks>
    </member>
    <member name="P:OpenAIAPI.JSON.ElementConfiguration.Type">
      <summary>
            Player interface name
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ElementConfiguration.Name">
      <summary>
            Player name (optional)
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ElementConfiguration.Description">
      <summary>
            Player description (optional)
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ElementConfiguration.Voice">
      <summary>
            Player voice name (optional)
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ElementConfiguration.Model">
      <summary>
            Player model name (to default to)
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ElementConfiguration.MaxRequestRatePerMinute">
      <summary>
            Maximum number of requests per minute
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ElementConfiguration.MaxRequestRatePerDay">
      <summary>
            Maximum number of requests per day
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ElementConfiguration.Endpoints">
      <summary>
            List of API endpoints. Only default elements have endpoints.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ElementConfiguration.DefEndpoints">
      <summary>
            List of endpoints for non-default elements. Not serialized.
            </summary>
      <remarks>
            This list is filled when the element is created from the default element Endpoints porperty.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.JSON.ElementConfiguration.GetEndpoint(System.String,System.String)">
      <summary>
            Get a given endpoint
            </summary>
      <param name="section">
            Section identifier
            </param>
      <param name="name">
            Endpoint name
            </param>
      <returns>
            APIEndpoint object
            </returns>
    </member>
    <member name="M:OpenAIAPI.JSON.ElementConfiguration.GetEndpointSection(System.String)">
      <summary>
            Get all endpoints in a section
            </summary>
      <param name="section">
            Section identifier
            </param>
      <returns>
            List of APIEndpoint objects
            </returns>
    </member>
    <member name="M:OpenAIAPI.JSON.ElementConfiguration.GetElementCopy">
      <summary>
            Create a copy of this object
            </summary>
      <param name="name">
            Add element name editor
            </param>
      <param name="description">
            Add element description editor
            </param>
      <returns>
            Copy of the current instance
            </returns>
      <remarks>
            To create a new instance of an element, get the default configuration and use GetElementCopy to get a copy of it without identifier.
            </remarks>
    </member>
    <member name="T:OpenAIAPI.JSON.AssistantsResponse">
      <summary>
            Assistant list request response
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AssistantsResponse.Object">
      <summary>
            Object type
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AssistantsResponse.Data">
      <summary>
            List of assistants
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AssistantsResponse.FirstId">
      <summary>
            First identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AssistantsResponse.LastId">
      <summary>
            Last identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AssistantsResponse.HasMore">
      <summary>
            Indicates if there are more pages to load. One page has a maximum of 100 assistants.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.Assistant">
      <summary>
            API assistant definition
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Assistant.ROProperties">
      <summary>
            Read only versión of the Properties list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Assistant.StdUID">
      <summary>
            IStandardObject: Unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Assistant.StdName">
      <summary>
            IStandardObject: Element name
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Assistant.StdDescription">
      <summary>
            IStandardObject: Element description
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Assistant.DataSheet">
      <summary>
            IStandardObject: Information to edit the object
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Assistant.StdModel">
      <summary>
            IAIStandardObject: Model name
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Assistant.Id">
      <summary>
            Unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Assistant.ObjectType">
      <summary>
            Object type
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Assistant.CreatedAt">
      <summary>
            Creation date
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Assistant.Name">
      <summary>
            The name of the assistant. The maximum length is 256 characters.  
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Assistant.Description">
      <summary>
            Assistant description
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Assistant.Model">
      <summary>
            ID of the model to use.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Assistant.Instructions">
      <summary>
            The system instructions that the assistant uses. The maximum length is 256,000 characters.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Assistant.TopP">
      <summary>
            An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Assistant.Temperature">
      <summary>
            What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Assistant.ReasoningEffort">
      <summary>
            Constrains effort on reasoning for reasoning models. 
            Currently supported values are low, medium, and high. 
            Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Assistant.ResponseFormat">
      <summary>
            Specifies the format that the model must output.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Assistant.Tools">
      <summary>
            List of tools enabled for the assistant. Maximum of 128 tools.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Assistant.ToolResources">
      <summary>
            A set of resources used by the assistant's tools. Can be null.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Assistant.ToolResourcesReq">
      <summary>
            A set of resources used by the assistant's tools. Can be null.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Assistant.Metadata">
      <summary>
            Metadata consisting of up to 16 key-value pairs attached to the object. Keys can be up to 64 characters long, and values can be up to 512 characters long.
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.Assistant.NewFileSearch">
      <summary>
            Add a File Search tool to the assistant
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.Assistant.NewCodeInterpreter">
      <summary>
            Add a Code ineterpreter tool to the assistant
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.Assistant.InvokeAction(GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            Invoke UI interface to select objets to add or remove from a tool
            </summary>
      <param name="property">
            Invoker property editor information
            </param>
    </member>
    <member name="M:OpenAIAPI.JSON.Assistant.SetMethodParameterTypes(System.String,GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            This method is called by PropertyEditorInfo to resolve the parameter structure for a given method
            </summary>
      <param name="methodName">
            Method name to resolve
            </param>
      <param name="pinfo">
            PropertyEditorInfo object to configure
            </param>
    </member>
    <member name="T:OpenAIAPI.JSON.CreateAssistant">
      <summary>
            Object used to create a new assistant or modify an existing one
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CreateAssistant.Name">
      <summary>
            The name of the assistant. The maximum length is 256 characters.  
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CreateAssistant.Description">
      <summary>
            Assistant description
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CreateAssistant.Model">
      <summary>
            ID of the model to use.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CreateAssistant.Instructions">
      <summary>
            The system instructions that the assistant uses. The maximum length is 256,000 characters.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CreateAssistant.TopP">
      <summary>
            An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CreateAssistant.Temperature">
      <summary>
            What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CreateAssistant.ReasoningEffort">
      <summary>
            Constrains effort on reasoning for reasoning models. 
            Currently supported values are low, medium, and high. 
            Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CreateAssistant.ResponseFormat">
      <summary>
            Specifies the format that the model must output.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CreateAssistant.Tools">
      <summary>
            List of tools enabled for the assistant. Maximum of 128 tools.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CreateAssistant.ToolResources">
      <summary>
            A set of resources used by the assistant's tools. Can be null.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CreateAssistant.Metadata">
      <summary>
            Metadata consisting of up to 16 key-value pairs attached to the object. Keys can be up to 64 characters long, and values can be up to 512 characters long.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ResponseFormat">
      <summary>
            Response format = string or ResponseFormat = object
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ResponseFormatObject">
      <summary>
            Object eesponse_format definition
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseFormatObject.Type">
      <summary>
            The type of response format being defined: json_schema or json_object
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseFormatObject.Schema">
      <summary>
            The schema for the response format, described as a JSON Schema object.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.JsonSchema">
      <summary>
            json_schema definition
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.JsonSchema.Description">
      <summary>
            A description of what the response format is for, used by the model to determine how to respond in the format.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.JsonSchema.Name">
      <summary>
            The name of the response format. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.JsonSchema.Schema">
      <summary>
            The schema for the response format, described as a JSON Schema object.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.JsonSchema.Strict">
      <summary>
            Whether to enable strict schema adherence when generating the output. If set to true, the model will always follow the exact schema defined in the schema field. Only a subset of JSON Schema is supported when strict is true.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ResponseFormatConverter">
      <summary>
            Assistant response type converter
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolDef.Type">
      <summary>
            GenericType of tool (code_interpreter, file_search, function).
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolDef.FileSearch">
      <summary>
            Configuration options for the file search tool.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolDef.Function">
      <summary>
            Function call definition
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.FileSearchOptions">
      <summary>
            Search options for the file search tool.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearchOptions.MaxNumResults">
      <summary>
            The maximum number of file search results to return. Default is 20 for gpt-4 models, 5 for gpt-3.5-turbo.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearchOptions.RankingOptions">
      <summary>
            Ranking options for the file search.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ToolResources">
      <summary>
            Represents resources used by the assistant's tools.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolResources.CodeInterpreter">
      <summary>
            Resources specific to the code interpreter tool.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolResources.FileSearch">
      <summary>
            Resources specific to the file search tool.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ToolResourcesReq">
      <summary>
            Represents resources used by the assistant's tools. Use with request to create tools
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolResourcesReq.CodeInterpreter">
      <summary>
            Resources specific to the code interpreter tool.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolResourcesReq.FileSearch">
      <summary>
            Resources specific to the file search tool.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.CodeInterpreterResources">
      <summary>
            Resources for the code interpreter tool.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CodeInterpreterResources.FileIds">
      <summary>
            A list of file IDs made available to the code interpreter tool. Maximum of 20 files.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.FileSearchResources">
      <summary>
            Resources for the file search tool.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearchResources.VectorStoreIds">
      <summary>
            The ID of the vector store attached to this assistant. Maximum of 1 vector store.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.FileSearchResourcesReq">
      <summary>
            Resources for the file search tool. Use in request to create tools
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearchResourcesReq.VectorStoreIds">
      <summary>
            The ID of the vector store attached to this assistant. Maximum of 1 vector store.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearchResourcesReq.FileSearch">
      <summary>
            Data to create vector store for file search tool
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ToolResourcesConverter">
      <summary>
            Custom converter for the tool resources to handle different resource types.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ToolResourcesReqConverter">
      <summary>
            Custom converter for the tool resources to handle different resource types.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.BatchRequest">
      <summary>
            Request to buils a line of JSONL to build a batch file
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.BatchRequest.CustomId">
      <summary>
            Identifier for the request
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.BatchRequest.Method">
      <summary>
            HTTP method to use
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.BatchRequest.Url">
      <summary>
            URL to call
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.BatchRequest.Body">
      <summary>
            Request body
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.Body">
      <summary>
            Batch request body
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Body.Model">
      <summary>
            Model to use to respond
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Body.Messages">
      <summary>
            List of messages to respond to
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Body.MaxTokens">
      <summary>
            Max tokens to use
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.BatchMessage">
      <summary>
            Batch message structure
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.BatchMessage.Role">
      <summary>
            Role of the message
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.BatchMessage.Content">
      <summary>
            Messahe content
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.BatchResponse">
      <summary>
            Batch response
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.BatchResponse.Id">
      <summary>
            Unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.BatchResponse.CustomId">
      <summary>
            Request identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.BatchResponse.Response">
      <summary>
            Chat response
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.BatchResponse.Error">
      <summary>
            Error, if any
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ChatResponse">
      <summary>
            Chat response data
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatResponse.StatusCode">
      <summary>
            Response status code
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatResponse.RequestId">
      <summary>
            Request identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatResponse.Body">
      <summary>
            Response body
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ChatResponseBody">
      <summary>
            Ressponse body
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatResponseBody.Id">
      <summary>
            Body identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatResponseBody.Object">
      <summary>
            Object type
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatResponseBody.Created">
      <summary>
            Created timestamp
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatResponseBody.Model">
      <summary>
            Model used to respond
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatResponseBody.Choices">
      <summary>
            List of response choices
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatResponseBody.Usage">
      <summary>
            Usage information
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatResponseBody.ServiceTier">
      <summary>
            User service tier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatResponseBody.SystemFingerprint">
      <summary>
            System fingerprint
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.BatchChoice">
      <summary>
            Batch response choice
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.BatchChoice.Index">
      <summary>
            Index of the choice
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.BatchChoice.Message">
      <summary>
            Response message
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.BatchChoice.Logprobs">
      <summary>
            Response logprobs
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.BatchChoice.FinishReason">
      <summary>
            Finish reason
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ChatMessage">
      <summary>
            Chat response message
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatMessage.Role">
      <summary>
            Role of the message
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatMessage.Content">
      <summary>
            Message content
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatMessage.Refusal">
      <summary>
            Refusal message, if any
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatMessage.Annotations">
      <summary>
            Annotations
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.BatchUsage">
      <summary>
            Token usage information
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.BatchUsage.PromptTokens">
      <summary>
            Prompt tokens used
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.BatchUsage.CompletionTokens">
      <summary>
            Completion tokens used
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.BatchUsage.TotalTokens">
      <summary>
            Total tokens used
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.BatchUsage.PromptTokensDetails">
      <summary>
            Tokens details
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.BatchUsage.CompletionTokensDetails">
      <summary>
            Tokens details
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.TokenDetails">
      <summary>
            Token details
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TokenDetails.CachedTokens">
      <summary>
            Cached tokens used
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TokenDetails.AudioTokens">
      <summary>
            Audio tokens used
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TokenDetails.ReasoningTokens">
      <summary>
            Reasoning tokens used
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TokenDetails.AcceptedPredictionTokens">
      <summary>
            Accepted prediction tokens
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TokenDetails.RejectedPredictionTokens">
      <summary>
            Rejected prediction tokens
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ChatRequest">
      <summary>
            Represents a request to generate a chat completion.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.ROProperties">
      <summary>
            Read only versión of the Properties list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.StdUID">
      <summary>
            IStandardObject: Unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.StdName">
      <summary>
            IStandardObject: Element name
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.StdDescription">
      <summary>
            IStandardObject: Element description
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.DataSheet">
      <summary>
            IStandardObject: Information to edit the object
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.StdModel">
      <summary>
            IAIStandardObject: Model name
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.Id">
      <summary>
            A unique identifier for the chat completion.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.Messages">
      <summary>
            A list of messages comprising the conversation so far. Required.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.Model">
      <summary>
            ID of the model to use. Required.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.Store">
      <summary>
            Defaults to false. Whether or not to store the output of this chat completion request.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.ReasoningEffort">
      <summary>
            o1 and o3-mini models only. 
            Constrains effort on reasoning for reasoning models.Currently supported values are low, medium, and high. 
            Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.Metadata">
      <summary>
            Developer-defined tags and values used for filtering completions in the dashboard. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.FrequencyPenalty">
      <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.LogitBias">
      <summary>
            Modify the likelihood of specified tokens appearing in the completion. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.Logprobs">
      <summary>
            Whether to return log probabilities of the output tokens or not. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.TopLogprobs">
      <summary>
            An integer specifying the number of most likely tokens to return at each token position. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.MaxCompletionTokens">
      <summary>
            An upper bound for the number of tokens that can be generated for a completion. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.Modalities">
      <summary>
            Output types that you would like the model to generate for this request. Most models are capable of generating text, which is the default:
            ["text"]
            The gpt-4o-audio-preview model can also be used to generate audio.To request that this model generate both text and audio responses, you can use:
            ["text", "audio"]
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.Audio">
      <summary>
            Parameters for audio output. Required when audio output is requested with modalities: ["audio"]. 
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.N">
      <summary>
            How many chat completion choices to generate for each input message. Defaults to 1. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.PresencePenalty">
      <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.ResponseFormat">
      <summary>
            An object specifying the format that the model must output. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.Seed">
      <summary>
            If specified, our system will make a best effort to sample deterministically. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.ServiceTier">
      <summary>
            Specifies the latency tier to use for processing the request. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.Stop">
      <summary>
            Up to 4 sequences where the API will stop generating further tokens. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.Stream">
      <summary>
            If set, partial message deltas will be sent as data-only server-sent events. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.StreamOptions">
      <summary>
            Options for streaming response. Only set this when you set stream: true. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.Temperature">
      <summary>
            What sampling temperature to use, between 0 and 2. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.TopP">
      <summary>
            An alternative to sampling with temperature, called nucleus sampling. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.Tools">
      <summary>
            A list of tools the model may call. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.ToolChoice">
      <summary>
            Controls which (if any) tool is called by the model. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.ParallelToolCalls">
      <summary>
            Whether to enable parallel function calling during tool use. Defaults to true. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.User">
      <summary>
            A unique identifier representing your end-user. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.WebSearchToolOptions">
      <summary>
            This tool searches the web for relevant results to use in a response. 
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.Automation">
      <summary>
            Buffer to store an automation step name in a multi-step procedure.
            </summary>
      <summary>
            Buffer to store an automation step in a multi-step procedure.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequest.UserId">
      <summary>
            User identifier in multi-user applications.
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.ChatRequest.InvokeAction(GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            Invoke UI interface to select objets to add or remove from a tool
            </summary>
      <param name="property">
            Invoker property editor information
            </param>
    </member>
    <member name="M:OpenAIAPI.JSON.ChatRequest.SetMethodParameterTypes(System.String,GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            This method is called by PropertyEditorInfo to resolve the parameter structure for a given method
            </summary>
      <param name="methodName">
            Method name to resolve
            </param>
      <param name="pinfo">
            PropertyEditorInfo object to configure
            </param>
    </member>
    <member name="T:OpenAIAPI.JSON.AudioConfig">
      <summary>
            Parameters for audio output. Required when audio output is requested with modalities: ["audio"]
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AudioConfig.Voice">
      <summary>
            The voice the model uses to respond. Supported voices are alloy, ash, ballad, coral, echo, sage, shimmer, and verse
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AudioConfig.Format">
      <summary>
            Specifies the output audio format. Must be one of wav, mp3, flac, opus, or pcm16.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.Message">
      <summary>
            Represents a message in the conversation.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Message.ListId">
      <summary>
            Identifier reference for listing
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Message.Content">
      <summary>
            The contents of the message. Required.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Message.Choices">
      <summary>
            List of choices returned for the message.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Message.Role">
      <summary>
            The role of the message's author. Required. user or system
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Message.Name">
      <summary>
            An optional name for the participant. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Message.ToolCallId">
      <summary>
            Tool call that this message is responding to.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Message.MessageText">
      <summary>
            Message text for listing
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Message.ToolCalls">
      <summary>
            The tool calls generated by the model, such as function calls. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Message.Refusal">
      <summary>
            The refusal message generated by the assistant, if applicable.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Message.Weight">
      <summary>
            Controls whether the assistant message is trained against (0 or 1).
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Message.Audio">
      <summary>
            Data about a previous audio response from the model.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.AudioId">
      <summary>
            Data about a previous audio response from the model.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AudioId.Id">
      <summary>
            Unique identifier for this audio response.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AudioId.ExpiresAt">
      <summary>
            The Unix timestamp (in seconds) for when this audio response will no longer be accessible on the server for use in multi-turn conversations.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AudioId.Data">
      <summary>
            Base64 encoded audio bytes generated by the model, in the format specified in the request.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AudioId.Transcript">
      <summary>
            Transcript of the audio generated by the model.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.StreamOptions">
      <summary>
            Options for streaming response. Only set this when you set stream: true.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.StreamOptions.IncludeUsage">
      <summary>
            If set, an additional chunk will be streamed before the data: [DONE] message. The usage field on this chunk shows the token usage statistics for the entire request, and the choices field will always be an empty array. All other chunks will also include a usage field, but with a null value.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ChatObject">
      <summary>
            Represents a chat completion response.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatObject.Id">
      <summary>
            A unique identifier for the chat completion.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatObject.Choices">
      <summary>
            A list of chat completion choices.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatObject.Created">
      <summary>
            The Unix timestamp (in seconds) of when the chat completion was created.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatObject.Model">
      <summary>
            The model used for the chat completion.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatObject.ServiceTier">
      <summary>
            The service tier used for processing the request. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatObject.SystemFingerprint">
      <summary>
            This fingerprint represents the backend configuration that the model runs with.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatObject.Object">
      <summary>
            The object type, which is always chat.completion.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatObject.Usage">
      <summary>
            Usage statistics for the completion request.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.Choice">
      <summary>
            Represents a chat completion choice.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Choice.FinishReason">
      <summary>
            The reason the model stopped generating tokens. 
            This will be stop if the model hit a natural stop point or a provided stop sequence, 
            length if the maximum number of tokens specified in the request was reached, 
            content_filter if content was omitted due to a flag from our content filters, 
            tool_calls if the model called a tool, 
            or function_call (deprecated) if the model called a function.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Choice.Index">
      <summary>
            The index of the choice in the list of choices.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Choice.Message">
      <summary>
            A chat completion message generated by the model.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Choice.LogProbs">
      <summary>
            log probability information for this choice.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ChoiceMessage">
      <summary>
            Represents a message in the chat completion.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChoiceMessage.Content">
      <summary>
            The contents of the message.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChoiceMessage.Refusal">
      <summary>
            The refusal message generated by the model. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChoiceMessage.ToolCalls">
      <summary>
            The tool calls generated by the model, such as function calls.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChoiceMessage.Role">
      <summary>
            The role of the author of this message.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChoiceMessage.Audio">
      <summary>
            If the audio output modality is requested, this object contains data about the audio response from the model.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.LogProbs">
      <summary>
            Represents log probability information for a choice.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.LogProbs.Content">
      <summary>
            A list of message content tokens with log probability information.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.LogProbs.Refusal">
      <summary>
            A list of message refusal tokens with log probability information.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.TokenLogProbs">
      <summary>
            Represents log probability information for a token.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TokenLogProbs.Token">
      <summary>
            The token.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TokenLogProbs.LogProb">
      <summary>
            The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value -9999.0 is used to signify that the token is very unlikely.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TokenLogProbs.Bytes">
      <summary>
            A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be null if there is no bytes representation for the token.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TokenLogProbs.TopLogProbs">
      <summary>
            List of the most likely tokens and their log probability, at this token position.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.TopLogProb">
      <summary>
            Represents the log probability of a token at a specific position.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TopLogProb.Token">
      <summary>
            The token.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TopLogProb.LogProb">
      <summary>
            The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value -9999.0 is used to signify that the token is very unlikely.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TopLogProb.Bytes">
      <summary>
            A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be null if there is no bytes representation for the token.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ContentPart">
      <summary>
            Represents a part of the content in a chat message.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ContentPart.Type">
      <summary>
            The type of the content part (e.g., text, image_url, input_audio).
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ContentPart.Text">
      <summary>
            The text content.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ContentPart.ImageUrl">
      <summary>
            The URL of the image or the base64 encoded image data.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ContentPart.Audio">
      <summary>
            Base 64 encoded audio data.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ContentPart.Refusal">
      <summary>
            The refusal message generated by the model.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ImageUrl">
      <summary>
            Represents an image URL or base64 encoded image data.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageUrl.Url">
      <summary>
            Either a URL of the image or the base64 encoded image data.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageUrl.Detail">
      <summary>
            Specifies the detail level of the image.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.InputAudio">
      <summary>
            Audio data
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputAudio.Data">
      <summary>
            Base64 encoded audio data. Required
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputAudio.Format">
      <summary>
            The format of the encoded audio data. Currently supports "wav" and "mp3".
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.WebSearchOptions">
      <summary>
            Container for web search tool options
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.WebSearchOptions.SearchContentSize">
      <summary>
            High level guidance for the amount of context window space to use for the search. One of low, medium, or high. medium is the default.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.WebSearchOptions.Location">
      <summary>
            Approximate location parameters for the search.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequestWithId.Identifier">
      <summary>
            IConversation: uniqueIdentifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequestWithId.ChatIdentifier">
      <summary>
            IConversation: uniqueIdentifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequestWithId.Request">
      <summary>
            Chat request
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequestWithId.CreationDate">
      <summary>
            Date and time of creation
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequestWithId.ContextMessages">
      <summary>
            List of standardized messages in the conversation
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.ChatRequestWithId.AddMessage(AIAssistants.Data.ContextMessage)">
      <summary>
            Add a new standard message to the conversation
            </summary>
      <param name="msg">
            Standard message to add
            </param>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequestWithId.StandardMessages">
      <summary>
            IConversation: List of standardized messages in the conversation
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatRequestFileData.chatRequests">
      <summary>
            List of chat requests.
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.ChatRequestFileData.GetByID(System.String)">
      <summary>
            Get a chat request by its identifier.
            </summary>
      <param name="id">
            Request identifier
            </param>
      <returns>
      </returns>
    </member>
    <member name="M:OpenAIAPI.JSON.ChatRequestFileData.AddChatData(OpenAIAPI.JSON.ChatRequestWithId)">
      <summary>
            Add or replace a chat request.
            </summary>
      <param name="data">
            Chat data
            </param>
    </member>
    <member name="M:OpenAIAPI.JSON.ChatRequestFileData.LoadFromStream(System.IO.Stream)">
      <summary>
            Load chat requests from a stream.
            </summary>
      <param name="stream">
            Stream with the data
            </param>
    </member>
    <member name="M:OpenAIAPI.JSON.ChatRequestFileData.SaveToStream(System.IO.Stream)">
      <summary>
            Save chat requests to a stream.
            </summary>
      <param name="stream">
            Stream to save the data
            </param>
    </member>
    <member name="T:OpenAIAPI.JSON.ChatUpdate">
      <summary>
            Data needed to modify an existent chat completion
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatUpdate.Metadata">
      <summary>
            Developer-defined tags and values used for filtering completions in the dashboard. Optional.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ChatMessagesList">
      <summary>
            Chat completion message list request response
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatMessagesList.Object">
      <summary>
            Object type
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatMessagesList.Data">
      <summary>
            List of assistants
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatMessagesList.FirstId">
      <summary>
            First identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatMessagesList.LastId">
      <summary>
            Last identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatMessagesList.HasMore">
      <summary>
            Indicates if there are more pages to load. One page has a maximum of 100 messages.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ChatCompletionList">
      <summary>
            Chat completion list request response
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatCompletionList.Object">
      <summary>
            Object type
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatCompletionList.Data">
      <summary>
            List of assistants
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatCompletionList.FirstId">
      <summary>
            First identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatCompletionList.LastId">
      <summary>
            Last identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatCompletionList.HasMore">
      <summary>
            Indicates if there are more pages to load. One page has a maximum of 100 messages.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ContentConverter">
      <summary>
            Custom converter for the ChatMessage content property.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.UIDataSheetToMessageConverter">
      <summary>
            JsonConverter from Message to UIDataSheet
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "T:OpenAIAPI.JSON.MessageListConverter" -->
    <member name="T:OpenAIAPI.JSON.Conversation">
      <summary>
            Shared responses conversation structure
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Conversation.CreatedAt">
      <summary>
            The time at which the conversation was created, measured in seconds since the Unix epoch.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Conversation.Identifier">
      <summary>
            The unique ID of the conversation.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Conversation.Object">
      <summary>
            The object type, which is always conversation.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Conversation.Metadata">
      <summary>
            Set of 16 key-value pairs that can be attached to an object. 
            This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard. 
            Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Conversation.PendingMessages">
      <summary>
            List of pending messages to be added to the conversation
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Conversation.StandardMessages">
      <summary>
            IConversation: List of standardized messages in the conversation
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.Conversation.GetLastMessageId">
      <summary>
            Last message identifier in the conversation retrieved from the API
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:OpenAIAPI.JSON.Conversation.AddInputMessages(System.Collections.Generic.List{OpenAIAPI.JSON.InputMessage})">
      <summary>
            Add input messages to the conversation.
            </summary>
      <param name="items">
            List of conversation messages retrieved from the API
            </param>
      <remarks>
            THis is an auxiliary function. InputMessages are needed to match their identifiers to the ContextMessages.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.JSON.Conversation.GetInputMessages">
      <summary>
            Conversation input messages as IUIDataSheet objects
            </summary>
      <returns>
            List of IUIDataSheet InputMessages
            </returns>
    </member>
    <member name="M:OpenAIAPI.JSON.Conversation.AddMessage(AIAssistants.Data.ContextMessage)">
      <summary>
            Add a new standard message to the conversation
            </summary>
      <param name="msg">
            Standard message to add
            </param>
    </member>
    <member name="T:OpenAIAPI.JSON.ConversationRequest">
      <summary>
            Request to create a Conversation object
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ConversationRequest.Items">
      <summary>
            Initial items to include in the conversation context. You may add up to 20 items at a time.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ConversationRequest.Metadata">
      <summary>
            Set of 16 key-value pairs that can be attached to an object. 
            This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard. 
            Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ConversationUpdate">
      <summary>
            Request to update a Conversation object
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ConversationUpdate.Metadata">
      <summary>
            Set of 16 key-value pairs that can be attached to an object. 
            This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard. 
            Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ConversationItems">
      <summary>
            Request to add items to a Conversation object
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ConversationItems.Items">
      <summary>
            The items to add to the conversation. You may add up to 20 items at a time.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.EmbeddingRequest">
      <summary>
            Request to create an embedding vector representing the input text.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.EmbeddingRequest.Input">
      <summary>
            Input text to embed, encoded as a string or array of tokens. To embed multiple inputs in a single request, pass an array of strings or array of token arrays.
            The input must not exceed the max input tokens for the model (8192 tokens for text-embedding-ada-002), cannot be an empty string, and any array must be 2048 dimensions or less.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.EmbeddingRequest.Model">
      <summary>
            ID of the model to use.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.EmbeddingRequest.EncodingFormat">
      <summary>
            The format to return the embeddings in. Can be either "float" or "base64". Defaults to "float".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.EmbeddingRequest.Dimensions">
      <summary>
            The number of dimensions the resulting output embeddings should have. Only supported in text-embedding-3 and later models.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.EmbeddingRequest.User">
      <summary>
            A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.Embedding">
      <summary>
            Represents an embedding vector returned by embedding endpoint.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Embedding.Index">
      <summary>
            The index of the embedding in the list of embeddings.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Embedding.EmbeddingVector">
      <summary>
            The embedding vector, which is a list of floats. The length of the vector depends on the model as listed in the embedding guide.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Embedding.ObjectType">
      <summary>
            The object type, which is always "embedding".
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.EmbeddingList">
      <summary>
            List of Embedding objects.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.EmbeddingList.Object">
      <summary>
            Object type, which is always "list".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.EmbeddingList.Data">
      <summary>
            List of embeddings.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.EmbeddingList.Model">
      <summary>
            Model used to generate the embeddings.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.EmbeddingList.Usage">
      <summary>
            Token usage information.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.FileObject">
      <summary>
            Represents a file object.
            </summary>
      <remarks>
            Files are managed as lists of objects. Their properties do not need edition, so they are standard objects and use Browsable and DisplayName attributes to populate properties and columns.
            </remarks>
    </member>
    <member name="P:OpenAIAPI.JSON.FileObject.StdUID">
      <summary>
            IStandardObject: Unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileObject.StdName">
      <summary>
            IStandardObject: Element name
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileObject.StdDescription">
      <summary>
            IStandardObject: Element description
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileObject.DataSheet">
      <summary>
            IStandardObject: Information to edit the object
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileObject.StdFileSize">
      <summary>
            File size
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileObject.StdFileDate">
      <summary>
            File creation date
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileObject.Id">
      <summary>
            The file identifier, which can be referenced in the API endpoints.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileObject.Bytes">
      <summary>
            The size of the file, in bytes.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileObject.CreatedAt">
      <summary>
            The Unix timestamp (in seconds) for when the file was created.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileObject.Filename">
      <summary>
            The name of the file.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileObject.Object">
      <summary>
            The object type, which is always file.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileObject.Purpose">
      <summary>
            The intended purpose of the file.
            Supported values are assistants, assistants_output, batch, batch_output, fine-tune, fine-tune-results, and vision.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.FileList">
      <summary>
            List of file objects
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileList.FirstId">
      <summary>
            First file identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileList.LastId">
      <summary>
            Last file identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileList.HasMore">
      <summary>
            There are more files to retrieve (Per-page limit is 10000)
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.FileExpirationPolicy">
      <summary>
            File expiration policy
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.FineTuningJobRequest">
      <summary>
            Represents a request to create a fine-tuning job.
            </summary>
      <remarks>
            This is the class used to request a fine-tuning job in the OpenAI Fine-tuning API. 
            It is a UIDataSheet object that can be edited in the UI.
            </remarks>
      <seealso cref="T:AIAssistants.Data.APIUIDataSheet" />
      <seealso cref="T:GlobalCommonEntities.UI.PropertyEditorInfo" />
      <seealso cref="T:AIAssistants.Interfaces.IAIStandardObject" />
      <seealso cref="T:GlobalCommonEntities.Interfaces.IStandardObject" />
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobRequest.StdUID">
      <summary>
            IStandardObject: Unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobRequest.StdName">
      <summary>
            IStandardObject: Element name
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobRequest.StdDescription">
      <summary>
            IStandardObject: Element description
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobRequest.DataSheet">
      <summary>
            IStandardObject: Information to edit the object
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobRequest.StdModel">
      <summary>
            IAIStandardObject: Model name
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobRequest.Model">
      <summary>
            The name of the model to fine-tune. You can select one of the supported models.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobRequest.TrainingFile">
      <summary>
            The ID of an uploaded file that contains training data.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobRequest.Hyperparameters">
      <summary>
            The hyperparameters used for the fine-tuning job.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobRequest.Suffix">
      <summary>
            A string of up to 64 characters that will be added to your fine-tuned model name.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobRequest.ValidationFile">
      <summary>
            The ID of an uploaded file that contains validation data.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobRequest.Integrations">
      <summary>
            A list of integrations to enable for your fine-tuning job.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobRequest.Seed">
      <summary>
            The seed controls the reproducibility of the job.
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.FineTuningJobRequest.InvokeAction(GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            Invoke UI interface to select or remove files
            </summary>
      <param name="property">
            Invoker property editor information
            </param>
    </member>
    <member name="M:OpenAIAPI.JSON.FineTuningJobRequest.SetMethodParameterTypes(System.String,GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            This method is called by PropertyEditorInfo to resolve the parameter structure for a given method
            </summary>
      <param name="methodName">
            Method name to resolve
            </param>
      <param name="pinfo">
            PropertyEditorInfo object to configure
            </param>
    </member>
    <member name="T:OpenAIAPI.JSON.Hyperparameters">
      <summary>
            Represents the hyperparameters for a fine-tuning job.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Hyperparameters.BatchSize">
      <summary>
            Number of examples in each batch. Defaults to "auto".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Hyperparameters.LearningRateMultiplier">
      <summary>
            Scaling factor for the learning rate. Defaults to "auto.Range 0.01 - 2.0".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Hyperparameters.NEpochs">
      <summary>
            The number of epochs to train the model for. Defaults to "auto".
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.Integration">
      <summary>
            Represents an integration to enable for a fine-tuning job.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Integration.Type">
      <summary>
            The type of integration to enable. Currently, only "wandb" is supported.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Integration.WandB">
      <summary>
            The settings for your integration with Weights and Biases.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.WandBIntegration">
      <summary>
            Represents the settings for Weights and Biases integration.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.WandBIntegration.Project">
      <summary>
            The name of the project that the new run will be created under.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.WandBIntegration.Name">
      <summary>
            A display name to set for the run.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.WandBIntegration.Entity">
      <summary>
            The entity to use for the run.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.WandBIntegration.Tags">
      <summary>
            A list of tags to be attached to the newly created run.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.FineTuningJob">
      <summary>
            Represents a fine-tuning job that has been created through the OpenAI Fine-tuning API.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJob.Id">
      <summary>
            The object identifier, which can be referenced in the API endpoints.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJob.CreatedAt">
      <summary>
            The Unix timestamp (in seconds) for when the fine-tuning job was created.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJob.Error">
      <summary>
            For fine-tuning jobs that have failed, this will contain more information on the cause of the failure.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJob.FineTunedModel">
      <summary>
            The name of the fine-tuned model that is being created. The value will be null if the fine-tuning job is still running.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJob.FinishedAt">
      <summary>
            The Unix timestamp (in seconds) for when the fine-tuning job was finished. The value will be null if the fine-tuning job is still running.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJob.Hyperparameters">
      <summary>
            The hyperparameters used for the fine-tuning job.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJob.Model">
      <summary>
            The base model that is being fine-tuned.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJob.Object">
      <summary>
            The object type, which is always "fine_tuning.job".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJob.OrganizationId">
      <summary>
            The organization that owns the fine-tuning job.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJob.ResultFiles">
      <summary>
            The compiled results file ID(s) for the fine-tuning job. You can retrieve the results with the Files API.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJob.Status">
      <summary>
            The current status of the fine-tuning job, which can be either validating_files, queued, running, succeeded, failed, or cancelled.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJob.TrainedTokens">
      <summary>
            The total number of billable tokens processed by this fine-tuning job. The value will be null if the fine-tuning job is still running.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJob.TrainingFile">
      <summary>
            The file ID used for training. You can retrieve the training data with the Files API.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJob.ValidationFile">
      <summary>
            The file ID used for validation. You can retrieve the validation results with the Files API.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJob.Integrations">
      <summary>
            A list of integrations to enable for this fine-tuning job.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJob.Seed">
      <summary>
            The seed used for the fine-tuning job.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJob.EstimatedFinish">
      <summary>
            The Unix timestamp (in seconds) for when the fine-tuning job is estimated to finish. The value will be null if the fine-tuning job is not running.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJob.Events">
      <summary>
            Fine-tuning job events list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJob.Checkpoints">
      <summary>
            Fine-tuning job checkpoints list
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.FineTuningError">
      <summary>
            Represents an error in a fine-tuning job.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningError.Code">
      <summary>
            A machine-readable error code.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningError.Message">
      <summary>
            A human-readable error message.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningError.Param">
      <summary>
            The parameter that was invalid, usually training_file or validation_file. This field will be null if the failure was not parameter-specific.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.TuningJobEvent">
      <summary>
            Represents a fine-tuning job event.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TuningJobEvent.Id">
      <summary>
            The object identifier for the fine-tuning job event.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TuningJobEvent.CreatedAt">
      <summary>
            The Unix timestamp (in seconds) for when the fine-tuning job event was created.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TuningJobEvent.Level">
      <summary>
            The severity level of the event.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TuningJobEvent.Message">
      <summary>
            The message describing the fine-tuning job event.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TuningJobEvent.Object">
      <summary>
            The object type, which is always "fine_tuning.job.event".
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.TuningJobCheckpoint">
      <summary>
            Represents a model checkpoint for a fine-tuning job that is ready to use.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TuningJobCheckpoint.Id">
      <summary>
            The checkpoint identifier, which can be referenced in the API endpoints.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TuningJobCheckpoint.CreatedAt">
      <summary>
            The Unix timestamp (in seconds) for when the checkpoint was created.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TuningJobCheckpoint.FineTunedModelCheckpoint">
      <summary>
            The name of the fine-tuned checkpoint model that is created.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TuningJobCheckpoint.StepNumber">
      <summary>
            The step number that the checkpoint was created at.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TuningJobCheckpoint.Metrics">
      <summary>
            Metrics at the step number during the fine-tuning job.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TuningJobCheckpoint.FineTuningJobId">
      <summary>
            The name of the fine-tuning job that this checkpoint was created from.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TuningJobCheckpoint.Object">
      <summary>
            The object type, which is always "fine_tuning.job.checkpoint".
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.CheckpointMetrics">
      <summary>
            Represents the metrics at a specific step during a fine-tuning job.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CheckpointMetrics.Step">
      <summary>
            The step number for the metrics.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CheckpointMetrics.TrainLoss">
      <summary>
            The training loss at the step.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CheckpointMetrics.TrainMeanTokenAccuracy">
      <summary>
            The training mean token accuracy at the step.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CheckpointMetrics.ValidLoss">
      <summary>
            The validation loss at the step.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CheckpointMetrics.ValidMeanTokenAccuracy">
      <summary>
            The validation mean token accuracy at the step.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CheckpointMetrics.FullValidLoss">
      <summary>
            The full validation loss at the step.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CheckpointMetrics.FullValidMeanTokenAccuracy">
      <summary>
            The full validation mean token accuracy at the step.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.CompletionTrainingItem">
      <summary>
            Represents a per-line training example of a fine-tuning input file for completions models.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CompletionTrainingItem.Prompt">
      <summary>
            The input prompt for this training example.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CompletionTrainingItem.Completion">
      <summary>
            The desired completion for this training example.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ChatTrainingItem">
      <summary>
            Represents a per-line training example of a fine-tuning input file for chat models.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatTrainingItem.Messages">
      <summary>
            A list of messages comprising the conversation so far.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatTrainingItem.ParallelToolCalls">
      <summary>
            Whether to enable parallel function calling during tool use.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ChatTrainingItem.Tools">
      <summary>
            A list of tools that the model may generate JSON inputs for.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.FineTuningJobList">
      <summary>
            List of Fine-tuning jobs
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobList.Object">
      <summary>
            Object type identifier. Always "list".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobList.Data">
      <summary>
            List of VectorStore objects
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobList.FirstId">
      <summary>
            First object identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobList.LastId">
      <summary>
            Last object identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobList.HasMore">
      <summary>
            List has more pages
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.FineTuningJobEventList">
      <summary>
            List of Fine-tuning job events
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobEventList.Object">
      <summary>
            Object type identifier. Always "list".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobEventList.Data">
      <summary>
            List of VectorStore objects
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobEventList.FirstId">
      <summary>
            First object identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobEventList.LastId">
      <summary>
            Last object identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobEventList.HasMore">
      <summary>
            List has more pages
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.FineTuningJobCPList">
      <summary>
            List of Fine-tuning job checkpoints
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobCPList.Object">
      <summary>
            Object type identifier. Always "list".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobCPList.Data">
      <summary>
            List of VectorStore objects
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobCPList.FirstId">
      <summary>
            First object identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobCPList.LastId">
      <summary>
            Last object identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FineTuningJobCPList.HasMore">
      <summary>
            List has more pages
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.StringOrNumberConverter">
      <summary>
            Converter for fields that can be either a string or a number
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.JsonlMessage">
      <summary>
            Simple message with a role and a content
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.JsonlMessage.role">
      <summary>
            Role of the player in the conversation
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.JsonlMessage.Content">
      <summary>
            Message content
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.JsonlMessageList">
      <summary>
            List of messages for a single interaction
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.JsonlMessageList.Messages">
      <summary>
            Messages in the interaction
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.RelationsToMessageList">
      <summary>
            Convertor of a collection of TypeRelationList files into a single JsonlMessageList collection file.
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.RelationsToMessageList.CovertToStchemaBlock(System.String,System.Collections.Generic.List{System.String})">
      <summary>
            ISchemaBlockConverter: Converts a list of files with TypeRelationList format into a single file of JsonlMessageList.
            </summary>
      <param name="filename">
            Resulting file name.
            </param>
      <param name="items">
            List of files to integrate. All of them must have a format matching with TypeRelationList.
            </param>
    </member>
    <member name="T:OpenAIAPI.JSON.ModelData">
      <summary>
            Model identification
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ModelData.Id">
      <summary>
            Model unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ModelData.Object">
      <summary>
            Object type
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ModelData.Created">
      <summary>
            Date and time of creation
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ModelData.OwnedBy">
      <summary>
            Model owner
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ModelDeletion">
      <summary>
            Model deletion status
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ModelDeletion.Id">
      <summary>
            Model unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ModelDeletion.Object">
      <summary>
            Object type
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ModelDeletion.Deleted">
      <summary>
            Deletion status
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ModelList">
      <summary>
            List of models
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ModelList.Object">
      <summary>
            Object type
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ModelList.Data">
      <summary>
            List of models
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.ROProperties">
      <summary>
            Read only versión of the Properties list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.StdUID">
      <summary>
            IStandardObject: Unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.StdName">
      <summary>
            IStandardObject: Element name
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.StdDescription">
      <summary>
            IStandardObject: Element description
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.DataSheet">
      <summary>
            IStandardObject: Information to edit the object
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.StdModel">
      <summary>
            IAIStandardObject: Model name
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.Id">
      <summary>
            A unique identifier for the chat completion.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.Background">
      <summary>
            Whether to run the model response in the background.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.ConversationId">
      <summary>
            The conversation that this response belongs to. 
            Items from this conversation are prepended to input_items for this response request. 
            Input items and output items from this response are automatically added to this conversation after this response completes.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.Input">
      <summary>
            Text, image, or file inputs to the model, used to generate a response.
            Can be a single string or a list of input items.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.Model">
      <summary>
            ID of the model to use. Required.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.Include">
      <summary>
            Specify additional output data to include in the model response. Currently supported values are:
            file_search_call.results: Include the search results of the file search tool call.
            message.input_image.image_url: Include image urls from the input message.
            computer_call_output.output.image_url: Include image urls from the computer call output.
            reasoning.encrypted_content: Includes an encrypted version of reasoning tokens in reasoning item outputs. 
            This enables reasoning items to be used in multi-turn conversations when using the Responses API statelessly 
            (like when the store parameter is set to false, or when an organization is enrolled in the zero data retention program).
            code_interpreter_call.outputs: Includes the outputs of python code execution in code interpreter tool call items.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.Instructions">
      <summary>
            Inserts a system (or developer) message as the first item in the model's context.
            When using along with previous_response_id, the instructions from a previous response will not be carried over to the next response.
            This makes it simple to swap out system (or developer) messages in new responses.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.MaxOutputTokens">
      <summary>
            An upper bound for the number of tokens that can be generated for a response, including visible output tokens and reasoning tokens. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.Metadata">
      <summary>
            Developer-defined tags and values used for filtering completions in the dashboard. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.ParallelToolCalls">
      <summary>
            Whether to enable parallel function calling during tool use. Defaults to true. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.PreviousResponseId">
      <summary>
            The unique ID of the previous response to the model. Use this to create multi-turn conversations. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.Prompt">
      <summary>
            Reference to a prompt template and its variables.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.ReasoningConfig">
      <summary>
            Configuration options for reasoning models. o-series models only.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.ServiceTier">
      <summary>
            Specifies the latency tier to use for processing the request. This parameter is relevant for customers subscribed to the scale tier service:
            If set to 'auto', and the Project is Scale tier enabled, the system will utilize scale tier credits until they are exhausted.
            If set to 'auto', and the Project is not Scale tier enabled, the request will be processed using the default service tier with a lower uptime SLA and no latency guarantee.
            If set to 'default', the request will be processed using the default service tier with a lower uptime SLA and no latency guarantee.
            If set to 'flex', the request will be processed with the Flex Processing service tier.Learn more.
            When not set, the default behavior is 'auto'.
            When this parameter is set, the response body will include the service_tier utilized.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.Store">
      <summary>
            Defaults to false. Whether to store the generated model response for later retrieval via API.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.Stream">
      <summary>
            If set, partial message deltas will be sent as data-only server-sent events. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.Temperature">
      <summary>
            What sampling temperature to use, between 0 and 2. 
            Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. 
            We generally recommend altering this or top_p but not both.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.Format">
      <summary>
            An object specifying the format that the model must output.
            Configuring { "type": "json_schema" } enables Structured Outputs, which ensures the model will match your supplied JSON schema.
            Learn more in the Structured Outputs guide.
            The default format is { "type": "text" }
            with no additional options.
            Not recommended for gpt-4o and newer models:
            Setting to { "type": "json_object" }
            enables the older JSON mode, which ensures the message the model generates is valid JSON.Using json_schema is preferred for models that support it.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.ToolChoice">
      <summary>
            How the model should select which tool (or tools) to use when generating a response. 
            See the tools parameter to see how to specify which tools the model can call.
            Controls which (if any) tool is called by the model.
            none means the model will not call any tool and instead generates a message.
            auto means the model can pick between generating a message or calling one or more tools.
            required means the model must call one or more tools.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.Tools">
      <summary>
            An array of tools the model may call while generating a response. You can specify which tool to use by setting the tool_choice parameter.
            The two categories of tools you can provide the model are:
            Built-in tools: Tools that are provided by OpenAI that extend the model's capabilities, like web search or file search.
            Function calls(custom tools): Functions that are defined by you, enabling the model to call your own code.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.TopP">
      <summary>
            An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. 
            So 0.1 means only the tokens comprising the top 10% probability mass are considered.
            We generally recommend altering this or temperature but not both.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.Truncation">
      <summary>
            The truncation strategy to use for the model response.
            auto: If the context of this response and previous ones exceeds the model's context window size, the model will truncate the response 
            to fit the context window by dropping input items in the middle of the conversation.
            disabled(default) : If a model response will exceed the context window size for a model, the request will fail with a 400 error.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.User">
      <summary>
            A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.Automation">
      <summary>
            Buffer to store an automation step in a multi-step procedure.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequest.UserId">
      <summary>
            User identifier in multi-user applications.
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.ResponseRequest.NewFileSearch">
      <summary>
            Add a File Search tool to the assistant
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.ResponseRequest.NewComputerUse">
      <summary>
            Add a Computer Use tool to the assistant
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.ResponseRequest.NewWebSearch">
      <summary>
            Add a Web Search tool to the assistant
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.ResponseRequest.InvokeAction(GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            Invoke UI interface to select objets to add or remove from a tool
            </summary>
      <param name="property">
            Invoker property editor information
            </param>
    </member>
    <member name="M:OpenAIAPI.JSON.ResponseRequest.SetMethodParameterTypes(System.String,GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            This method is called by PropertyEditorInfo to resolve the parameter structure for a given method
            </summary>
      <param name="methodName">
            Method name to resolve
            </param>
      <param name="pinfo">
            PropertyEditorInfo object to configure
            </param>
    </member>
    <member name="T:OpenAIAPI.JSON.PromptTemplate">
      <summary>
            Prompt template and its variables.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.PromptTemplate.Id">
      <summary>
            The unique identifier of the prompt template to use.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.PromptTemplate.Variables">
      <summary>
            Optional map of values to substitute in for variables in your prompt. The substitution values can either be strings, or other Response input types like images or files.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.PromptTemplate.Version">
      <summary>
            Optional version of the prompt template.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.RToolChoice">
      <summary>
            Represents the tool choice for a response request.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RToolChoice.Type">
      <summary>
            The type of the tool. Required.
            Use none, auto, or required to specify the tool call behavior for the model.
            none means the model will not call any tool and instead generates a message.
            auto means the model can pick between generating a message or calling one or more tools.
            required means the model must call one or more tools.
            use file_search, web_search_preview, computer_use_preview, code_interpreter, mcp, image_generation to force a hosted tool.
            use function to force a specific function call. You must specify the function name,then.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RToolChoice.Name">
      <summary>
            The name of the function to call. Required if the tool type is function. Response chats only.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.ROProperties">
      <summary>
            Read only versión of the Properties list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.StdUID">
      <summary>
            IStandardObject: Unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.StdName">
      <summary>
            IStandardObject: Element name
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.StdDescription">
      <summary>
            IStandardObject: Element description
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.DataSheet">
      <summary>
            IStandardObject: Information to edit the object
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.StdModel">
      <summary>
            IAIStandardObject: Model name
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.Id">
      <summary>
            A unique identifier for the chat completion.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.Background">
      <summary>
            Whether to run the model response in the background.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.ConversationId">
      <summary>
            The conversation that this response belongs to. Input items and output items from this response are automatically added to this conversation.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.CreatedAt">
      <summary>
            Unix timestamp (in seconds) of when this Response was created.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.Error">
      <summary>
            An error object returned when the model fails to generate a Response.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.IncompleteDetails">
      <summary>
            Details about why the response is incomplete.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.Model">
      <summary>
            ID of the model to use. Required.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.Instructions">
      <summary>
            Inserts a system (or developer) message as the first item in the model's context.
            When using along with previous_response_id, the instructions from a previous response will not be carried over to the next response.
            This makes it simple to swap out system (or developer) messages in new responses.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.MaxOutputTokens">
      <summary>
            An upper bound for the number of tokens that can be generated for a response, including visible output tokens and reasoning tokens. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.Metadata">
      <summary>
            Developer-defined tags and values used for filtering completions in the dashboard. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.Object">
      <summary>
            The object type of this resource - always set to response.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.Status">
      <summary>
            The status of the response generation. One of completed, failed, in_progress, or incomplete.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.ParallelToolCalls">
      <summary>
            Whether to enable parallel function calling during tool use. Defaults to true. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.PreviousResponseId">
      <summary>
            The unique ID of the previous response to the model. Use this to create multi-turn conversations. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.Prompt">
      <summary>
            Reference to a prompt template and its variables.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.ReasoningConfig">
      <summary>
            Configuration options for reasoning models. o-series models only.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.ServiceTier">
      <summary>
            Specifies the latency tier to use for processing the request. This parameter is relevant for customers subscribed to the scale tier service:
            If set to 'auto', and the Project is Scale tier enabled, the system will utilize scale tier credits until they are exhausted.
            If set to 'auto', and the Project is not Scale tier enabled, the request will be processed using the default service tier with a lower uptime SLA and no latency guarantee.
            If set to 'default', the request will be processed using the default service tier with a lower uptime SLA and no latency guarantee.
            If set to 'flex', the request will be processed with the Flex Processing service tier.Learn more.
            When not set, the default behavior is 'auto'.
            When this parameter is set, the response body will include the service_tier utilized.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.Temperature">
      <summary>
            What sampling temperature to use, between 0 and 2. 
            Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. 
            We generally recommend altering this or top_p but not both.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.Format">
      <summary>
            An object specifying the format that the model must output.
            Configuring { "type": "json_schema" } enables Structured Outputs, which ensures the model will match your supplied JSON schema.
            Learn more in the Structured Outputs guide.
            The default format is { "type": "text" }
            with no additional options.
            Not recommended for gpt-4o and newer models:
            Setting to { "type": "json_object" }
            enables the older JSON mode, which ensures the message the model generates is valid JSON.Using json_schema is preferred for models that support it.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.Output">
      <summary>
            An array of content items generated by the model.
            The length and order of items in the output array is dependent on the model's response.
            Rather than accessing the first item in the output array and assuming it's an assistant message with the content generated by the model, you might consider using the output_text property where supported in SDKs.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.OutputText">
      <summary>
            SDK-only convenience property that contains the aggregated text output from all output_text items in the output array, if any are present. Supported in the Python and JavaScript SDKs.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.ToolChoice">
      <summary>
            How the model should select which tool (or tools) to use when generating a response. 
            See the tools parameter to see how to specify which tools the model can call.
            Controls which (if any) tool is called by the model.
            none means the model will not call any tool and instead generates a message.
            auto means the model can pick between generating a message or calling one or more tools.
            required means the model must call one or more tools.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.Tools">
      <summary>
            An array of tools the model may call while generating a response. You can specify which tool to use by setting the tool_choice parameter.
            The two categories of tools you can provide the model are:
            Built-in tools: Tools that are provided by OpenAI that extend the model's capabilities, like web search or file search.
            Function calls(custom tools): Functions that are defined by you, enabling the model to call your own code.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.TopP">
      <summary>
            An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. 
            So 0.1 means only the tokens comprising the top 10% probability mass are considered.
            We generally recommend altering this or temperature but not both.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.Truncation">
      <summary>
            The truncation strategy to use for the model response.
            auto: If the context of this response and previous ones exceeds the model's context window size, the model will truncate the response 
            to fit the context window by dropping input items in the middle of the conversation.
            disabled(default) : If a model response will exceed the context window size for a model, the request will fail with a 400 error.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.PromptCacheKey">
      <summary>
            Used by OpenAI to cache responses for similar requests to optimize your cache hit rates.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.SafetyIdentifier">
      <summary>
            A stable identifier used to help detect users of your application that may be violating OpenAI's usage policies. 
            The IDs should be a string that uniquely identifies each user. We recommend hashing their username or email address, in order to avoid sending us any identifying information.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseObject.Usage">
      <summary>
            Represents token usage details including input tokens, output tokens, a breakdown of output tokens, and the total tokens used.
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.ResponseObject.GetOutputText">
      <summary>
            Build a string from the Output property with all text messages.
            </summary>
      <returns>
            String with all text messages from the Output property.
            </returns>
    </member>
    <member name="M:OpenAIAPI.JSON.ResponseObject.GetOutputMessagesText(System.String,System.Int32)">
      <summary>
            Build a string from the Output property with all text messages.
            </summary>
      <param name="pname">
            Player Name for the ContextMessage
            </param>
      <param name="connection">
            Connection number for the ContextMessage
            </param>
      <returns>
            List with all context messages from the Output property.
            </returns>
    </member>
    <member name="M:OpenAIAPI.JSON.ResponseObject.GetActivityFeedback">
      <summary>
            Get response elements that can be shown as feedback while processing the request
            </summary>
      <returns>
            list of feedback messages as new-line separated string
            </returns>
    </member>
    <member name="M:OpenAIAPI.JSON.ResponseObject.InvokeAction(GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            Invoke UI interface to select objets to add or remove from a tool
            </summary>
      <param name="property">
            Invoker property editor information
            </param>
    </member>
    <member name="M:OpenAIAPI.JSON.ResponseObject.SetMethodParameterTypes(System.String,GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            This method is called by PropertyEditorInfo to resolve the parameter structure for a given method
            </summary>
      <param name="methodName">
            Method name to resolve
            </param>
      <param name="pinfo">
            PropertyEditorInfo object to configure
            </param>
    </member>
    <member name="T:OpenAIAPI.JSON.ConversationId">
      <summary>
            Conversation identifier object.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ConversationId.Id">
      <summary>
            Conversation identifier.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.TokenUsage">
      <summary>
            Represents token usage details including input tokens, output tokens, a breakdown of output tokens, and the total tokens used.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TokenUsage.InputTokens">
      <summary>
            The number of input tokens.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TokenUsage.InputTokensDetails">
      <summary>
            A detailed breakdown of the input tokens.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TokenUsage.OutputTokens">
      <summary>
            The number of output tokens.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TokenUsage.OutputTokensDetails">
      <summary>
            A detailed breakdown of the output tokens.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TokenUsage.TotalTokens">
      <summary>
            The total number of tokens used.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.RTokenDetails">
      <summary>
            Token details
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RTokenDetails.CachedTokens">
      <summary>
            Cached tokens used
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RTokenDetails.ReasoningTokens">
      <summary>
            Cached tokens used
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ResponseError">
      <summary>
            An error object returned when the model fails to generate a Response.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseError.Code">
      <summary>
            The error code for the response.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseError.Message">
      <summary>
            A human-readable description of the error.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.Reasoning">
      <summary>
            Reasoning parameters
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Reasoning.ReasoningEffort">
      <summary>
            o1 and o3-mini models only. 
            Constrains effort on reasoning for reasoning models.Currently supported values are low, medium, and high. 
            Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Reasoning.Summary">
      <summary>
            A summary of the reasoning performed by the model. This can be useful for debugging and understanding the model's reasoning process. One of auto, concise, or detailed.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ResponseText">
      <summary>
            Configuration options for a text response from the model. Can be plain text or structured JSON data.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseText.Format">
      <summary>
            An object specifying the format that the model must output.
            Configuring { "type": "json_schema" } enables Structured Outputs, which ensures the model will match your supplied JSON schema. 
            Learn more in the Structured Outputs guide. The default format is { "type": "text" } with no additional options. 
            Not recommended for gpt-4o and newer models: 
            Setting to { "type": "json_object" } enables the older JSON mode, which ensures the message the model generates is valid JSON.
            Using json_schema is preferred for models that support it.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.TextFormat">
      <summary>
            An object specifying the format that the model must output.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TextFormat.Type">
      <summary>
            The type of response format being defined. text, json_object, or json_schema. 
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TextFormat.Name">
      <summary>
            The name of the response format. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64. json_schema.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TextFormat.Schema">
      <summary>
            JSON schema object 
            JSON Schema response format.Used to generate structured JSON responses. json_schema.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TextFormat.Description">
      <summary>
            A description of what the response format is for, used by the model to determine how to respond in the format. json_schema.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TextFormat.Strict">
      <summary>
            Whether to enable strict schema adherence when generating the output. 
            If set to true, the model will always follow the exact schema defined in the schema field. 
            Only a subset of JSON Schema is supported when strict is true. json_schema.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ResponseTool">
      <summary>
            The two categories of tools you can provide the model are:
            Built-in tools: Tools that are provided by OpenAI that extend the model's capabilities, like web search or file search.
            Function calls(custom tools): Functions that are defined by you, enabling the model to call your own code.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.Type">
      <summary>
            The type of the tool. file_search, function, computer_use_preview, web_search_preview.         
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.VectorStoreIds">
      <summary>
            The ID of the vector store attached to this response. file_search.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.Filters">
      <summary>
            A filter to apply based on file attributes. file_search.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.MaxResults">
      <summary>
            The maximum number of results to return. This number should be between 1 and 50 inclusive. file_search.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.RankingOptions">
      <summary>
            Ranking options for search. file_search.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.Name">
      <summary>
            The name of the function to call. function.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.Parameters">
      <summary>
            A JSON schema object describing the parameters of the function.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.Strict">
      <summary>
            Whether to enforce strict parameter validation. Default true. function.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.Description">
      <summary>
            A description of the function. Used by the model to determine whether or not to call the function.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.DisplayWidth">
      <summary>
            The width of the computer display. computer_use_preview.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.DisplayHeight">
      <summary>
            The height of the computer display. computer_use_preview.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.Environment">
      <summary>
            The type of computer environment to control. computer_use_preview.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.SearchContextSize">
      <summary>
            High level guidance for the amount of context window space to use for the search. One of low, medium, or high. medium is the default. web_search_preview.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.UserLocation">
      <summary>
            Approximate location parameters for the search. web_search_preview.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.ServerLabel">
      <summary>
            A label for this MCP server, used to identify it in tool calls. mcp.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.ServerUrl">
      <summary>
            The URL for the MCP server. mcp.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.AllowedTools">
      <summary>
            String list of allowed tool names or a filter object of type McpAllowedTools. mcp
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.Headers">
      <summary>
            Optional HTTP headers to send to the MCP server. Use for authentication or other purposes. mcp.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.RequireApproval">
      <summary>
            Defaults to always. Specify which of the MCP server's tools require approval. mcp.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.CodeInterpreterContainer">
      <summary>
            The code interpreter container. Can be a container ID or an object that specifies uploaded file IDs to make available to your code. code_interpreter.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.Background">
      <summary>
            Background type for the generated image. One of transparent, opaque, or auto. Default: auto. image_generator.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.InputImageMask">
      <summary>
            Optional mask for inpainting. Contains image_url (string, optional) and file_id (string, optional). image_generator.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.Model">
      <summary>
            The image generation model to use. Default: gpt-image-1. image_generator.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.Moderation">
      <summary>
            Moderation level for the generated image. Default: auto. image_generator.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.OutputCompression">
      <summary>
            Compression level for the output image. Default: 100. image_generator.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.OutputFormat">
      <summary>
            The output format of the generated image. One of png, webp, or jpeg. Default: png. image_generator.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.PartialImages">
      <summary>
            Number of partial images to generate in streaming mode, from 0 (default value) to 3. image_generator.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.Quality">
      <summary>
            The quality of the generated image. One of low, medium, high, or auto. Default: auto. image_generator.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.Size">
      <summary>
            The size of the generated image. One of 1024x1024, 1024x1536, 1536x1024, or auto. Default: auto. image_generator.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseTool.Function">
      <summary>
            ResponseTool / FunctionDef conversion
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.ResponseTool.InvokeAction(GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            Invoke UI interface to select objets to add or remove from a tool
            </summary>
      <param name="property">
            Invoker property editor information
            </param>
    </member>
    <member name="T:OpenAIAPI.JSON.UserLocation">
      <summary>
            Approximate location parameters for the search.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.UserLocation.Type">
      <summary>
            The type of location approximation. Always approximate.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.UserLocation.Location">
      <summary>
            Approximate location parameters for the search. Use for Chat completion.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.UserLocation.City">
      <summary>
            Free text input for the city of the user, e.g. San Francisco. Use for Responses.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.UserLocation.Country">
      <summary>
            The two-letter ISO country code of the user, e.g. US. Use for Responses.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.UserLocation.Region">
      <summary>
            Free text input for the region of the user, e.g. California. Use for Responses.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.UserLocation.TimeZone">
      <summary>
            The IANA timezone of the user, e.g. America/Los_Angeles. Use for Responses.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ApproximateLocation">
      <summary>
            Approximate location parameters for the search.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ApproximateLocation.City">
      <summary>
            Free text input for the city of the user, e.g. San Francisco.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ApproximateLocation.Country">
      <summary>
            The two-letter ISO country code of the user, e.g. US.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ApproximateLocation.Region">
      <summary>
            Free text input for the region of the user, e.g. California.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ApproximateLocation.TimeZone">
      <summary>
            The IANA timezone of the user, e.g. America/Los_Angeles.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.FileSearchFilter">
      <summary>
            A filter to apply based on file attributes.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearchFilter.Key">
      <summary>
            The key to compare against the value.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearchFilter.Type">
      <summary>
            Comparison filters: Specifies the comparison operator: eq, ne, gt, gte, lt, lte.
            eq: equals
            ne: not equal
            gt: greater than
            gte: greater than or equal
            lt: less than
            lte: less than or equal
            Compound filters: Type of operation: and or or. 
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearchFilter.Value">
      <summary>
            The value to compare against the attribute key; supports string, number, or boolean types.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearchFilter.Filters">
      <summary>
            Array of filters to combine. Items can be ComparisonFilter or CompoundFilter.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ResponseItem">
      <summary>
            Response Items Container
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseItem.TextInput">
      <summary>
            A text input to the model, equivalent to a text input with the user role.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseItem.Content">
      <summary>
            A message input to the model with a role indicating instruction following hierarchy. 
            Instructions given with the developer or system role take precedence over instructions given with the user role. 
            Messages with the assistant role are presumed to have been generated by the model in previous interactions.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputMessage.TextInput">
      <summary>
            A text input to the model.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputMessage.Id">
      <summary>
            The unique ID of the output message.
            The unique ID of the file search tool call.
            The unique ID of the computer call.
            The ID of the computer tool call output.
            The unique ID of the web search tool call.       
            The unique ID of the function tool call.
            The unique identifier of the reasoning content.
            The unique ID of the image generation call.
            The unique ID of the code interpreter tool call.
            The unique ID of the local shell call.
            The unique ID of the MCP tool call.
            The unique ID of the MCP list.
            The unique ID of the MCP approval request.
            The ID of the item to reference.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputMessage.Status">
      <summary>
            The status of the message input. One of in_progress, completed, or incomplete. Populated when input items are returned via API.
            The status of the file search tool call. One of in_progress, searching, incomplete or failed.       
            The status of the web search tool call.
            The status of the item. One of in_progress, completed, or incomplete. Populated when items are returned via API.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputMessage.Role">
      <summary>
            The role of the message input. One of user, assistant, system, or developer.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputMessage.Type">
      <summary>
            The type of the message input. message, file_search_call, computer_call, computer_call_output, web_search_call, function_call, 
            function_call_output, reasoning, item_reference, image_generation_call, code_interpreter_call, local_shell_call, mcp_call, mcp_list_tools, mcp_approval_request.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputMessage.Content">
      <summary>
            A list of one or many input items to the model, containing different content types.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputMessage.Queries">
      <summary>
            The queries used to search for files. Type = file_search_tool.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputMessage.Results">
      <summary>
            The results of the file search tool call. Type = file_search_tool or code_interpreter.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputMessage.PendingSecurityChecks">
      <summary>
            The pending safety checks for the computer call. Type = computer_call.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputMessage.SecurityChecks">
      <summary>
            The safety checks reported by the API that have been acknowledged by the developer. Type = computer_call_output.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputMessage.CallId">
      <summary>
            An identifier used when responding to the tool call with output. Type = computer_call, computer_call_output.
            The unique ID of the function tool call generated by the model. Type = function_call, function_call_output.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputMessage.Action">
      <summary>
            Computer call tool action data. Type = computer_call.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputMessage.Output">
      <summary>
            A computer screenshot image used with the computer use tool. Type = computer_call_output.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputMessage.Arguments">
      <summary>
            A JSON string of the arguments to pass to the function. TYpe = function_call.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputMessage.FunctionName">
      <summary>
            The name of the function to run. Type = function_call.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputMessage.Summary">
      <summary>
            Reasoning text contents. Type = reasoning.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputMessage.EncryptedContent">
      <summary>
            The encrypted content of the reasoning item - populated when a response is generated with reasoning.encrypted_content in the include parameter.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputMessage.Result">
      <summary>
            The generated image encoded in base64. image_generation_tool.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputMessage.Code">
      <summary>
            The code to run. code_interpreter.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputMessage.ContainerID">
      <summary>
            The ID of the container used to run the code. code_interpreter.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputMessage.ServerLabel">
      <summary>
            The label of the MCP server running the tool. mcp_call, mcp_list_tools.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputMessage.Error">
      <summary>
            The error from the tool call, if any. mcp_call, mcp_list_tools.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputMessage.Tools">
      <summary>
            The tools available on the server. mcp_list_tools.
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.InputMessage.Contains(System.String)">
      <summary>
            Check if the message contains the specified text.
            </summary>
      <param name="message">
            Message to search for
            </param>
      <returns>
            True if the message contains the specified text, otherwise false.
            </returns>
    </member>
    <member name="T:OpenAIAPI.JSON.ReasoningSummary">
      <summary>
            A summary of the reasoning performed by the model.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ReasoningSummary.Text">
      <summary>
            A short summary of the reasoning used by the model when generating the response.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ReasoningSummary.Type">
      <summary>
            The reasoning summary type.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.InputItem">
      <summary>
            Item body data
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputItem.Type">
      <summary>
            The type of the input item. Can be input_text, input_image, input_file, output_text, refusal, computer_screenshot, summary_text.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputItem.Text">
      <summary>
            The text input to the model. Type = input_text.
            A text output from the model. Type = output_text.
            A short summary of the reasoning used by the model when generating the response. Type = summary_text.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputItem.Detail">
      <summary>
            The detail level of the image. One of high, low, or auto. Defaults to auto. Type = input_image.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputItem.FileId">
      <summary>
            The ID of the file to be sent to the model. Type = input_image, input_file.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputItem.ImageUrl">
      <summary>
            The URL or base64 of the image. Type = input_image.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputItem.FileData">
      <summary>
            The content of the file to be sent to the model. Type = input_file.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputItem.FileName">
      <summary>
            The name of the file to be sent to the model. Type = input_file.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputItem.Annotations">
      <summary>
            The annotations of the text output. Type = input_file.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputItem.Refusal">
      <summary>
            The refusal explanationfrom the model. Type = refusal.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.OutputItem">
      <summary>
            Output item
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.OutputItem.Text">
      <summary>
            Text string output
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.OutputItem.ScreenShot">
      <summary>
            Screen capture data
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.FileSearchCodeInterpreterResults">
      <summary>
            Result of the file search tool call or code interpreter.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearchCodeInterpreterResults.FileId">
      <summary>
            The unique ID of the file.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearchCodeInterpreterResults.FileName">
      <summary>
            The name of the file.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearchCodeInterpreterResults.Score">
      <summary>
            The relevance score of the file - a value between 0 and 1.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearchCodeInterpreterResults.Text">
      <summary>
            The text that was retrieved from the file.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearchCodeInterpreterResults.Attributes">
      <summary>
            Set of 16 key-value pairs that can be attached to an object. 
            This can be useful for storing additional information about the object in a structured format, and querying for objects via API or the dashboard. 
            Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters, booleans, or numbers.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearchCodeInterpreterResults.Logs">
      <summary>
            The logs of the code interpreter tool call.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearchCodeInterpreterResults.Type">
      <summary>
            The type of the code interpreter text output. Always logs.
            The type of the code interpreter file output. Always files.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearchCodeInterpreterResults.Files">
      <summary>
            List of generated files from the code interpreter tool call.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.CodeInterpreterFileOutput">
      <summary>
            The output of a code interpreter tool call that is a file.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CodeInterpreterFileOutput.FileId">
      <summary>
            The ID of the file.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CodeInterpreterFileOutput.MimeType">
      <summary>
            The MIME type of the file.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.SecurityCheck">
      <summary>
            Safety check reported by the API that has been acknowledged by the developer.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.SecurityCheck.Code">
      <summary>
            The type of the pending safety check.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.SecurityCheck.Id">
      <summary>
            The ID of the pending safety check.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.SecurityCheck.Message">
      <summary>
            Details about the pending safety check.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ToolCallAction">
      <summary>
            Tool call action
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolCallAction.Type">
      <summary>
            Specifies the event type. For a click action, this property is always set to click.
            Specifies the event type. For a double click action, this property is always set to double_click.
            Specifies the event type. For a drag action, this property is always set to drag.
            Specifies the event type. For a move action, this property is always set to move.
            Specifies the event type. For a screenshot action, this property is always set to screenshot.
            Specifies the event type. For a scroll action, this property is always set to scroll.
            Specifies the event type. For a type action, this property is always set to type.
            Specifies the event type. For a wait action, this property is always set to wait.
            Specifies the event type. For a local shell call, this property is always set to exec.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolCallAction.Button">
      <summary>
            ndicates which mouse button was pressed during the click. One of left, right, wheel, back, or forward.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolCallAction.X">
      <summary>
            The x-coordinate where the click occurred.
            The x-coordinate where the double click occurred.
            The x-coordinate to move to.
            The x-coordinate where the scroll occurred.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolCallAction.Y">
      <summary>
            The y-coordinate where the click occurred.
            The y-coordinate where the double click occurred.
            The y-coordinate to move to.
            The y-coordinate where the scroll occurred.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolCallAction.Path">
      <summary>
            An array of coordinates representing the path of the drag action. Coordinates will appear as an array of objects.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolCallAction.Keys">
      <summary>
            The combination of keys the model is requesting to be pressed. This is an array of strings, each representing a key.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolCallAction.ScrollX">
      <summary>
            The horizontal scroll distance.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolCallAction.ScrollY">
      <summary>
            The vertical scroll distance.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolCallAction.Text">
      <summary>
            The text to type.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolCallAction.Command">
      <summary>
            The command to run. Local shell.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolCallAction.Environment">
      <summary>
            Environment variables to set for the command. Local shell.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolCallAction.Timeout">
      <summary>
            Optional timeout in milliseconds for the command. Local shell.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolCallAction.User">
      <summary>
            Optional user to run the command as. Local shell.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolCallAction.WorkingDirectory">
      <summary>
            Optional working directory to run the command in. Local shell.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.TCCoordinate">
      <summary>
            Tool call drag coordinates
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TCCoordinate.X">
      <summary>
            The x-coordinate.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TCCoordinate.Y">
      <summary>
            The y-coordinate.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.McpTool">
      <summary>
            MCP Tool description.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.McpTool.InputSchema">
      <summary>
            The JSON schema describing the tool's input.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.McpTool.Name">
      <summary>
            The name of the tool.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.McpTool.Description">
      <summary>
            The description of the tool.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.McpTool.Annotations">
      <summary>
            Additional annotations about the tool.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ResponseAnnotation">
      <summary>
            Annotation of a text output
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseAnnotation.Type">
      <summary>
            The type of annotation (e.g., file_citation, file_path, url_citation, container_file_citation).
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseAnnotation.FileId">
      <summary>
            The file id. Type = file_citation, container_file_citation, and file_path.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseAnnotation.Index">
      <summary>
            The index of the file in the list of files. Type = file_citation, and file_path.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseAnnotation.Title">
      <summary>
            The title of the web resource. Type = url_citation.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseAnnotation.Url">
      <summary>
            The URL of the web resource. Type = url_citation.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseAnnotation.StartIndex">
      <summary>
            The start index of the file path in the text. Type = url_citation, container_file_citation.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseAnnotation.EndIndex">
      <summary>
            The end index of the file path in the text. Type = url_citation, container_file_citation.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseAnnotation.ContainerID">
      <summary>
            The ID of the container file. Type = container_file_citation.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ContentLogProbs">
      <summary>
            Response output message log probs
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ContentLogProbs.LogProbs">
      <summary>
            logprobs
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ContentLogProbs.TopLogProbs">
      <summary>
            top_logprobs
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.LogProbEntry">
      <summary>
            A single logprob entry.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.LogProbEntry.Bytes">
      <summary>
            bytes
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.LogProbEntry.LogProb">
      <summary>
            logprob
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.LogProbEntry.Token">
      <summary>
            token
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.McpAllowedTools">
      <summary>
            A filter object to specify which tools are allowed.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.McpAllowedTools.ToolNames">
      <summary>
            List of allowed tool names.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.McpToolApproval">
      <summary>
            Specify which of the MCP server's tools require approval.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.McpToolApproval.Always">
      <summary>
            A list of tools that always require approval.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.McpToolApproval.Never">
      <summary>
            A list of tools that never require approval.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.McpToolApproval.SimplePolicy">
      <summary>
            Specify a single approval policy for all tools. One of always or never.
            When set to always, all tools will require approval.
            When set to never, all tools will not require approval.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.McpToolApprovalList">
      <summary>
            A list of tools that require (or do not require) approval.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.McpToolApprovalList.ToolNames">
      <summary>
            List of tools that (do or do not) require approval.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ResponseCodeInterpreter">
      <summary>
            A tool that runs Python code to help generate a response to a prompt.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseCodeInterpreter.ContainerID">
      <summary>
            The container ID. When this property has value, the container propery serializes as a string.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseCodeInterpreter.Type">
      <summary>
            The type of the container. Always auto. Set this porperty to serialize contaner as an object.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseCodeInterpreter.Files">
      <summary>
            An optional list of uploaded files to make available to your code.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.InputImageMask">
      <summary>
            Optional mask for inpainting. Contains file_id (string, optional) and image_url (string, optional).
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputImageMask.FileId">
      <summary>
            File ID for the mask image.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.InputImageMask.ImageUrl">
      <summary>
            Base64-encoded mask image.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ResponseItemList">
      <summary>
            Response list items request response
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseItemList.Object">
      <summary>
            Object type
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseItemList.Data">
      <summary>
            List of assistants
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseItemList.FirstId">
      <summary>
            First identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseItemList.LastId">
      <summary>
            Last identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseItemList.HasMore">
      <summary>
            Indicates if there are more pages to load. One page has a maximum of 100 items.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequestWithId.Identifier">
      <summary>
            IConversation: uniqueIdentifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequestWithId.ResponseIdentifier">
      <summary>
            IConversation: uniqueIdentifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequestWithId.Request">
      <summary>
            Response request
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequestWithId.Conversation">
      <summary>
            Conversation object to share messages
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequestWithId.CreationDate">
      <summary>
            Date and time of creation
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequestWithId.ContextMessages">
      <summary>
            List of standardized messages in the conversation
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.ResponseRequestWithId.AddMessage(AIAssistants.Data.ContextMessage)">
      <summary>
            Add a new standard message to the conversation
            </summary>
      <param name="msg">
            Standard message to add
            </param>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequestWithId.StandardMessages">
      <summary>
            IConversation: List of standardized messages in the conversation
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ResponseRequestFileData.chatResponses">
      <summary>
            List of chat requests.
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.ResponseRequestFileData.GetByID(System.String)">
      <summary>
            Get a response request by its identifier.
            </summary>
      <param name="id">
            Request identifier
            </param>
    </member>
    <member name="M:OpenAIAPI.JSON.ResponseRequestFileData.AddChatData(OpenAIAPI.JSON.ResponseRequestWithId)">
      <summary>
            Add or replace a response request.
            </summary>
      <param name="data">
            Response data
            </param>
    </member>
    <member name="M:OpenAIAPI.JSON.ResponseRequestFileData.LoadFromStream(System.IO.Stream)">
      <summary>
            Load chat responses from a stream.
            </summary>
      <param name="stream">
            Stream with the data
            </param>
    </member>
    <member name="M:OpenAIAPI.JSON.ResponseRequestFileData.SaveToStream(System.IO.Stream)">
      <summary>
            Save response requests to a stream.
            </summary>
      <param name="stream">
            Stream to save the data
            </param>
    </member>
    <member name="T:OpenAIAPI.JSON.ResponseItemConverter">
      <summary>
            Custom converter for the response item subtypes.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.InputMessageConverter">
      <summary>
            Custom converter for the response item subtypes.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.OutputItemConverter">
      <summary>
            Serializer for output return items.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ItemContentConverter">
      <summary>
            Custom converter for the ChatMessage content property.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.InputMessageListConverter">
      <summary>
            Serialization of List InputMessage as or from List of IUIDataSheet
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.RToolChoiceConverter">
      <summary>
            Custom converter for ToolChoice to handle both string and object types.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.McpAllowedToolsConverter">
      <summary>
            Custom converter for McpAllowedTools to handle both array and object formats.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.McpToolApprovalConverter">
      <summary>
            Custom converter for McpToolApproval to handle both string and object formats.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.SoundRequest">
      <summary>
            Request to generate a sound from text
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.SoundRequest.Model">
      <summary>
            Model to use. values: "tts-1", "tts-1-hd"
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.SoundRequest.Input">
      <summary>
            Text to convert to speech
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.SoundRequest.Voice">
      <summary>
            Voice to use. values: alloy, echo, fable, onyx, nova, and shimmer
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.SoundRequest.ResponseFormat">
      <summary>
            Response format. values: mp3, opus, aac, flac, wav, and pcm.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.SoundRequest.Speed">
      <summary>
            The speed of the generated audio. Select a value from 0.25 to 4.0. 1.0 is the default.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.SoundRequest.Language">
      <summary>
            The language of the input audio. Supplying the input language in ISO-639-1 format will improve accuracy and latency.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.SoundRequest.Prompt">
      <summary>
            An optional text to guide the model's style or continue a previous audio segment. The prompt should match the audio language.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.SoundRequest.Instructions">
      <summary>
            Control the voice of your generated audio with additional instructions. Does not work with tts-1 or tts-1-hd.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.Transcription">
      <summary>
            Object returned by translation and transcription requests
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Transcription.Text">
      <summary>
            Transcription of the input audio
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Transcription.Language">
      <summary>
            The language of the input audio.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Transcription.Duration">
      <summary>
            The duration of the input audio.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Transcription.Words">
      <summary>
            Extracted words and their corresponding timestamps.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Transcription.Segments">
      <summary>
            Segments of the transcribed text and their corresponding details.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Transcription.Usage">
      <summary>
            Usage statistics for this request.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.AudioUsage">
      <summary>
            Token usage statistics for the request.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AudioUsage.Type">
      <summary>
            The type of the usage object. Always tokens for this variant.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AudioUsage.InputTokens">
      <summary>
            Number of input tokens billed for this request.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AudioUsage.OutputTokens">
      <summary>
            Number of output tokens generated.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AudioUsage.TotalTokens">
      <summary>
            Total number of tokens used (input + output).
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AudioUsage.InputTokenDetails">
      <summary>
            Details about the input tokens billed for this request.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.AudioTokenDetails">
      <summary>
            Details about the input tokens billed for this request.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AudioTokenDetails.AudioTokens">
      <summary>
            Number of audio tokens billed for this request.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AudioTokenDetails.TextTokens">
      <summary>
            Number of text tokens billed for this request.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.AudioDurationUsage">
      <summary>
            Usage statistics for models billed by audio input duration.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AudioDurationUsage.Seconds">
      <summary>
            Duration of the input audio in seconds.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AudioDurationUsage.Type">
      <summary>
            The type of the usage object. Always duration for this variant.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.TranscriptionWord">
      <summary>
            Extracted words and their corresponding timestamps.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TranscriptionWord.Word">
      <summary>
            The text content of the word.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TranscriptionWord.Start">
      <summary>
            Start time of the word in seconds.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TranscriptionWord.End">
      <summary>
            End time of the word in seconds.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.TranscriptionSegment">
      <summary>
            Represents a transcription segment.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TranscriptionSegment.Id">
      <summary>
            Unique identifier of the segment.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TranscriptionSegment.Seek">
      <summary>
            Seek offset of the segment.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TranscriptionSegment.Start">
      <summary>
            Start time of the segment in seconds.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TranscriptionSegment.End">
      <summary>
            End time of the segment in seconds.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TranscriptionSegment.Text">
      <summary>
            Text content of the segment.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TranscriptionSegment.Tokens">
      <summary>
            Array of token IDs for the text content.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TranscriptionSegment.Temperature">
      <summary>
            Temperature parameter used for generating the segment.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TranscriptionSegment.AvgLogprob">
      <summary>
            Average logprob of the segment. If the value is lower than -1, consider the logprobs failed.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TranscriptionSegment.CompressionRatio">
      <summary>
            Compression ratio of the segment. If the value is greater than 2.4, consider the compression failed.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TranscriptionSegment.NoSpeechProb">
      <summary>
            Probability of no speech in the segment. If the value is higher than 1.0 and the avg_logprob is below -1, consider this segment silent.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.SoundRequestWithId">
      <summary>
            Sound request with unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.SoundRequestWithId.Identifier">
      <summary>
            Speech ChatIdentifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.SoundRequestWithId.Request">
      <summary>
            Chat request
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.SoundRequestFileData">
      <summary>
            Soud request data file format
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.SoundRequestFileData.soundRequests">
      <summary>
            List of chat requests.
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.SoundRequestFileData.GetByID(System.String)">
      <summary>
            Get a sound request by its identifier.
            </summary>
      <param name="id">
            Request identifier
            </param>
      <returns>
            Sound request or null
            </returns>
    </member>
    <member name="M:OpenAIAPI.JSON.SoundRequestFileData.AddSoundData(OpenAIAPI.JSON.SoundRequestWithId)">
      <summary>
            Add or replace a sound request.
            </summary>
      <param name="data">
            Speech data
            </param>
    </member>
    <member name="M:OpenAIAPI.JSON.SoundRequestFileData.LoadFromStream(System.IO.Stream)">
      <summary>
            Load sound requests from a stream.
            </summary>
      <param name="stream">
            Stream with the data
            </param>
    </member>
    <member name="M:OpenAIAPI.JSON.SoundRequestFileData.SaveToStream(System.IO.Stream)">
      <summary>
            Save sound requests to a stream.
            </summary>
      <param name="stream">
            Stream to save the data
            </param>
    </member>
    <member name="T:OpenAIAPI.JSON.ThreadLog">
      <summary>
            Assistants thread store
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadLog.Assistants">
      <summary>
            List of assistants and their threads
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.ThreadLog.ReadFromFile(System.String)">
      <summary>
            Read thread log from a file
            </summary>
      <param name="path">
            File path
            </param>
    </member>
    <member name="M:OpenAIAPI.JSON.ThreadLog.ReadFromFileAsync(System.String)">
      <summary>
            Read thread log from a file asynchronously
            </summary>
      <param name="path">
            File path
            </param>
    </member>
    <member name="M:OpenAIAPI.JSON.ThreadLog.WriteToFile(System.String)">
      <summary>
            Write thread log to a file
            </summary>
      <param name="path">
            File path
            </param>
    </member>
    <member name="M:OpenAIAPI.JSON.ThreadLog.WriteToFileAsync(System.String)">
      <summary>
            Write thread log to a file asynchronously
            </summary>
      <param name="path">
            File path
            </param>
    </member>
    <member name="T:OpenAIAPI.JSON.AsssistantThreads">
      <summary>
            List of threads related with an assistant
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AsssistantThreads.AssistantID">
      <summary>
            Asssitant unique identifier
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ThreadInfo">
      <summary>
            Thread id and creation date
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadInfo.StdUID">
      <summary>
            IStandardObject: Unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadInfo.StdName">
      <summary>
            IStandardObject: Element name
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadInfo.StdDescription">
      <summary>
            IStandardObject: Element description
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadInfo.DataSheet">
      <summary>
            IStandardObject: Information to edit the object
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadInfo.ThreadId">
      <summary>
            Thread unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadInfo.Identifier">
      <summary>
            IConversation: Unique identifier of the conversation
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadInfo.StandardMessages">
      <summary>
            IConversation: List of standardized messages in the conversation
            </summary>
      <remarks>
            Always null. This is just an object intended for listing thread identifiers.
            </remarks>
    </member>
    <member name="T:OpenAIAPI.JSON.ThreadMessage">
      <summary>
            Represents a message within a thread.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadMessage.Id">
      <summary>
            The identifier, which can be referenced in API endpoints.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadMessage.Object">
      <summary>
            The object type, which is always "thread.message".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadMessage.CreatedAt">
      <summary>
            The Unix timestamp (in seconds) for when the message was created.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadMessage.ThreadId">
      <summary>
            The thread ID that this message belongs to.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadMessage.Status">
      <summary>
            The status of the message, which can be either in_progress, incomplete, or completed.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadMessage.IncompleteDetails">
      <summary>
            On an incomplete message, details about why the message is incomplete.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadMessage.CompletedAt">
      <summary>
            The Unix timestamp (in seconds) for when the message was completed.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadMessage.IncompleteAt">
      <summary>
            The Unix timestamp (in seconds) for when the message was marked as incomplete.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadMessage.Role">
      <summary>
            The entity that produced the message. One of user or assistant.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadMessage.Content">
      <summary>
            The content of the message in an array of text and/or images.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadMessage.AssistantId">
      <summary>
            If applicable, the ID of the assistant that authored this message.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadMessage.RunId">
      <summary>
            The ID of the run associated with the creation of this message. Value is null when messages are created manually using the create message or create thread endpoints.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadMessage.Attachments">
      <summary>
            A list of files attached to the message, and the tools they were added to. Can be null.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadMessage.Metadata">
      <summary>
            Metadata consisting of up to 16 key-value pairs attached to the object. Keys can be up to 64 characters long, and values can be up to 512 characters long.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ThreadMessageRequest">
      <summary>
            Request to create a new Thread Message
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadMessageRequest.Role">
      <summary>
            The entity that produced the message. One of user or assistant.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadMessageRequest.Content">
      <summary>
            The content of the message in an array of text and/or images.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadMessageRequest.Attachments">
      <summary>
            A list of files attached to the message, and the tools they were added to. Can be null.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadMessageRequest.Metadata">
      <summary>
            Metadata consisting of up to 16 key-value pairs attached to the object. Keys can be up to 64 characters long, and values can be up to 512 characters long.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadMessageRequest.ForceTool">
      <summary>
            Ad-hoc field to inform the assistant to use a specific tool as requested by the user.
            </summary>
      <remarks>
            As this is not a standard field, it is not included in the JSON serialization to avoid API errors.
            The request for a run is provided by the user in a message. Run usage is an internal feature of the OpenAI API.
            </remarks>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadMessageRequest.FunctionName">
      <summary>
            Ad-hoc field to inform the assistant to call a specific function.
            </summary>
      <remarks>
            As this is not a standard field, it is not included in the JSON serialization to avoid API errors.
            The request for a run is provided by the user in a message. Run usage is an internal feature of the OpenAI API.
            </remarks>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadMessageRequest.Automation">
      <summary>
            Buffer to store an automation step in a multi-step procedure.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadMessageRequest.UserId">
      <summary>
            User identifier in multi-user applications.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.IncompleteDetails">
      <summary>
            Represents details about why a message is incomplete.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.IncompleteDetails.Reason">
      <summary>
            The reason the message is incomplete.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.MessageContent">
      <summary>
            Represents the content of a message, which can include text and/or images.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.MessageContent.Type">
      <summary>
            The type of content (e.g., text, image_file, image_url, file_citation, file_path, refusal).
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.MessageContent.Text">
      <summary>
            The text content if the type is "text".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.MessageContent.ImageFile">
      <summary>
            The image file content if the type is "image_file".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.MessageContent.ImageUrl">
      <summary>
            The image URL content if the type is "image_url".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.MessageContent.Refusal">
      <summary>
            The refusal content if the type is "refusal".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.MessageRequestContent.Type">
      <summary>
            The type of content (e.g., text, image_file, image_url, file_citation, file_path, refusal).
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.MessageRequestContent.Text">
      <summary>
            The text content if the type is "text".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.MessageRequestContent.ImageFile">
      <summary>
            The image file content if the type is "image_file".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.MessageRequestContent.ImageUrl">
      <summary>
            The image URL content if the type is "image_url".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.MessageRequestContent.Refusal">
      <summary>
            The refusal content if the type is "refusal".
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.TextContent">
      <summary>
            Represents text content in a message.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TextContent.Value">
      <summary>
            The data that makes up the text.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TextContent.Annotations">
      <summary>
            Annotations for the text content.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ImageFileContent">
      <summary>
            Represents an image file in the message content.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageFileContent.FileId">
      <summary>
            The File ID of the image in the message content.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageFileContent.Detail">
      <summary>
            Specifies the detail level of the image (e.g., low, high).
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ImageUrlContent">
      <summary>
            Represents an image URL in the message content.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageUrlContent.Url">
      <summary>
            The external URL of the image.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ImageUrlContent.Detail">
      <summary>
            Specifies the detail level of the image (e.g., low, high).
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.FileId">
      <summary>
            Represents a file identifier.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileId.Id">
      <summary>
            The ID of the specific File the citation is from.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.RefusalContent">
      <summary>
            Represents a refusal content generated by the assistant.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RefusalContent.Refusal">
      <summary>
            The refusal reason or content.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.Annotation">
      <summary>
            Represents an annotation for text content.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Annotation.Type">
      <summary>
            The type of annotation (e.g., file_citation, file_path).
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Annotation.Text">
      <summary>
            The text in the message content that needs to be replaced.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Annotation.FileCitation">
      <summary>
            The file citation content if the type is "file_citation".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Annotation.FilePath">
      <summary>
            The file path content if the type is "file_path".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Annotation.StartIndex">
      <summary>
            The start index of the file path in the text.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Annotation.EndIndex">
      <summary>
            The end index of the file path in the text.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.MessageAttachment">
      <summary>
            Represents an attachment to a message.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.MessageAttachment.FileId">
      <summary>
            The ID of the file to attach to the message.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.MessageAttachment.Tools">
      <summary>
            The tools to add this file to.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.AttachmentTool">
      <summary>
            Represents a tool associated with an attachment.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.AttachmentTool.Type">
      <summary>
            The type of tool being defined (e.g., code_interpreter, file_search).
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.MessageList">
      <summary>
            Message list page container
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.MessageList.Object">
      <summary>
            The object type, which is always "list".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.MessageList.Messages">
      <summary>
            Message list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.MessageList.FirstId">
      <summary>
            First message identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.MessageList.LastId">
      <summary>
            Last message identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.MessageList.HasMore">
      <summary>
            There are more messages to retrieve (Per-page limit is 100)
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ThreadObject">
      <summary>
            Represents a thread that contains messages.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadObject.Id">
      <summary>
            The identifier, which can be referenced in API endpoints.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadObject.Object">
      <summary>
            The object type, which is always "thread".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadObject.CreatedAt">
      <summary>
            The Unix timestamp (in seconds) for when the thread was created.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadObject.ToolResources">
      <summary>
            A set of resources made available to the assistant's tools in this thread. Can be null.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadObject.Metadata">
      <summary>
            Metadata consisting of up to 16 key-value pairs attached to the object. Keys can be up to 64 characters long, and values can be up to 512 characters long.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ThreadWithRuns">
      <summary>
            Thread with all its runs, run steps, and messages
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadWithRuns.Thread">
      <summary>
            Thread object
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadWithRuns.Messages">
      <summary> 
            All thread messages
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadWithRuns.Runs">
      <summary>
            List of runs with steps
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadWithRuns.ContextMessages">
      <summary>
            List of standardized messages in the conversation
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.ThreadWithRuns.AddMessages(System.Collections.Generic.List{AIAssistants.Data.ContextMessage},System.String)">
      <summary>
            Add a new list of standard messages to the conversation
            </summary>
      <param name="lmsg">
            Standard message list to add
            </param>
      <param name="threadmsgid">
            Platform message identifier
            </param>
    </member>
    <member name="M:OpenAIAPI.JSON.ThreadWithRuns.AddMessage(AIAssistants.Data.ContextMessage,System.String)">
      <summary>
            Add a new standard messages to the conversation
            </summary>
      <param name="lmsg">
            Standard message to add
            </param>
      <param name="threadmsgid">
            Platform message identifier
            </param>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadWithRuns.Identifier">
      <summary>
            IConversation: Unique identifier of the conversation
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadWithRuns.StandardMessages">
      <summary>
            IConversation: List of standardized messages in the conversation
            </summary>
    </member>
    <member name="M:OpenAIAPI.JSON.ThreadWithRuns.CreateMessage(AIAssistants.Data.ContextMessage)">
      <summary>
            Create a thread message from a context message
            </summary>
      <param name="msg">
            Context message
            </param>
      <returns>
            Thread message
            </returns>
    </member>
    <member name="M:OpenAIAPI.JSON.ThreadWithRuns.CreateStandardMessage(AIAssistants.Interfaces.IPlayer,AIAssistants.Interfaces.IPlayer,AIAssistants.Interfaces.IPlayer,OpenAIAPI.JSON.ThreadMessage)">
      <summary>
            Create a context message from a thread message
            </summary>
      <param name="player">
            Player sending the message
            </param>
      <param name="listener">
            Message listener
            </param>
      <param name="respondto">
            Response to listener
            </param>
      <param name="msg">
            Thread message
            </param>
      <returns>
            Context message
            </returns>
    </member>
    <member name="T:OpenAIAPI.JSON.ThreadRequest">
      <summary>
            Request body to create a new thread
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadRequest.Messages">
      <summary>
            A list of messages to start the thread with.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadRequest.Tools">
      <summary>
            A set of resources that are made available to the assistant's tools in this thread. The resources are specific to the type of tool. For example, the code_interpreter tool requires a list of file IDs, while the file_search tool requires a list of vector store IDs.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ThreadRequest.Metadata">
      <summary>
            Metadata consisting of up to 16 key-value pairs attached to the object. Keys can be up to 64 characters long, and values can be up to 512 characters long.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.RunRequest">
      <summary>
            Represents a request to execute a run on an assistant.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunRequest.AssistantId">
      <summary>
            The ID of the assistant to use to execute this run. Required.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunRequest.Model">
      <summary>
            The ID of the Model to be used to execute this run. Optional.
            If a value is provided here, it will override the model associated with the assistant.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunRequest.Instructions">
      <summary>
            Overrides the instructions of the assistant. Optional.
            This is useful for modifying the behavior on a per-run basis.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunRequest.AdditionalInstructions">
      <summary>
            Appends additional instructions at the end of the instructions for the run. Optional.
            This is useful for modifying the behavior on a per-run basis without overriding other instructions.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunRequest.AdditionalMessages">
      <summary>
            Adds additional messages to the thread before creating the run. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunRequest.Tools">
      <summary>
            Override the tools the assistant can use for this run. Optional.
            This is useful for modifying the behavior on a per-run basis.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunRequest.Metadata">
      <summary>
            Set of 16 key-value pairs that can be attached to an object. Optional.
            This can be useful for storing additional information about the object in a structured format.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunRequest.Temperature">
      <summary>
            What sampling temperature to use, between 0 and 2. Optional.
            Higher values make the output more random, lower values make it more deterministic. Defaults to 1.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunRequest.ReasoningEffort">
      <summary>
            Constrains effort on reasoning for reasoning models. 
            Currently supported values are low, medium, and high. 
            Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunRequest.TopP">
      <summary>
            An alternative to sampling with temperature, called nucleus sampling. Optional.
            Model considers the results of tokens with top_p probability mass. Defaults to 1.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunRequest.Stream">
      <summary>
            If true, returns a stream of events that happen during the run as server-sent events. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunRequest.MaxPromptTokens">
      <summary>
            The maximum number of prompt tokens that may be used over the course of the run. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunRequest.MaxCompletionTokens">
      <summary>
            The maximum number of completion tokens that may be used over the course of the run. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunRequest.TruncationStrategy">
      <summary>
            Controls for how a thread will be truncated prior to the run. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunRequest.ToolChoice">
      <summary>
            Controls which (if any) tool is called by the model. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunRequest.ParallelToolCalls">
      <summary>
            Whether to enable parallel function calling during tool use. Optional. Defaults to true.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunRequest.ResponseFormat">
      <summary>
            Specifies the format that the model must output. Optional.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.TruncationStrategy">
      <summary>
            Represents the truncation strategy for a run request.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TruncationStrategy.Type">
      <summary>
            The truncation strategy to use for the thread. Required.
            The default is auto. If set to last_messages, the thread will be truncated to the n most recent messages in the thread.
            When set to auto, messages in the middle of the thread will be dropped to fit the context length of the model, max_prompt_tokens.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.TruncationStrategy.LastMessages">
      <summary>
            The number of most recent messages from the thread when constructing the context for the run. Optional.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ToolChoice">
      <summary>
            Represents the tool choice for a run request.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolChoice.Type">
      <summary>
            The type of the tool. Required.
            If type is function, the function name must be set. file_search, function, web_search_preview, computer_use_preview.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolChoice.Name">
      <summary>
            The name of the function to call. Required if the tool type is function. Response chats only.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolChoice.Function">
      <summary>
            Represents the function to be called, if applicable. Optional.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ToolChoiceConverter">
      <summary>
            Custom converter for ToolChoice to handle both string and object types.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.FunctionDetails">
      <summary>
            Represents the function details for a tool choice.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FunctionDetails.Name">
      <summary>
            The name of the function to call. Required if the tool type is function.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.Run">
      <summary>
            Represents an execution run on a thread.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.Id">
      <summary>
            The identifier, which can be referenced in API endpoints.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.Object">
      <summary>
            The object type, which is always thread.run.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.CreatedAt">
      <summary>
            The Unix timestamp (in seconds) for when the run was created.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.ThreadId">
      <summary>
            The ID of the thread that was executed on as a part of this run.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.AssistantId">
      <summary>
            The ID of the assistant used for execution of this run.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.Status">
      <summary>
            The status of the run, which can be either queued, in_progress, requires_action, cancelling, cancelled, failed, completed, incomplete, or expired.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.RequiredAction">
      <summary>
            Details on the action required to continue the run. Will be null if no action is required.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.LastError">
      <summary>
            The last error associated with this run. Will be null if there are no errors.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.ExpiresAt">
      <summary>
            The Unix timestamp (in seconds) for when the run will expire.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.StartedAt">
      <summary>
            The Unix timestamp (in seconds) for when the run was started.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.CancelledAt">
      <summary>
            The Unix timestamp (in seconds) for when the run was cancelled.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.FailedAt">
      <summary>
            The Unix timestamp (in seconds) for when the run failed.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.CompletedAt">
      <summary>
            The Unix timestamp (in seconds) for when the run was completed.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.IncompleteDetails">
      <summary>
            Details on why the run is incomplete. Will be null if the run is not incomplete.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.Model">
      <summary>
            The model that the assistant used for this run.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.Instructions">
      <summary>
            The instructions that the assistant used for this run.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.Tools">
      <summary>
            The list of tools that the assistant used for this run.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.Metadata">
      <summary>
            Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.Usage">
      <summary>
            Usage statistics related to the run. This value will be null if the run is not in a terminal state.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.Temperature">
      <summary>
            The sampling temperature used for this run. If not set, defaults to 1.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.TopP">
      <summary>
            The nucleus sampling value used for this run. If not set, defaults to 1.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.MaxPromptTokens">
      <summary>
            The maximum number of prompt tokens specified to have been used over the course of the run.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.MaxCompletionTokens">
      <summary>
            The maximum number of completion tokens specified to have been used over the course of the run.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.TruncationStrategy">
      <summary>
            Controls for how a thread will be truncated prior to the run. Use this to control the initial context window of the run.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.ToolChoice">
      <summary>
            Controls which (if any) tool is called by the model.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.ParallelToolCalls">
      <summary>
            Whether to enable parallel function calling during tool use.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Run.ResponseFormat">
      <summary>
            Specifies the format that the model must output.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.RequiredAction">
      <summary>
            Represents the details on the action required to continue the run.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RequiredAction.Type">
      <summary>
            The type of required action. For now, this is always submit_tool_outputs.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RequiredAction.SubmitToolOutputs">
      <summary>
            Details on the tool outputs needed for this run to continue.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.SubmitToolOutputs">
      <summary>
            Represents the details of the tool outputs needed for the run to continue.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.SubmitToolOutputs.ToolCalls">
      <summary>
            A list of the relevant tool calls.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ToolCall">
      <summary>
            Represents a relevant tool call.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolCall.Id">
      <summary>
            The ID of the tool call. This ID must be referenced when you submit the tool outputs.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolCall.Type">
      <summary>
            The type of tool call the output is required for. For now, this is always function.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolCall.Function">
      <summary>
            The function definition.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.FunctionDefinition">
      <summary>
            Represents the function definition for a tool call.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FunctionDefinition.Name">
      <summary>
            The name of the function.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FunctionDefinition.Arguments">
      <summary>
            The arguments that the model expects you to pass to the function.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.LastError">
      <summary>
            Represents the last error associated with a run.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.LastError.Code">
      <summary>
            One of server_error, rate_limit_exceeded, or invalid_prompt.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.LastError.Message">
      <summary>
            A human-readable description of the error.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.Usage">
      <summary>
            Represents usage statistics related to the run.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Usage.CompletionTokens">
      <summary>
            Number of completion tokens used over the course of the run.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Usage.CompletionTokenDetails">
      <summary>
            Breakdown of tokens used in a completion.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Usage.PromptTokens">
      <summary>
            Number of prompt tokens used over the course of the run.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Usage.PromptTokenDetails">
      <summary>
            Breakdown of tokens used in the prompt.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.Usage.TotalTokens">
      <summary>
            Total number of tokens used (prompt + completion).
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.UsageDetails">
      <summary>
            Usage tokens details.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.UsageDetails.AcceptedPredictionTokens">
      <summary>
            When using Predicted Outputs, the number of tokens in the prediction that appeared in the completion.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.UsageDetails.RejectedPredictionTokens">
      <summary>
            When using Predicted Outputs, the number of tokens in the prediction that did not appear in the completion. 
            However, like reasoning tokens, these tokens are still counted in the total completion tokens for purposes of billing, output, and context window limits.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.UsageDetails.AudioTokens">
      <summary>
            Audio input tokens present in the prompt or generated by the model.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.UsageDetails.ReasoningTokens">
      <summary>
            Tokens generated by the model for reasoning.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.UsageDetails.CachedTokens">
      <summary>
            Cached tokens present in the prompt.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.RunStep">
      <summary>
            Represents a step in execution of a run.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunStep.Id">
      <summary>
            The identifier of the run step, which can be referenced in API endpoints.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunStep.Object">
      <summary>
            The object type, which is always thread.run.step.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunStep.CreatedAt">
      <summary>
            The Unix timestamp (in seconds) for when the run step was created.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunStep.AssistantId">
      <summary>
            The ID of the assistant associated with the run step.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunStep.ThreadId">
      <summary>
            The ID of the thread that was run.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunStep.RunId">
      <summary>
            The ID of the run that this run step is a part of.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunStep.Type">
      <summary>
            The type of run step, which can be either message_creation or tool_calls.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunStep.Status">
      <summary>
            The status of the run step, which can be either in_progress, cancelled, failed, completed, or expired.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunStep.StepDetails">
      <summary>
            The details of the run step.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunStep.LastError">
      <summary>
            The last error associated with this run step. Will be null if there are no errors.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunStep.ExpiredAt">
      <summary>
            The Unix timestamp (in seconds) for when the run step expired.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunStep.CancelledAt">
      <summary>
            The Unix timestamp (in seconds) for when the run step was cancelled.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunStep.FailedAt">
      <summary>
            The Unix timestamp (in seconds) for when the run step failed.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunStep.CompletedAt">
      <summary>
            The Unix timestamp (in seconds) for when the run step completed.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunStep.Metadata">
      <summary>
            Metadata associated with the run step.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunStep.Usage">
      <summary>
            Usage statistics related to the run step.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.StepDetails">
      <summary>
            Represents the details of the run step.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.StepDetails.Type">
      <summary>
            The type of step details. Either message_creation or tool_calls.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.StepDetails.MessageCreation">
      <summary>
            Details of the message creation by the run step. Applicable if type is message_creation.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.StepDetails.ToolCalls">
      <summary>
            Details of the tool calls by the run step. Applicable if type is tool_calls.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.MessageCreationDetails">
      <summary>
            Represents the details of message creation by the run step.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.MessageCreationDetails.MessageId">
      <summary>
            The ID of the message that was created by this run step.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.StepToolCall">
      <summary>
            Represents a tool call associated with the run step.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.StepToolCall.Id">
      <summary>
            The ID of the tool call.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.StepToolCall.Type">
      <summary>
            The type of tool call. Can be code_interpreter, file_search, or function.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.StepToolCall.CodeInterpreter">
      <summary>
            The Code Interpreter tool call definition. Applicable if type is code_interpreter.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.StepToolCall.FileSearch">
      <summary>
            The File Search tool call definition. Applicable if type is file_search.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.StepToolCall.Function">
      <summary>
            The definition of the function that was called. Applicable if type is function.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.CodeInterpreter">
      <summary>
            Represents the definition of a Code Interpreter tool call.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CodeInterpreter.Input">
      <summary>
            The input to the Code Interpreter tool call.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CodeInterpreter.Outputs">
      <summary>
            The outputs from the Code Interpreter tool call. Can include logs or images.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.CodeInterpreterOutput">
      <summary>
            Represents an output from the Code Interpreter tool call.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CodeInterpreterOutput.Type">
      <summary>
            The type of output. Can be logs or image.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CodeInterpreterOutput.Logs">
      <summary>
            The text output from the Code Interpreter tool call. Applicable if type is logs.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CodeInterpreterOutput.Image">
      <summary>
            The image output from the Code Interpreter tool call. Applicable if type is image.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.CodeInterpreterImage">
      <summary>
            Represents an image output from the Code Interpreter tool call.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.CodeInterpreterImage.FileId">
      <summary>
            The file ID of the image.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.FileSearch">
      <summary>
            Represents the definition of a function call.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearch.RankingOptions">
      <summary>
            The ranking options for the file search.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearch.Results">
      <summary>
            The results of the file search.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.RankingOptions">
      <summary>
            Represents the ranking options for the file search.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RankingOptions.Ranker">
      <summary>
            The ranker used for the file search.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RankingOptions.ScoreThreshold">
      <summary>
            The score threshold for the file search. All values must be a floating point number between 0 and 1.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.FileSearchResult">
      <summary>
            Represents a result from the file search.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearchResult.FileId">
      <summary>
            The ID of the file that result was found in.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearchResult.FileName">
      <summary>
            The name of the file that result was found in.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearchResult.Score">
      <summary>
            The score of the result. All values must be a floating point number between 0 and 1.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearchResult.Content">
      <summary>
            The content of the result that was found. The content is only included if requested via the include query parameter.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.FileSearchContent">
      <summary>
            Represents the content of a file search result.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearchContent.Type">
      <summary>
            The type of the content.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileSearchContent.Text">
      <summary>
            The text content of the file.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.FunctionCall">
      <summary>
            Represents the definition of a function call.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FunctionCall.Name">
      <summary>
            The name of the function.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FunctionCall.Arguments">
      <summary>
            The arguments passed to the function.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FunctionCall.Output">
      <summary>
            The output of the function. This will be null if the outputs have not been submitted yet.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.RunList">
      <summary>
            Run list page container
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunList.Object">
      <summary>
            The object type, which is always "list".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunList.Runs">
      <summary>
            Message list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunList.FirstId">
      <summary>
            First message identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunList.LastId">
      <summary>
            Last message identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunList.HasMore">
      <summary>
            There are more messages to retrieve (Per-page limit is 100)
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.RunStepList">
      <summary>
            Run Stpe List
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunStepList.Object">
      <summary>
            The object type, which is always "list".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunStepList.Steps">
      <summary>
            Run Step list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunStepList.FirstId">
      <summary>
            First message identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunStepList.LastId">
      <summary>
            Last message identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunStepList.HasMore">
      <summary>
            There are more messages to retrieve (Per-page limit is 100)
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.RunWithSteps">
      <summary>
            Run with all ist steps
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunWithSteps.Run">
      <summary>
            Run object
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunWithSteps.RunMessages">
      <summary>
            Run messages
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.RunWithSteps.RunSteps">
      <summary>
            Run steps
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ToolOutputs">
      <summary>
            Represents tool outputs being submitted for a run.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolOutputs.ToolOutputsList">
      <summary>
            A list of tools for which the outputs are being submitted. Required.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ToolOutput">
      <summary>
            Represents an individual tool output.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolOutput.ToolCallId">
      <summary>
            The ID of the tool call in the required_action object within the run object the output is being submitted for. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolOutput.Output">
      <summary>
            The output of the tool call to be submitted to continue the run. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ToolOutput.Stream">
      <summary>
            If true, returns a stream of events that happen during the Run as server-sent events. Optional.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.VectorStore">
      <summary>
            Represents a vector store, which is a collection of processed files that can be used by the file_search tool.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStore.StdUID">
      <summary>
            IStandardObject: Unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStore.StdName">
      <summary>
            IStandardObject: Element name
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStore.StdDescription">
      <summary>
            IStandardObject: Element description
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStore.DataSheet">
      <summary>
            IStandardObject: Information to edit the object
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStore.StdFileSize">
      <summary>
            File size
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStore.StdFileDate">
      <summary>
            File creation date
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStore.Id">
      <summary>
            The identifier, which can be referenced in API endpoints.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStore.ObjectType">
      <summary>
            The object type, which is always "vector_store".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStore.CreatedAt">
      <summary>
            The Unix timestamp (in seconds) for when the vector store was created.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStore.Name">
      <summary>
            The name of the vector store.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStore.UsageBytes">
      <summary>
            The total number of bytes used by the files in the vector store.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStore.FileCounts">
      <summary>
            File counts for the vector store, including in-progress, completed, failed, and total counts.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStore.Status">
      <summary>
            The status of the vector store, which can be either expired, in_progress, or completed.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStore.ExpiresAfter">
      <summary>
            The expiration policy for the vector store.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStore.ExpiresAt">
      <summary>
            The Unix timestamp (in seconds) for when the vector store will expire.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStore.LastActiveAt">
      <summary>
            The Unix timestamp (in seconds) for when the vector store was last active.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStore.Metadata">
      <summary>
            Metadata consisting of up to 16 key-value pairs attached to the object. Keys can be up to 64 characters long, and values can be up to 512 characters long.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.FileCounts">
      <summary>
            Represents the file counts for a vector store.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileCounts.InProgress">
      <summary>
            The number of files that are currently being processed.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileCounts.Completed">
      <summary>
            The number of files that have been successfully processed.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileCounts.Failed">
      <summary>
            The number of files that have failed to process.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileCounts.Cancelled">
      <summary>
            The number of files that were cancelled.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.FileCounts.Total">
      <summary>
            The total number of files.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ExpirationPolicy">
      <summary>
            Represents the expiration policy for a vector store.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ExpirationPolicy.Anchor">
      <summary>
            Anchor timestamp after which the expiration policy applies. Supported anchors: last_active_at.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.ExpirationPolicy.Days">
      <summary>
            The number of days after the anchor time that the vector store will expire.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.VectorStoreData">
      <summary>
            Represents data for a vector store, including files and chunking strategy.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreData.FileIds">
      <summary>
            A list of file IDs to add to the vector store. There can be a maximum of 10000 files in a vector store.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreData.ChunkingStrategy">
      <summary>
            The chunking strategy used to chunk the file(s). If not set, will use the auto strategy.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreData.Metadata">
      <summary>
            Metadata consisting of up to 16 key-value pairs attached to the vector store. Keys can be up to 64 characters long, and values can be up to 512 characters long.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ChunkingStrategy">
      <summary>
            Represents the chunking strategy used for a vector store.
            </summary>
      <descendant>AutoChunkingStrategy</descendant>
      <descendant>StaticChunkingStrategy</descendant>
    </member>
    <member name="P:OpenAIAPI.JSON.ChunkingStrategy.Type">
      <summary>
            The type of chunking strategy (e.g., auto, static).
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.AutoChunkingStrategy">
      <summary>
            Represents the auto chunking strategy.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.StaticChunkingStrategy">
      <summary>
            Represents the static chunking strategy.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.StaticChunkingStrategy.StaticSettings">
      <summary>
            Additional static chunking settings.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.StaticChunkingSettings">
      <summary>
            Represents settings for the static chunking strategy.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.StaticChunkingSettings.MaxChunkSizeTokens">
      <summary>
            The maximum number of tokens in each chunk. The default value is 800. The minimum value is 100 and the maximum value is 4096.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.StaticChunkingSettings.ChunkOverlapTokens">
      <summary>
            The number of tokens that overlap between chunks. The default value is 400. The overlap must not exceed half of max_chunk_size_tokens.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.VectorStoreRequest">
      <summary>
            Represents a request to create or update a vector store.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreRequest.FileIds">
      <summary>
            A list of File IDs that the vector store should use. Useful for tools like file_search that can access files. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreRequest.Name">
      <summary>
            The name of the vector store. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreRequest.ExpiresAfter">
      <summary>
            The expiration policy for a vector store. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreRequest.ChunkingStrategy">
      <summary>
            The chunking strategy used to chunk the file(s). If not set, will use the auto strategy. Optional.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreRequest.Metadata">
      <summary>
            Metadata associated with the vector store. Optional.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.VectorStoreList">
      <summary>
            List of VectorStore objects
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreList.Object">
      <summary>
            Object type identifier. Always "list".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreList.Data">
      <summary>
            List of VectorStore objects
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreList.FirstId">
      <summary>
            First vector store identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreList.LastId">
      <summary>
            Last vector store identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreList.HasMore">
      <summary>
            List has more pages
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.ChunkingStrategyConverter">
      <summary>
            Custom converter for the ChunkingStrategy class to handle deserialization of different chunking strategies.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.VectorStoreFile">
      <summary>
            Represents a vector store file.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreFile.StdUID">
      <summary>
            IStandardObject: Unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreFile.StdName">
      <summary>
            IStandardObject: Element name
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreFile.StdDescription">
      <summary>
            IStandardObject: Element description
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreFile.DataSheet">
      <summary>
            IStandardObject: Information to edit the object
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreFile.StdFileSize">
      <summary>
            File size
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreFile.StdFileDate">
      <summary>
            File creation date
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreFile.Id">
      <summary>
            The identifier, which can be referenced in API endpoints.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreFile.Object">
      <summary>
            The object type, which is always vector_store.file.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreFile.UsageBytes">
      <summary>
            The total vector store usage in bytes. Note that this may be different from the original file size.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreFile.CreatedAt">
      <summary>
            The Unix timestamp (in seconds) for when the vector store file was created.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreFile.VectorStoreId">
      <summary>
            The ID of the vector store that the File is attached to.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreFile.Status">
      <summary>
            The status of the vector store file, which can be either in_progress, completed, cancelled, or failed.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreFile.LastError">
      <summary>
            The last error associated with this vector store file. Will be null if there are no errors.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreFile.ChunkingStrategy">
      <summary>
            The strategy used to chunk the file.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.VectorStoreFileRequest">
      <summary>
            Request for a Vector Store File.
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreFileRequest.FileId">
      <summary>
            File identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreFileRequest.ChunkingStrategy">
      <summary>
            The strategy used to chunk the file.
            </summary>
    </member>
    <member name="T:OpenAIAPI.JSON.VectorStoreFileList">
      <summary>
            List of VectorStoreFile objects
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreFileList.Object">
      <summary>
            Object type identifier. Always "list".
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreFileList.Data">
      <summary>
            List of VectorStore objects
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreFileList.FirstId">
      <summary>
            First vector store identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreFileList.LastId">
      <summary>
            Last vector store identifier in the list
            </summary>
    </member>
    <member name="P:OpenAIAPI.JSON.VectorStoreFileList.HasMore">
      <summary>
            List has more pages
            </summary>
    </member>
    <member name="T:OpenAIAPI.ObjectProvider">
      <summary>
            Dependency provider for GlobalCommonEntities
            </summary>
    </member>
    <member name="P:OpenAIAPI.ObjectProvider.AllResources">
      <summary>
            IDependencyProvider: Central repository of embedded resources
            </summary>
    </member>
    <member name="M:OpenAIAPI.ObjectProvider.QueryClassOrInterface(System.String)">
      <summary>
            IDependencyProvider: Check if a given class or interface is supported
            </summary>
      <param type="services">
            Type names separated by semicolon
            </param>
      <returns>
            True if can instantiante objets of at least one of the given types
            </returns>
    </member>
    <member name="M:OpenAIAPI.ObjectProvider.GetObjects(System.String,System.Object)">
      <summary>
            IDependencyProvider: Get all the instances of all the rquested types or interfaces
            </summary>
      <param type="services">
            Semicolon separated type type list
            </param>
      <param type="filter">
            Object containing a filter to select elements
            </param>
      <returns>
            Enumeration of objects implementing the types as IUIIdentifier objects
            </returns>
    </member>
    <member name="T:OpenAIAPI.OpenAIAPIManager">
      <summary>
            API manager for the OpenAI API
            </summary>
      <remarks>
            **IMPORTANT**: You must provide a path to the configuration files before using this class setting the ConfigurationPath property.
            There is no need for more than one API manager instance by AI provider. So it is a singleton.
            HttpClients are expensive to create and use, so it is a good idea to keep one instance for all the API calls.
            The API manager is the object responsible for calling the AI API and managing the configuration of the AI elements.
            API manager also create all the API element and player instances.
            The configuration in general is also managed by API managers.
            </remarks>
      <seealso cref="T:AIAssistants.Interfaces.SingletonInstanceAttribute" />
      <seealso cref="T:AIAssistants.Interfaces.IAPIManager" />
      <seealso cref="T:AIAssistants.Interfaces.IModelUser" />
      <seealso cref="T:OpenAIAPI.JSON.APIConfiguration" />
      <seealso cref="T:OpenAIAPI.JSON.ElementConfiguration" />
      <seealso cref="T:AIAssistants.Data.APIUIDataSheet" />
      <seealso cref="T:GlobalCommonEntities.DependencyInjection.ObjectWrapper" />
      <seealso cref="T:AIAssistants.Interfaces.IAssistant" />
      <seealso cref="T:AIAssistants.Interfaces.IChat" />
      <seealso cref="T:OpenAIAPI.Interfaces.IResponseChat" />
      <seealso cref="T:AIAssistants.Interfaces.ISpeechManager" />
      <seealso cref="T:AIAssistants.Interfaces.IImageGenerator" />
      <seealso cref="T:AIAssistants.Interfaces.IFileManager" />
      <seealso cref="T:AIAssistants.Interfaces.IFilePackageManager" />
      <seealso cref="T:AIAssistants.Interfaces.ITuningJob" />
      <seealso cref="T:AIAssistants.Interfaces.IEmbedding" />
      <seealso cref="T:OpenAIAPI.Players.OpenAIAssistant" />
      <seealso cref="T:OpenAIAPI.Players.OpenAIChat" />
      <seealso cref="T:OpenAIAPI.Players.OpenAIResponse" />
      <seealso cref="T:OpenAIAPI.Players.OpenAIEmbedding" />
      <seealso cref="T:OpenAIAPI.Players.OpenAISpeech" />
      <seealso cref="T:OpenAIAPI.Players.DallEImageGenerator" />
      <seealso cref="T:AIAssistants.JSON.FunctionDef" />
      <seealso cref="T:OpenAIAPI.Elements.OpenAIFineTuning" />
      <seealso cref="T:OpenAIAPI.Elements.OpenAIFileManager" />
      <seealso cref="T:OpenAIAPI.Elements.OpenAIVectorStoreManager" />
      <seealso cref="T:AIAssistants.Interfaces.IAPIElement" />
      <seealso cref="T:AIAssistants.Interfaces.IPlayer" />
      <seealso cref="T:AIAssistants.Interfaces.IAPIPlayer" />
      <seealso cref="T:GlobalCommonEntities.API.GenericHttpAPICaller" />
      <seealso cref="T:OpenAIAPI.JSON.ElementConfiguration" />
      <seealso cref="T:AIAssistants.Interfaces.IAppAutomation" />
      <seealso cref="T:AIAssistants.Interfaces.IPlayerAsset" />
    </member>
    <member name="P:OpenAIAPI.OpenAIAPIManager.Identifier">
      <summary>
            IAPIElement: Unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.OpenAIAPIManager.Name">
      <summary>
            IAPIElement: Element name
            </summary>
    </member>
    <member name="P:OpenAIAPI.OpenAIAPIManager.Description">
      <summary>
            IAPIElement: Element description
            </summary>
    </member>
    <member name="P:OpenAIAPI.OpenAIAPIManager.GenericType">
      <summary>
            IAPIElement: Element generic type
            </summary>
    </member>
    <member name="P:OpenAIAPI.OpenAIAPIManager.Capabilities">
      <summary>
            IAPIElement: Element capabilities
            </summary>
    </member>
    <member name="P:OpenAIAPI.OpenAIAPIManager.APIManager">
      <summary>
            IAPIElement: API manager object
            </summary>
    </member>
    <member name="P:OpenAIAPI.OpenAIAPIManager.EditorInfo">
      <summary>
            IAPIElement: Information to edit the object
            </summary>
    </member>
    <member name="P:OpenAIAPI.OpenAIAPIManager.ConfigInfo">
      <summary>
            IAPIElement: Information to edit the object configuration
            </summary>
    </member>
    <member name="P:OpenAIAPI.OpenAIAPIManager.Usage">
      <summary>
            IAPIElement: Usage information of this element after the current request.
            </summary>
      <remarks>
            This is a dictionary with information useful to billing and limits.
            Each dictionary key is the name of an usage element field, such as input tokens, audio tokens, etc.
            Keys can be names of composite properties, such as "input_token_details.text_tokens".
            </remarks>
    </member>
    <member name="M:OpenAIAPI.OpenAIAPIManager.QueryExtraArgs(System.String)">
      <summary>
            IAPIElement: Query for function extra arguments
            </summary>
      <param name="functionName">
            Name of the function
            </param>
      <returns>
            List of extra arguments
            </returns>
    </member>
    <member name="M:OpenAIAPI.OpenAIAPIManager.UpdateConfiguration(AIAssistants.Interfaces.IAPIElement)">
      <summary>
            IAPIElement: Update the element configuration
            </summary>
      <param name="fromElement">
            IAPIelement needed to update the configuration. Null to write it to configuration file
            </param>
    </member>
    <member name="M:OpenAIAPI.OpenAIAPIManager.UpdateObject(GlobalCommonEntities.DependencyInjection.ObjectWrapper)">
      <summary>
            IAPIElement: Update the element properties (exposed in the EditorInfo property) in the provider server
            </summary>
      <param name="odata">
            Custom object information contained in an ObjectWrapper object
            </param>
    </member>
    <member name="M:OpenAIAPI.OpenAIAPIManager.Equals(AIAssistants.Interfaces.IAPIElement)">
      <summary>
            IEquatable interface
            </summary>
      <param name="other">
            Object to compare with
            </param>
      <returns>
            True if both objects are the same
            </returns>
    </member>
    <member name="P:OpenAIAPI.OpenAIAPIManager.AccountId">
      <summary>
            IAPIManager: Account key identifier for the API calls
            </summary>
    </member>
    <member name="P:OpenAIAPI.OpenAIAPIManager.AppAutomation">
      <summary>
            IAPIManager: Application services access object
            </summary>
    </member>
    <member name="P:OpenAIAPI.OpenAIAPIManager.ConfigurationFileName">
      <summary>
            IAPIManager: Get and Set the name for the configuration file
            </summary>
    </member>
    <member name="P:OpenAIAPI.OpenAIAPIManager.ConfigurationPath">
      <summary>
            IAPIManager: Get and Set the directory path for the configuration files
            </summary>
    </member>
    <member name="P:OpenAIAPI.OpenAIAPIManager.LogPath">
      <summary>
            IAPIManager: Get and Set the directory path for the log files
            </summary>
    </member>
    <member name="P:OpenAIAPI.OpenAIAPIManager.UsageData">
      <summary>
            IAPIManager: Activate or deactivate usage data collection
            </summary>
    </member>
    <member name="P:OpenAIAPI.OpenAIAPIManager.LLMModels">
      <summary>
            IAPIManager: LLM model list as string. Call AvailableLLMModels to refresh it.
            </summary>
    </member>
    <member name="M:OpenAIAPI.OpenAIAPIManager.GetPlatformRole(AIAssistants.Interfaces.GenericRole,AIAssistants.Interfaces.IModelUser)">
      <summary>
            IAPIManager: Provide the proper role name for this AI platform
            </summary>
      <param name="role">
            Generic role
            </param>
      <param name="roleformodel">
            The model user for which the role should be resolved.
            </param>
      <returns>
            Role name as used in this API platform 
            </returns>
      <example>
            When an AI agent talks to other AI agent from a different API platform, the role names must be translated for the listener to undestand the speaker role.
            </example>
      <remarks>
            Role names can differ between AI platforms. This method provides a way to get the proper role name for the current platform.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.OpenAIAPIManager.GetStandardizedElementType(System.String)">
      <summary>
            IAPIManager: Get the standardized element type for a given element of custom type
            </summary>
      <param name="elementType">
            Element type to standardize
            </param>
      <returns>
            Standardized element type name
            </returns>
    </member>
    <member name="M:OpenAIAPI.OpenAIAPIManager.RemoveConfiguration(AIAssistants.Interfaces.IAPIElement)">
      <summary>
            IAPIManager: Remove the element configuration
            </summary>
      <param name="fromElement">
            IAPIelement to remove from the configuration
            </param>
    </member>
    <member name="M:OpenAIAPI.OpenAIAPIManager.ReadConfiguration(System.String)">
      <summary>
            IAPIManager: Read configuration from a given path
            </summary>
      <param name="path">
            Path to the configuration file
            </param>
    </member>
    <member name="M:OpenAIAPI.OpenAIAPIManager.WriteConfiguration(System.String)">
      <summary>
            IAPIManager: Write configuration to a given path
            </summary>
      <param name="path">
            Path to the configuration file
            </param>
    </member>
    <member name="M:OpenAIAPI.OpenAIAPIManager.CleanTextForSpeech(System.Collections.Generic.List{System.String})">
      <summary>
            IAPIManager: Remove format marks from a text to use it in audio speech
            </summary>
      <param name="text">
            Text lines
            </param>
      <returns>
            Cleaned text lines
            </returns>
    </member>
    <member name="M:OpenAIAPI.OpenAIAPIManager.GetPlayerOutputFormatter(System.String)">
      <summary>
            IAPIManager: Get a formatter for muser's output for a given mimetype
            </summary>
      <param name="mimetype">
            Output format required
            </param>
      <returns>
            Proper formatter for the output o null if not available
            </returns>
    </member>
    <member name="P:OpenAIAPI.OpenAIAPIManager.AvailablePLayerTypes">
      <summary>
            IAPIManager: Enumerate available player interfaces
            </summary>
    </member>
    <member name="M:OpenAIAPI.OpenAIAPIManager.NameToTYpe(System.String)">
      <summary>
            IAPIManager: Get the actual type of a type name
            </summary>
      <param name="typeName">
            Type name
            </param>
      <returns>
            Actual Type object or null if not found
            </returns>
    </member>
    <member name="P:OpenAIAPI.OpenAIAPIManager.AvailableElementTypes">
      <summary>
            IAPIManager: Enumerate available elements interfaces
            </summary>
    </member>
    <member name="M:OpenAIAPI.OpenAIAPIManager.AvailableInstances(System.String)">
      <summary>
            IAPIManager: List of available instances for a given element type
            </summary>
      <param name="elementType">
            Element interface type
            </param>
      <returns>
            List of ObjectWrapper with the available instances name and identifier
            </returns>
    </member>
    <member name="M:OpenAIAPI.OpenAIAPIManager.GetCurrentElements(System.String)">
      <summary>
            IAPIManager: Enumerate all configured elements
            </summary>
      <param name="elementType">
            Element interface type
            </param>
      <returns>
            Wrapped instance list of elements in the configuration file.
            </returns>
      <remarks>
            Use this method to get all elements of a given type from the configuration files.
            Default elements are not included in the list.
            The elementType to provide is that returned by the IAPIElement.GnericType property.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.OpenAIAPIManager.GetOtherElements(System.String)">
      <summary>
            IAPIManager: Enumerate all non-configured elements
            </summary>
      <param name="elementType">
            Element interface type
            </param>
      <returns>
            Wrapped instance list of elements in the cloud, but not in the configuration file.
            </returns>
    </member>
    <member name="M:OpenAIAPI.OpenAIAPIManager.CreateElement(System.String,System.String)">
      <summary>
            IAPIManager: Create new elements instance of a given type
            </summary>
      <param name="elementType">
            Element interface type
            </param>
      <param name="id">
            Element unique identifier. Null or Empty to get the default element configuration.
            </param>
      <returns>
            Instance of a new elements
            </returns>
      <remarks>
            The elementType to provide is that returned by the IAPIElement.GnericType property.
            Elements that are IModelUser are initialized with the current available models for the object type.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.OpenAIAPIManager.AvailableModels(AIAssistants.Interfaces.IModelUser)">
      <summary>
            IAPIManager: Get the available models for a given AI player
            </summary>
      <param name="muser">
            Player to get the available models for
            </param>
      <returns>
            List of available model names
            </returns>
    </member>
    <member name="M:OpenAIAPI.OpenAIAPIManager.AvailableLLMModels">
      <summary>
            IAPIManager: Get the available LLM models
            </summary>
      <returns>
            List of available model names
            </returns>
    </member>
    <member name="M:OpenAIAPI.OpenAIAPIManager.DeleteModel(System.String)">
      <summary>
            IAPIManager: Delete a model if allowed
            </summary>
      <param name="model">
            Model name
            </param>
      <returns>
            True if the model was deleted
            </returns>
    </member>
    <member name="M:OpenAIAPI.OpenAIAPIManager.GetHttpClient">
      <summary>
            IAPIManager: Get a HttpClient to perform API calls
            </summary>
      <returns>
            Authorized HttpClient with all necessary headers
            </returns>
    </member>
    <member name="T:OpenAIAPI.Players.AudioTextCleaner">
      <summary>
            Clean format from text for audio purposes
            </summary>
      <seealso cref="T:AIAssistants.Interfaces.IObjectToFormattedString" />
    </member>
    <member name="P:OpenAIAPI.Players.AudioTextCleaner.TextLimits">
      <summary>
            IObjectToFormattedString: Text container size limits. Not used
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.AudioTextCleaner.BoldLines">
      <summary>
            IObjectToFormattedString: Bold Text lines count. Not used
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.AudioTextCleaner.CodeLines">
      <summary>
            IObjectToFormattedString: Lines of text detected as source code. Not used
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.AudioTextCleaner.ConvertObjectToString(System.Object)">
      <summary>
            IObjectToFormattedString: Format text to use in audio speech output
            </summary>
      <param name="obj">
            Text with format
            </param>
      <returns>
            Text without format
            </returns>
    </member>
    <member name="T:OpenAIAPI.Players.DallEImageGenerator">
      <summary>
            OpenAI IImageGenerator impementation.
            </summary>
      <example>
            You can find an example of use of this class in the AIAPIWinAdmin.cfImages Form. This form allows managing OpenAI Dall-e models using all the API calls.
            </example>
      <remarks>
            This object is a player specialized in generating images using the DallE model.
            The APIConfiguration class contains the default settings and all endpoint definition for this class.
            The OpenAIAPIConfiguration.json contains the default configuration for this class in the "tools" element with id "default_ImageManager".
            The ImageRequest class is used to request for images.
            This player can also generate text, so it can have a ISpeechManager assigned to produce speech.
            The IStreamReadWriter interface is implemented to save and load the player configuration, for there is no way to store it in the OpenAI cloud.
            </remarks>
      <seealso cref="T:OpenAIAPI.JSON.ElementConfiguration" />
      <seealso cref="T:GlobalCommonEntities.API.APIEndpoint" />
      <seealso cref="T:AIAssistants.Interfaces.IAPIManager" />
      <seealso cref="T:AIAssistants.Interfaces.ElementCapabilities" />
      <seealso cref="T:GlobalCommonEntities.DependencyInjection.ObjectWrapper" />
      <seealso cref="T:OpenAIAPI.JSON.ImageRequest" />
      <seealso cref="T:OpenAIAPI.JSON.ImageRequestWithId" />
      <seealso cref="T:AIAssistants.Interfaces.ISpeechManager" />
      <seealso cref="T:AIAssistants.Interfaces.IImageGenerator" />
      <seealso cref="T:AIAssistants.Data.APIUIDataSheet" />
      <seealso cref="T:AIAssistants.Interfaces.IPlayer" />
      <seealso cref="T:AIAssistants.Interfaces.IStreamReadWriter" />
      <seealso cref="T:AIAssistants.Interfaces.IPlayerAsset" />
      <seealso cref="!:OpenAIAPIConfiguration.json" />
      <seealso cref="!:AIAPIWinAdmin.cfImages" />
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.ImageData">
      <summary>
            Property specific for OpenAI Speech players to get and set the speech data
            </summary>
      <remarks>
            The image request structure for API calls do not have a unique identifier.
            There is the need to create a wrapper for the request to meet the requirement of having a unique identifier by object configuration.
            This is the object stored in configuration files.
            </remarks>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.Identifier">
      <summary>
            IAPIElement: Unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.Name">
      <summary>
            IAPIElement: Element name
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.Description">
      <summary>
            IAPIElement: Element description
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.GenericType">
      <summary>
            IAPIElement: Element generic type
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.Capabilities">
      <summary>
            IAPIElement: Element capabilities
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.APIManager">
      <summary>
            IAPIElement: API manager object
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.EditorInfo">
      <summary>
            IAPIElement: Information to edit the object
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.ConfigInfo">
      <summary>
            IAPIElement: Information to edit the object configuration
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.Usage">
      <summary>
            IAPIElement: Usage information of this element after the current request.
            </summary>
      <remarks>
            This is a dictionary with information useful to billing and limits.
            Each dictionary key is the name of anusage element field, such as input tokens, audio tokens, etc.
            Keys can be names of composite properties, such as "input_token_details.text_tokens".
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Players.DallEImageGenerator.QueryExtraArgs(System.String)">
      <summary>
            IAPIElement: Query for function extra arguments
            </summary>
      <param name="functionName">
            Name of the function
            </param>
      <returns>
            List of extra arguments
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.DallEImageGenerator.UpdateConfiguration(AIAssistants.Interfaces.IAPIElement)">
      <summary>
            IAPIElement: Update the element configuration
            </summary>
      <param name="fromElement">
            IAPIelement needed to update the configuration
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.DallEImageGenerator.UpdateObject(GlobalCommonEntities.DependencyInjection.ObjectWrapper)">
      <summary>
            IAPIElement: Update the element properties (exposed in the EditorInfo property)  in the provider server
            </summary>
      <param name="odata">
            Custom object information contained in an ObjectWrapper object
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.DallEImageGenerator.Equals(AIAssistants.Interfaces.IAPIElement)">
      <summary>
            IEquatable interface
            </summary>
      <param name="other">
            Object to compare with
            </param>
      <returns>
            True if both objects are the same
            </returns>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.MaxRequestRatePerMinute">
      <summary>
            IModelUser: Maxumum number of requests per minute
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.MaxRequestRatePerDay">
      <summary>
            IModelUser: Maximum number of requests per day
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.Model">
      <summary>
            IModelUser: AI model identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.Temperature">
      <summary>
            IModelUser: What sampling temperature to use, between 0 and 2.
            Higher values make the output more random, lower values make it more deterministic. Defaults to 1.
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.TopP">
      <summary>
            IModelUser: An alternative to sampling with temperature, called nucleus sampling. 
            Model considers the results of tokens with top_p probability mass. Defaults to 1.
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.ModelProperty">
      <summary>
            IModelUser: Property editor information to set the available model list.
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.DallEImageGenerator.ReasoningEffort(System.String@)">
      <summary>
            IModelUser: Gets or sets the reasoning effort level
            </summary>
      <param name="currentReasoning">
            Pass null to get the current reasoning effort level. Pass a string to set a new reasoning effort level. Empty string to remove reasoning effort level.
            </param>
      <returns>
            List of available reasoning effort levels, Null if the model does not support reasoning effort levels.
            </returns>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.SystemInstructions">
      <summary>
            IAPIPlayer: Main instructions for the player
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.Tools">
      <summary>
            IAPIPlayer: Tools available for the player
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.ParallelTools">
      <summary>
            IAPIPlayer: Allow parallel use of tools. This is mainly for function or MCP calls.
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.Busy">
      <summary>
            IAPIPLayer: Player availability
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.UserFunctions">
      <summary>
            IAPIPlayer: Available functions list
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.AllFunctions">
      <summary>
            IAPIPlayer: List of all functions available for this player
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.Assets">
      <summary>
            IAPIPlayer: Asset list
            </summary>
      <remarks>
            Only one ISpeechManager asset is allowed in the list.
            </remarks>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.Voice">
      <summary>
            IAPIPlayer: Player voice name
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.AppRoles">
      <summary>
            IAPIPlayer: List of application specific roles
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.ImageFilter">
      <summary>
            IAPIPlayer: Provides a proper file filter to select images
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.ImgFormat">
      <summary>
            IAPIPlayer: Format of the image attachment for messages to player
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.CurrentRequest">
      <summary>
            IAPIPlayer: Current request the player is processing
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.DallEImageGenerator.ToolName(AIAssistants.Interfaces.ToolTypes,System.String@)">
      <summary>
            IAPIPlayer: Get the tool name amd description for a given type
            </summary>
      <param name="tool">
            Tool type
            </param>
      <param name="description">
            Tool description as out parameter
            </param>
      <returns>
            Tool name
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.DallEImageGenerator.AddContext(System.Collections.Generic.List{AIAssistants.Data.ContextMessage})">
      <summary>
            IAPIPlayer: Add context to the player
            </summary>
      <param name="messages">
            List of context messages
            </param>
      <remarks>
            This method is not used by this player.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Players.DallEImageGenerator.GetExtensionFor(System.String)">
      <summary>
            IAPIPLayer: Get the extension to call a set of functions
            </summary>
      <param name="interfaceName">
            Standardized interface name
            </param>
      <returns>
            Extension to call the function or null if not found
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.DallEImageGenerator.AddServices(System.Collections.Generic.List{AIAssistants.Interfaces.IApplicationService})">
      <summary>
            IAPIPLayer: Add application services to the player to use in the conversation
            </summary>
      <param name="services">
            List of available services. Null to reset the services
            </param>
      <remarks>
            This method is not used by this player.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Players.DallEImageGenerator.AddFunctions(System.Collections.Generic.List{AIAssistants.JSON.FunctionDef})">
      <summary>
            IAPIPLayer: Add functions to the player
            </summary>
      <example>
            You can add very simple and generic functions as for instance to get the currente date and time.
            </example>
      <param name="functions">
            List of function definition objects
            </param>
      <remarks>
            Use this method to add simple functions not organized as a service.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Players.DallEImageGenerator.RemoveServices(System.Collections.Generic.List{AIAssistants.Interfaces.IApplicationService})">
      <summary>
            IAPIPlayer: Remove application services to the player
            </summary>
      <param name="services">
            List of services to remove.
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.DallEImageGenerator.RemoveFunctions(System.Collections.Generic.List{AIAssistants.JSON.FunctionDef})">
      <summary>
            IAPIPlayer: Remove functions from the player
            </summary>
      <param name="functions">
            List of function definition objects to remove
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.DallEImageGenerator.SendPrompt(AIAssistants.Interfaces.IPlayer,System.Collections.Generic.List{AIAssistants.Data.ContextMessage},System.Boolean)">
      <summary>
            IAPIPlayer: Send a message to the player
            </summary>
      <param name="from">
            Player sending the message
            </param>
      <param name="prompt">
            Messages to process as prompt
            </param>
      <param name="reset">
            Reset conversation before process the request
            </param>
      <returns>
            List of response messages
            </returns>
      <remarks>
            When ContextMessage has a text message and no image data, the selected API call is that of create image.
            If there is text prompt and image data, the selected API call is that of modify image.
            In case of having onnly image data, the selected API call is that of image variations.
            All images are provided and generated in png format, for it is almost the only supported image format by OpenAI.
            </remarks>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.PlayerName">
      <summary>
            IPlayer: player name
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.PlayerRole">
      <summary>
            IPlayer: Player role
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.Reminder">
      <summary>
            IPlayer: Message that will be sent on each request to remind the player important things
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.BackColor">
      <summary>
            IPlayer: Bubble header background color
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.ForeColor">
      <summary>
            IPlayer: Bubble header foreground color
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.AllowedServices">
      <summary>
            IPlayer: List of allowed application service identifiers
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.PrivateConsole">
      <summary>
            IPlayer: Console to show player messages
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.DallEImageGenerator.PlayerSettings">
      <summary>
            IPlayer: Player settings
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.DallEImageGenerator.Equals(AIAssistants.Interfaces.IAPIPlayer)">
      <summary>
            IEquatable interface
            </summary>
      <param name="other">
            Object to compare with
            </param>
      <returns>
            True if both objects are the same
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.DallEImageGenerator.SaveToStream(System.IO.Stream,System.Boolean)">
      <summary>
            IStreamReadWriter: Save the element to a stream
            </summary>
      <param name="stream">
            Target Stream
            </param>
      <param name="formatted">
            Save formatted data
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.DallEImageGenerator.LoadFromStream(System.IO.Stream)">
      <summary>
            IStreamReadWriter: Load the element from a stream
            </summary>
      <param name="stream">
            Source Stream
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.DallEImageGenerator.GenerateImage(GlobalCommonEntities.DependencyInjection.ObjectWrapper)">
      <summary>
            IImageGenerator: Generate images using the provided parameters
            </summary>
      <param name="imageInfo">
            Parameter data sheet
            </param>
      <returns>
            List of images wrapped in a generic object
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.DallEImageGenerator.ModifyImage(GlobalCommonEntities.DependencyInjection.ObjectWrapper,GlobalCommonEntities.DependencyInjection.ObjectWrapper)">
      <summary>
            IImageGenerator: Generate images from an image using the provided parameters
            </summary>
      <param name="imageInfo">
            Parameter data sheet
            </param>
      <param name="image">
            Data already generated
            </param>
      <returns>
            List of images wrapped in a generic object
            </returns>
      <remarks>
            All images are provided and generated in png format, for it is almost the only supported image format by OpenAI.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Players.DallEImageGenerator.ImageVariation(GlobalCommonEntities.DependencyInjection.ObjectWrapper,GlobalCommonEntities.DependencyInjection.ObjectWrapper)">
      <summary>
            IImageGenerator: Generate image variations of an image using the provided parameters
            </summary>
      <param name="imageInfo">
            Parameter data sheet
            </param>
      <param name="image">
            Data already generated
            </param>
      <returns>
            List of images wrapped in a generic object
            </returns>
      <remarks>
            All images are provided and generated in png format, for it is almost the only supported image format by OpenAI.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Players.DallEImageGenerator.GetImages(System.Collections.Generic.List{GlobalCommonEntities.DependencyInjection.ObjectWrapper})">
      <summary>
            IImageGenerator: Extract standard images from a wrapped image object
            </summary>
      <param name="images">
            List of wrapped images
            </param>
      <returns>
            List of Data objects
            </returns>
      <remarks>
            All images are provided and generated in png format, for it is almost the only supported image format by OpenAI.
            </remarks>
    </member>
    <member name="T:OpenAIAPI.Players.OpenAIAssistant">
      <summary>
            OpanAI API assitan player. Implementation of the IAssistant interface 
            </summary>
      <example>
            You can find an example of use of this class in the AIAPIWinAdmin.cfAssistant Form. This form allows managing OpenAI assistants using all the assistant API calls.
            </example>
      <remarks>
            This object is a player that can assist users having document access in the OpenAI cloud storage.
            OpenAIAssistant objects are created by the OpenAIAPIManager object.
            Assistants have tools like file search and code interpreter to help users to find information and to run code.
            Assistants can also call functions to perform specific tasks. Function calls use the IAppAutomation interface to interact with the user application.
            The APIConfiguration class contains the default settings and all endpoint definition for this class.
            The OpenAIAPIConfiguration.json contains the default configuration for this class in the "tools" element with id "default_Assistant".
            The Assistant class is used to create and modify assistants. Assistants are stored in the OpenAI cloud, so there is no need to maintain local configuration files.
            This player can have a ISpeechManager assigned to produce speech.
            The IStreamReadWriter interface is implemented to save and load the thread history, for there is no way to retrieve it form the OpenAI cloud.
            The ISelectionObjectProvider interface is used to manage tools like file serach, code interpreter and function calls.
            </remarks>
      <seealso cref="T:OpenAIAPI.JSON.ElementConfiguration" />
      <seealso cref="T:GlobalCommonEntities.API.APIEndpoint" />
      <seealso cref="T:AIAssistants.Interfaces.IAPIManager" />
      <seealso cref="T:AIAssistants.Interfaces.ElementCapabilities" />
      <seealso cref="T:GlobalCommonEntities.DependencyInjection.ObjectWrapper" />
      <seealso cref="T:OpenAIAPI.JSON.Assistant" />
      <seealso cref="T:AIAssistants.JSON.FunctionDef" />
      <seealso cref="T:GlobalCommonEntities.Interfaces.ISelectionObjectProvider" />
      <seealso cref="T:AIAssistants.Interfaces.ISpeechManager" />
      <seealso cref="T:AIAssistants.Data.ContextMessage" />
      <seealso cref="T:AIAssistants.Interfaces.IAssistant" />
      <seealso cref="T:AIAssistants.Interfaces.IPlayer" />
      <seealso cref="T:AIAssistants.Interfaces.IStreamReadWriter" />
      <seealso cref="T:AIAssistants.Interfaces.IPlayerAsset" />
      <seealso cref="T:AIAssistants.Data.APIUIDataSheet" />
      <seealso cref="T:AIAssistants.Interfaces.IApplicationService" />
      <seealso cref="T:AIAssistants.Interfaces.IDocumentAnalyzer" />
      <seealso cref="T:AIAssistants.Interfaces.IDocumentStoreManager" />
      <seealso cref="!:OpenAIAPIConfiguration.json" />
      <seealso cref="!:AIAPIWinAdmin.cfAssistant" />
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.Identifier">
      <summary>
            IAPIElement: Unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.Name">
      <summary>
            IAPIElement: Element name
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.Description">
      <summary>
            IAPIElement: Element description
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.GenericType">
      <summary>
            IAPIElement: Element generic type
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.Capabilities">
      <summary>
            IAPIElement: Element capabilities
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.APIManager">
      <summary>
            IAPIElement: API manager object
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.EditorInfo">
      <summary>
            IAPIElement: Information to edit the object
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.ConfigInfo">
      <summary>
            IAPIElement: Information to edit the object configuration
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.Usage">
      <summary>
            IAPIElement: Usage information of this element after the current request.
            </summary>
      <remarks>
            This is a dictionary with information useful to billing and limits.
            Each dictionary key is the name of anusage element field, such as input tokens, audio tokens, etc.
            Keys can be names of composite properties, such as "input_token_details.text_tokens".
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.QueryExtraArgs(System.String)">
      <summary>
            IAPIElement: Query for function extra arguments
            </summary>
      <param name="functionName">
            Name of the function
            </param>
      <returns>
            List of extra arguments
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.UpdateConfiguration(AIAssistants.Interfaces.IAPIElement)">
      <summary>
            IAPIElement: Update the element configuration
            </summary>
      <param name="fromElement">
            IAPIelement needed to update the configuration
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.UpdateObject(GlobalCommonEntities.DependencyInjection.ObjectWrapper)">
      <summary>
            IAPIElement: Update the element properties (exposed in the EditorInfo property)  in the provider server
            </summary>
      <param name="odata">
            Custom object information contained in an ObjectWrapper object
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.Equals(AIAssistants.Interfaces.IAPIElement)">
      <summary>
            IEquatable interface
            </summary>
      <param name="other">
            Object to compare with
            </param>
      <returns>
            True if both objects are the same
            </returns>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.Title">
      <summary>
            ISelectionObjectProvider: Title for the selection user interface
            </summary>
    </member>
    <member name="E:OpenAIAPI.Players.OpenAIAssistant.SelectionUIInvoked">
      <summary>
            ISelectionObjectProvider: Event to notify that the user wants to select an object
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.ReleaseEvent">
      <summary>
            ISelectionObjectProvider: Release SelectObjectsHandler event subscriptions
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.HasMore(GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Check if there are more objects to select from
            </summary>
      <param name="property">
            Property editor invoking the selection
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.GetSelectionObjects(GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Get a list of objects to select from
            </summary>
      <returns>
            List of objects
            </returns>
      <param name="property">
            Property to get the object
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.GetSelectedObjects(GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Get a list of objects already selected
            </summary>
      <returns>
            List of objects
            </returns>
      <param name="property">
            Property to get the object list
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.SetSelection(System.Collections.Generic.List{System.Object},GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Set the list of selected objects
            </summary>
      <param name="objects">
            Selected object list
            </param>
      <param name="property">
            Property to set the selection
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.RemoveSelection(System.Collections.Generic.List{System.Object},GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Remove a list of objects
            </summary>
      <param name="objects">
            Object to remove list
            </param>
      <param name="property">
            Property to remove the selection
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.RemoveContainer(GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Remove the object container
            </summary>
      <param name="property">
            Property editor invoking the selection
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.InvokeAction(System.Object,GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Fire event to select an object
            </summary>
      <param name="sender">
            Object invoking the selection
            </param>
      <param name="property">
            Property editor invoking the selection
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.SaveToStream(System.IO.Stream,System.Boolean)">
      <summary>
            IStreamReadWriter: Save the element to a stream
            </summary>
      <param name="stream">
            Target Stream
            </param>
      <param name="formatted">
            Save formatted data
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.LoadFromStream(System.IO.Stream)">
      <summary>
            IStreamReadWriter: Load the element from a stream
            </summary>
      <param name="stream">
            Source Stream
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.GetDocumentStoreManager">
      <summary>
            IDocumentAnalyzer: Provide a IDocumentVectorManager to manage documents
            </summary>
      <returns>
            IDocumentVectorManager object or null if not available
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.AnalyzeDocument(AIAssistants.Interfaces.IPlayer,System.String,AIAssistants.Data.ContextMessage)">
      <summary>
            IDocumentAnalyzer: Analyze a document and return a context message with the results
            </summary>
      <param name="from">
            Player that requested the analysis
            </param>
      <param name="instructions">
            Agent general instructions to proceed
            </param>
      <param name="prompt">
            Prompt with the request to answer
            </param>
      <returns>
            Response message with the answer found
            </returns>
      <remarks>
            Use this method to force a file search tool to analyze a document and return the results.
            Use the document store manager to store the documents before calling this method, if needed.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.ProcessDocument(AIAssistants.Interfaces.IPlayer,System.String,AIAssistants.Data.ContextMessage,System.String)">
      <summary>
            IDocumentAnalyzer: Process a document and return a context message with the results
            </summary>
      <param name="from">
            Player that sends the request
            </param>
      <param name="instructions">
            Agent general instructions to proceed
            </param>
      <param name="prompt">
            Prompt with the request to answer
            </param>
      <param name="documentID">
            Document id in the application repository to upload to the cloud
            </param>
      <returns>
            Response message with the answer and document generated attachments
            </returns>
      <remarks>
            Use this method to force a code interpreter tool to analyze a document and possibly generate a new document with the results.
            Use the document store manager to store the documents before calling this method, if needed.
            </remarks>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.MaxRequestRatePerMinute">
      <summary>
            IModelUser: Maxumum number of requests per minute
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.MaxRequestRatePerDay">
      <summary>
            IModelUser: Maximum number of requests per day
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.Model">
      <summary>
            IModelUser: Player model
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.Temperature">
      <summary>
            IModelUser: What sampling temperature to use, between 0 and 2.
            Higher values make the output more random, lower values make it more deterministic. Defaults to 1.
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.TopP">
      <summary>
            IModelUser: An alternative to sampling with temperature, called nucleus sampling. 
            Model considers the results of tokens with top_p probability mass. Defaults to 1.
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.ModelProperty">
      <summary>
            IModelUser: Property editor information to set the available model list.
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.ReasoningEffort(System.String@)">
      <summary>
            IModelUser: Gets or sets the reasoning effort level
            </summary>
      <param name="currentReasoning">
            Pass null or empty to get the current reasoning effort level. Pass a string to set a new reasoning effort level.
            </param>
      <returns>
            List of available reasoning effort levels, Null if the model does not support reasoning effort levels.
            </returns>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.SystemInstructions">
      <summary>
            IAPIPlayer: Main instructions for the player
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.Tools">
      <summary>
            IAPIPlayer: Tools available for the player
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.ParallelTools">
      <summary>
            IAPIPlayer: Allow parallel use of tools. This is mainly for function or MCP calls.
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.UserFunctions">
      <summary>
            IAPIPlayer: List of functions available for user calling too
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.AllFunctions">
      <summary>
            IAPIPlayer: List of all functions available for this player
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.Voice">
      <summary>
            IAPIPlayer: Player voice name
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.Busy">
      <summary>
            IAPIPLayer: Player availability
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.AppRoles">
      <summary>
            IAPIPlayer: List of application specific roles
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.ImageFilter">
      <summary>
            IAPIPlayer: Provides a proper file filter to select images
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.ImgFormat">
      <summary>
            IAPIPlayer: Format of the image attachment for messages to player
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.CurrentRequest">
      <summary>
            IAPIPlayer: Current request the player is processing
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.ToolName(AIAssistants.Interfaces.ToolTypes,System.String@)">
      <summary>
            IAPIPlayer: Get the tool name amd description for a given type
            </summary>
      <param name="tool">
            Tool type
            </param>
      <param name="description">
            Tool description as out parameter
            </param>
      <returns>
            Tool name
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.AddContext(System.Collections.Generic.List{AIAssistants.Data.ContextMessage})">
      <summary>
            IAPIPlayer: Add context to the player
            </summary>
      <param name="messages">
            List of context messages
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.AddServices(System.Collections.Generic.List{AIAssistants.Interfaces.IApplicationService})">
      <summary>
            IAPIPLayer: Add application services to the player to use in the conversation
            </summary>
      <param name="services">
            List of available services. Null to reset the services
            </param>
      <remarks>
            The application services provide function calls for the player to interact with the current application.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.GetExtensionFor(System.String)">
      <summary>
            IAPIPLayer: Get the extension to call a set of functions
            </summary>
      <param name="interfaceName">
            Standardized interface name
            </param>
      <returns>
            Extension to call the function or null if not found
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.AddFunctions(System.Collections.Generic.List{AIAssistants.JSON.FunctionDef})">
      <summary>
            IAPIPLayer: Add functions to the player
            </summary>
      <example>
            You can add very simple and generic functions as for instance to get the currente date and time.
            </example>
      <param name="functions">
            List of function definition objects
            </param>
      <remarks>
            Use this method to add simple functions not organized as a service.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.RemoveServices(System.Collections.Generic.List{AIAssistants.Interfaces.IApplicationService})">
      <summary>
            IAPIPlayer: Remove application services to the player
            </summary>
      <param name="services">
            List of services to remove.
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.RemoveFunctions(System.Collections.Generic.List{AIAssistants.JSON.FunctionDef})">
      <summary>
            IAPIPlayer: Remove functions from the player
            </summary>
      <param name="functions">
            List of function definition objects to remove
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.SendPrompt(AIAssistants.Interfaces.IPlayer,System.Collections.Generic.List{AIAssistants.Data.ContextMessage},System.Boolean)">
      <summary>
            IAPIPlayer: Send a message to the player
            </summary>
      <param name="from">
            Player sending the message
            </param>
      <param name="prompt">
            Messages to process as a prompt
            </param>
      <param name="reset">
            Reset conversation before process the request
            </param>
      <returns>
            List of response messages
            </returns>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.Assets">
      <summary>
            IAPIPlayer: Asset list
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.PlayerName">
      <summary>
            IPlayer: player name
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.PlayerRole">
      <summary>
            IPlayer: Player role
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.Reminder">
      <summary>
            IPlayer: Message that will be sent on each request to remind the player important things
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.BackColor">
      <summary>
            IPlayer: Bubble header background color
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.ForeColor">
      <summary>
            IPlayer: Bubble header foreground color
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.AllowedServices">
      <summary>
            IPlayer: List of allowed application service identifiers
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.PrivateConsole">
      <summary>
            IPlayer: Console to show player messages
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.PlayerSettings">
      <summary>
            IPlayer: Player settings
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.Equals(AIAssistants.Interfaces.IAPIPlayer)">
      <summary>
            IEquatable interface
            </summary>
      <param name="other">
            Object to compare with
            </param>
      <returns>
            True if both objects are the same
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.GetStoredElements(System.Object[])">
      <summary>
            IStorableElement: List of all available assistants
            </summary>
      <param name="args">
            Arguments to filter the list of elements if applicable.
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.CreateFromID(System.String)">
      <summary>
            IStorableElement: Get an assistant from its identifier
            </summary>
      <param name="id">
            Assistant unique identifier
            </param>
      <returns>
            Object with the specific configuration of the assistant
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.CreateStorableElement(GlobalCommonEntities.DependencyInjection.ObjectWrapper)">
      <summary>
            IStorableElement: Create a new assistant from a generic object
            </summary>
      <param name="request">
            Generic object wrapping the assistant request
            </param>
      <returns>
            Object with the specific configuration of the assistant
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.DeleteStorableElement">
      <summary>
            IStorableElement: Remove an assistant
            </summary>
      <returns>
            True if the assistant was removed
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.ModifyStoredElement">
      <summary>
            IStorableElement: Modify assistant
            </summary>
      <returns>
            Modified assistant
            </returns>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.AvailableRoles">
      <summary>
            ITaskAgent: List of all available roles to prompt the assistant
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.Instructions">
      <summary>
            ITaskAgent: The system instructions that the assistant uses. The maximum length is 256,000 characters.
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.ChangeInstructions(System.String)">
      <summary>
            ITaskAgent: Set the system instructions for the assistant. The maximum length is 256,000 characters.
            </summary>
      <param name="instructions">
            New instructions for the assistant.
            </param>
      <returns>
            True if the instructions were changed successfully, false otherwise.
            </returns>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIAssistant.CurrentThread">
      <summary>
            IConversationalPlayer: Current thread
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.GetThreadList">
      <summary>
            IConversationalPlayer: Get the list of stored threads
            </summary>
      <returns>
            Thread list as generic objects
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.JoinConversation(AIAssistants.Interfaces.IConversationContainer)">
      <summary>
            IConversationalPlayer: Join a global conversation
            </summary>
      <param name="container">
            Conversation container
            </param>
      <remarks>
            Find a compatible conversation in the container and join it, or create a new one.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.CreateThread(System.Collections.Generic.List{AIAssistants.Data.ContextMessage})">
      <summary>
            IConversationalPlayer: Create new thread
            </summary>
      <param name="prompt">
            List of the first messages to the assistant
            </param>
      <returns>
            Wrapped Thread Object
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.RetrieveThread(System.String)">
      <summary>
            IConversationalPlayer: Retrieve a thread from its identifier
            </summary>
      <param name="id">
            Thread identifier
            </param>
      <returns>
            Generic object containing the thread object
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIAssistant.SendPrompt(AIAssistants.Interfaces.IPlayer,System.Collections.Generic.List{AIAssistants.Data.ContextMessage},AIAssistants.Interfaces.IConversation)">
      <summary>
            IConversationalPlayer: Send a message to the assistant
            </summary>
      <param name="from">
            Player sending the message
            </param>
      <param name="prompt">
            Messages to process as a prompt
            </param>
      <param name="thread">
            Thread to prompt
            </param>
      <returns>
            Message response
            </returns>
    </member>
    <member name="T:OpenAIAPI.Players.OpenAIChat">
      <summary>
            OpanAI API chat player. Implementation of the IChat interface 
            </summary>
      <example>
            You can find an example of use of this class in the AIAPIWinAdmin.cfChat Form. This form allows managing OpenAI chat completions using all the assistant API calls.
            </example>
      <remarks>
            This object is a player that can assist users in  a most generic way than assistants. Chats cannot access documents in the OpenAI cloud storage, but they can search in internet.
            Chats can use function calls like assistants to communicate with the application. Function calls use the IAppAutomation interface to interact with the user application.
            OpenAIChat objects are created by the OpenAIAPIManager object.
            The APIConfiguration class contains the default settings and all endpoint definition for this class.
            The OpenAIAPIConfiguration.json contains the default configuration for this class in the "tools" element with id "default_Chat".
            The ChatRequest class is used to create chats. Chats are not stored in the OpenAI cloud, so the configurations must be saved to local storage, like json files.
            This player can have a ISpeechManager assigned to produce speech.
            The IStreamReadWriter interface is implemented to save and load the chat configuration (model, initial messages, asigned function calls, etc.)
            The ISelectionObjectProvider interface is used to manage function calls.
            The IDataIntegration interface is used to load message lists from a data table.
            </remarks>
      <seealso cref="T:OpenAIAPI.JSON.ElementConfiguration" />
      <seealso cref="T:GlobalCommonEntities.API.APIEndpoint" />
      <seealso cref="T:AIAssistants.Interfaces.IAPIManager" />
      <seealso cref="T:AIAssistants.Interfaces.ElementCapabilities" />
      <seealso cref="T:GlobalCommonEntities.DependencyInjection.ObjectWrapper" />
      <seealso cref="T:OpenAIAPI.JSON.ChatRequest" />
      <seealso cref="T:AIAssistants.JSON.FunctionDef" />
      <seealso cref="T:GlobalCommonEntities.Interfaces.ISelectionObjectProvider" />
      <seealso cref="T:AIAssistants.Interfaces.IDataIntegration" />
      <seealso cref="T:AIAssistants.Interfaces.ISpeechManager" />
      <seealso cref="T:AIAssistants.Interfaces.IChat" />
      <seealso cref="T:AIAssistants.Data.ContextMessage" />
      <seealso cref="T:AIAssistants.Interfaces.IPlayer" />
      <seealso cref="T:AIAssistants.Interfaces.IStreamReadWriter" />
      <seealso cref="T:AIAssistants.Interfaces.IPlayerAsset" />
      <seealso cref="T:AIAssistants.Data.APIUIDataSheet" />
      <seealso cref="T:AIAssistants.Interfaces.IApplicationService" />
      <seealso cref="!:OpenAIAPIConfiguration.json" />
      <seealso cref="!:AIAPIWinAdmin.cfChat" />
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.ChatCompletionData">
      <summary>
            Property specific for OpenAI Chats to get and set the chat completion data
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.Identifier">
      <summary>
            IAPIElement: Unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.Name">
      <summary>
            IAPIElement: Element name
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.Description">
      <summary>
            IAPIElement: Element description
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.GenericType">
      <summary>
            IAPIElement: Element generic type
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.Capabilities">
      <summary>
            IAPIElement: Element capabilities
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.APIManager">
      <summary>
            IAPIElement: API manager object
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.EditorInfo">
      <summary>
            IAPIElement: Information to edit the object
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.ConfigInfo">
      <summary>
            IAPIElement: Information to edit the object configuration
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.Usage">
      <summary>
            IAPIElement: Usage information of this element after the current request.
            </summary>
      <remarks>
            This is a dictionary with information useful to billing and limits.
            Each dictionary key is the name of anusage element field, such as input tokens, audio tokens, etc.
            Keys can be names of composite properties, such as "input_token_details.text_tokens".
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.QueryExtraArgs(System.String)">
      <summary>
            IAPIElement: Query for function extra arguments
            </summary>
      <param name="functionName">
            Name of the function
            </param>
      <returns>
            List of extra arguments
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.UpdateConfiguration(AIAssistants.Interfaces.IAPIElement)">
      <summary>
            IAPIElement: Update the element configuration
            </summary>
      <param name="fromElement">
            IAPIelement needed to update the configuration
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.UpdateObject(GlobalCommonEntities.DependencyInjection.ObjectWrapper)">
      <summary>
            IAPIElement: Update the element properties (exposed in the EditorInfo property)  in the provider server
            </summary>
      <param name="odata">
            Custom object information contained in an ObjectWrapper object
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.Equals(AIAssistants.Interfaces.IAPIElement)">
      <summary>
            IEquatable interface
            </summary>
      <param name="other">
            Object to compare with
            </param>
      <returns>
            True if both objects are the same
            </returns>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.IntegrationSets">
      <summary>
            IDataIntegration: Get the list of integration set names
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.GetIntegrationSet(System.String)">
      <summary>
            IDataIntegration: Get the column list for a given set
            </summary>
      <param name="setName">
            Integration set name
            </param>
      <returns>
            Integration set column list
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.BulkLoad(System.Data.DataTable,System.String)">
      <summary>
            IDataIntegration: Integrate objects from a data table
            </summary>
      <param name="data">
            DataTable with integration data
            </param>
      <param name="setName">
            Integration set name
            </param>
      <returns>
            Error message list
            </returns>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.MaxRequestRatePerMinute">
      <summary>
            IModelUser: Maxumum number of requests per minute
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.MaxRequestRatePerDay">
      <summary>
            IModelUser: Maximum number of requests per day
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.Model">
      <summary>
            IModelUser: AI model identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.Temperature">
      <summary>
            IModelUser: What sampling temperature to use, between 0 and 2.
            Higher values make the output more random, lower values make it more deterministic. Defaults to 1.
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.TopP">
      <summary>
            IModelUser: An alternative to sampling with temperature, called nucleus sampling. 
            Model considers the results of tokens with top_p probability mass. Defaults to 1.
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.ModelProperty">
      <summary>
            IModelUser: Property editor information to set the available model list.
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.ReasoningEffort(System.String@)">
      <summary>
            IModelUser: Gets or sets the reasoning effort level
            </summary>
      <param name="currentReasoning">
            Pass null to get the current reasoning effort level. Pass a string to set a new reasoning effort level. Empty string to remove reasoning effort level.
            </param>
      <returns>
            List of available reasoning effort levels, Null if the model does not support reasoning effort levels.
            </returns>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.SystemInstructions">
      <summary>
            IAPIPlayer: Main instructions for the player
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.Tools">
      <summary>
            IAPIPlayer: Tools available for the player
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.UserFunctions">
      <summary>
            IAPIPlayer: List of functions available for user calling too
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.ParallelTools">
      <summary>
            IAPIPlayer: Allow parallel use of tools. This is mainly for function or MCP calls.
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.AllFunctions">
      <summary>
            IAPIPlayer: List of all functions available for this player
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.Assets">
      <summary>
            IAPIPlayer: Asset list
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.Voice">
      <summary>
            IAPIPlayer: Player voice name
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.Busy">
      <summary>
            IAPIPLayer: Player availability
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.AppRoles">
      <summary>
            IAPIPlayer: List of application specific roles
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.ImageFilter">
      <summary>
            IAPIPlayer: Provides a proper file filter to select images
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.ImgFormat">
      <summary>
            IAPIPlayer: Format of the image attachment for messages to player
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.CurrentRequest">
      <summary>
            IAPIPlayer: Current request the player is processing
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.ToolName(AIAssistants.Interfaces.ToolTypes,System.String@)">
      <summary>
            IAPIPlayer: Get the tool name amd description for a given type
            </summary>
      <param name="tool">
            Tool type
            </param>
      <param name="description">
            Tool description as out parameter
            </param>
      <returns>
            Tool name
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.AddContext(System.Collections.Generic.List{AIAssistants.Data.ContextMessage})">
      <summary>
            IAPIPlayer: Add context to the player
            </summary>
      <param name="messages">
            List of context messages
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.GetExtensionFor(System.String)">
      <summary>
            IAPIPLayer: Get the extension to call a set of functions
            </summary>
      <param name="interfaceName">
            Standardized interface name
            </param>
      <returns>
            Extension to call the function or null if not found
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.AddServices(System.Collections.Generic.List{AIAssistants.Interfaces.IApplicationService})">
      <summary>
            IAPIPLayer: Add application services to the player to use in the conversation
            </summary>
      <param name="services">
            List of available services. Null to reset the services
            </param>
      <remarks>
            The application services provide function calls for the player to interact with the current application.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.AddFunctions(System.Collections.Generic.List{AIAssistants.JSON.FunctionDef})">
      <summary>
            IAPIPLayer: Add functions to the player
            </summary>
      <example>
            You can add very simple and generic functions as for instance to get the currente date and time.
            </example>
      <param name="functions">
            List of function definition objects
            </param>
      <remarks>
            Use this method to add simple functions not organized as a service.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.RemoveServices(System.Collections.Generic.List{AIAssistants.Interfaces.IApplicationService})">
      <summary>
            IAPIPlayer: Remove application services to the player
            </summary>
      <param name="services">
            List of services to remove.
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.RemoveFunctions(System.Collections.Generic.List{AIAssistants.JSON.FunctionDef})">
      <summary>
            IAPIPlayer: Remove functions from the player
            </summary>
      <param name="functions">
            List of function definition objects to remove
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.SendPrompt(AIAssistants.Interfaces.IPlayer,System.Collections.Generic.List{AIAssistants.Data.ContextMessage},System.Boolean)">
      <summary>
            IAPIPlayer: Send a message to the player
            </summary>
      <param name="from">
            Player sending the message
            </param>
      <param name="prompt">
            Message list to process as prompt
            </param>
      <param name="reset">
            Reset conversation before process the request
            </param>
      <returns>
            List of response messages
            </returns>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.PlayerName">
      <summary>
            IPlayer: player name
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.PlayerRole">
      <summary>
            IPlayer: Player role
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.Reminder">
      <summary>
            IPlayer: Message that will be sent on each request to remind the player important things
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.BackColor">
      <summary>
            IPlayer: Bubble header background color
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.ForeColor">
      <summary>
            IPlayer: Bubble header foreground color
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.AllowedServices">
      <summary>
            IPlayer: List of allowed application service identifiers
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.PrivateConsole">
      <summary>
            IPlayer: Console to show player messages
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.PlayerSettings">
      <summary>
            IPlayer: Player settings
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.Equals(AIAssistants.Interfaces.IAPIPlayer)">
      <summary>
            IEquatable interface
            </summary>
      <param name="other">
            Object to compare with
            </param>
      <returns>
            True if both objects are the same
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.GetStoredElements(System.Object[])">
      <summary>
            IStorableElement: List of chats or stored messages of a given chat
            </summary>
      <param name="args">
            Arguments to filter the list of elements. The first argument is the type of listing and is mandatory (chats, messages).
            When listing messages, the second argument is the chat identifier.
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.CreateFromID(System.String)">
      <summary>
            IStorableElement: Get resp response from its identifier
            </summary>
      <param name="id">
            Response unique identifier
            </param>
      <returns>
            Object with the specific configuration of the response
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.CreateStorableElement(GlobalCommonEntities.DependencyInjection.ObjectWrapper)">
      <summary>
            IStorableElement: Create a new response from a generic object
            </summary>
      <param name="request">
            Generic object wrapping the response request
            </param>
      <returns>
            Object with the specific configuration of the response
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.DeleteStorableElement">
      <summary>
            IStorableElement: Remove a response
            </summary>
      <returns>
            True if the responde was removed
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.ModifyStoredElement">
      <summary>
            IStorableElement: Modify chat
            </summary>
      <returns>
            Modified chat object
            </returns>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.Title">
      <summary>
            ISelectionObjectProvider: Title for the selection user interface
            </summary>
    </member>
    <member name="E:OpenAIAPI.Players.OpenAIChat.SelectionUIInvoked">
      <summary>
            ISelectionObjectProvider: Event to notify that the user wants to select an object
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.ReleaseEvent">
      <summary>
            ISelectionObjectProvider: Release SelectObjectsHandler event subscriptions
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.HasMore(GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Check if there are more objects to select from
            </summary>
      <param name="property">
            Property editor invoking the selection
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.GetSelectionObjects(GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Get a list of objects to select from
            </summary>
      <returns>
            List of objects
            </returns>
      <param name="property">
            Property to get the object
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.GetSelectedObjects(GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Get a list of objects already selected
            </summary>
      <returns>
            List of objects
            </returns>
      <param name="property">
            Property to get the object list
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.SetSelection(System.Collections.Generic.List{System.Object},GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Set the list of selected objects
            </summary>
      <param name="objects">
            Selected object list
            </param>
      <param name="property">
            Property to set the selection
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.RemoveSelection(System.Collections.Generic.List{System.Object},GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Remove a list of objects
            </summary>
      <param name="objects">
            Object to remove list
            </param>
      <param name="property">
            Property to remove the selection
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.RemoveContainer(GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Remove the object container
            </summary>
      <param name="property">
            Property editor invoking the selection
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.InvokeAction(System.Object,GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Fire event to select an object
            </summary>
      <param name="sender">
            Object invoking the selection
            </param>
      <param name="property">
            Property editor invoking the selection
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.SaveToStream(System.IO.Stream,System.Boolean)">
      <summary>
            IStreamReadWriter: Save the element to a stream
            </summary>
      <param name="stream">
            Target Stream
            </param>
      <param name="formatted">
            Save formatted data
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.LoadFromStream(System.IO.Stream)">
      <summary>
            IStreamReadWriter: Load the element from a stream
            </summary>
      <param name="stream">
            Source Stream
            </param>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.ChatMessages">
      <summary>
            IChat: Chat messages collection
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.NewChat(System.Collections.Generic.List{AIAssistants.Data.ContextMessage})">
      <summary>
            IChat: Create a new chat conversation
            </summary>
      <param name="context">
            Conversation context
            </param>
      <returns>
            Object with the chat implementation
            </returns>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.AvailableRoles">
      <summary>
            ITaskAgent: List of all available roles to prompt the agent.
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.Instructions">
      <summary>
            ITaskAgent: The system instructions that the agent uses.
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.ChangeInstructions(System.String)">
      <summary>
            ITaskAgent: Set the system instructions for the agent.
            </summary>
      <param name="instructions">
            New instructions for the agent.
            </param>
      <returns>
            True if the instructions were changed successfully, false otherwise.
            </returns>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIChat.CurrentThread">
      <summary>
            IConversationalPlayer: Current thread
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.GetThreadList">
      <summary>
            IConversationalPlayer: Get the list of stored threads
            </summary>
      <returns>
            Thread list as generic objects
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.JoinConversation(AIAssistants.Interfaces.IConversationContainer)">
      <summary>
            IConversationalPlayer: Join a global conversation
            </summary>
      <param name="container">
            Conversation container
            </param>
      <remarks>
            Find a compatible conversation in the container and join it, or create a new one.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.CreateThread(System.Collections.Generic.List{AIAssistants.Data.ContextMessage})">
      <summary>
            IConversationalPlayer: Create new thread
            </summary>
      <param name="prompt">
            List of the first messages to the assistant
            </param>
      <returns>
            Wrapped Thread Object
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.RetrieveThread(System.String)">
      <summary>
            IConversationalPlayer: Retrieve a thread from its identifier
            </summary>
      <param name="id">
            Thread identifier
            </param>
      <returns>
            Generic object containing the thread object
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIChat.SendPrompt(AIAssistants.Interfaces.IPlayer,System.Collections.Generic.List{AIAssistants.Data.ContextMessage},AIAssistants.Interfaces.IConversation)">
      <summary>
            IConversationalPlayer: Send a message to the assistant
            </summary>
      <param name="from">
            Player sending the message
            </param>
      <param name="prompt">
            Message list to process as prompt
            </param>
      <param name="thread">
            Thread to prompt
            </param>
      <returns>
            Message response
            </returns>
    </member>
    <member name="T:OpenAIAPI.Players.OpenAIEmbedding">
      <summary>
            OpanAI API mmplementation of the IEmbedding interface 
            </summary>
      <remarks>
            OpenAI’s text embeddings measure the relatedness of text strings. Embeddings are commonly used for:
            - Search(where results are ranked by relevance to a query string)
            - Clustering(where text strings are grouped by similarity)
            - Recommendations(where items with related text strings are recommended)
            - Anomaly detection(where outliers with little relatedness are identified)
            - Diversity measurement(where similarity distributions are analyzed)
            - Classification(where text strings are classified by their most similar label)
            An embedding is a vector(list) of floating point numbers.The distance between two vectors measures their relatedness.Small distances suggest high relatedness and large distances suggest low relatedness.
            The APIConfiguration class contains the default settings and all endpoint definition for this class.
            The OpenAIAPIConfiguration.json contains the default configuration for this class in the "tools" element with id "default_Embedding".
            This class is considered a player asset.
            The EmbeddingRequest object is used to create the embedding vector.
            </remarks>
      <seealso cref="T:OpenAIAPI.JSON.ElementConfiguration" />
      <seealso cref="T:GlobalCommonEntities.API.APIEndpoint" />
      <seealso cref="T:AIAssistants.Interfaces.IAPIManager" />
      <seealso cref="T:AIAssistants.Interfaces.ElementCapabilities" />
      <seealso cref="T:GlobalCommonEntities.DependencyInjection.ObjectWrapper" />
      <seealso cref="T:OpenAIAPI.JSON.EmbeddingRequest" />
      <seealso cref="T:AIAssistants.Data.ContextMessage" />
      <seealso cref="T:AIAssistants.Interfaces.IEmbedding" />
      <seealso cref="T:AIAssistants.Interfaces.IPlayerAsset" />
      <seealso cref="T:AIAssistants.Data.APIUIDataSheet" />
      <seealso cref="!:OpenAIAPIConfiguration.json" />
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIEmbedding.Identifier">
      <summary>
            IAPIElement: Unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIEmbedding.Name">
      <summary>
            IAPIElement: Element name
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIEmbedding.Description">
      <summary>
            IAPIElement: Element description
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIEmbedding.GenericType">
      <summary>
            IAPIElement: Element generic type
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIEmbedding.Capabilities">
      <summary>
            IAPIElement: Asset capabilities
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIEmbedding.APIManager">
      <summary>
            IAPIElement: API manager object
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIEmbedding.EditorInfo">
      <summary>
            IAPIElement: Information to edit the object
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIEmbedding.ConfigInfo">
      <summary>
            IAPIElement: Information to edit the object configuration
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIEmbedding.Usage">
      <summary>
            IAPIElement: Usage information of this element after the current request.
            </summary>
      <remarks>
            This is a dictionary with information useful to billing and limits.
            Each dictionary key is the name of anusage element field, such as input tokens, audio tokens, etc.
            Keys can be names of composite properties, such as "input_token_details.text_tokens".
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIEmbedding.QueryExtraArgs(System.String)">
      <summary>
            IAPIElement: Query for function extra arguments
            </summary>
      <param name="functionName">
            Name of the function
            </param>
      <returns>
            List of extra arguments
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIEmbedding.UpdateConfiguration(AIAssistants.Interfaces.IAPIElement)">
      <summary>
            IAPIElement: Update the element configuration
            </summary>
      <param name="fromElement">
            IAPIelement needed to update the configuration
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIEmbedding.UpdateObject(GlobalCommonEntities.DependencyInjection.ObjectWrapper)">
      <summary>
            IAPIElement: Update the element properties (exposed in the EditorInfo property)  in the provider server
            </summary>
      <param name="odata">
            Custom object information contained in an ObjectWrapper object
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIEmbedding.Equals(AIAssistants.Interfaces.IAPIElement)">
      <summary>
            IEquatable interface
            </summary>
      <param name="other">
            Object to compare with
            </param>
      <returns>
            True if both objects are the same
            </returns>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIEmbedding.MaxRequestRatePerMinute">
      <summary>
            IModelUser: Maxumum number of requests per minute
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIEmbedding.MaxRequestRatePerDay">
      <summary>
            IModelUser: Maximum number of requests per day
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIEmbedding.Model">
      <summary>
            IModelUser: AI model identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIEmbedding.Temperature">
      <summary>
            IModelUser: Not used
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIEmbedding.TopP">
      <summary>
            IModelUser: Not used
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIEmbedding.ModelProperty">
      <summary>
            IModelUser: Property editor information to set the available model list.
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIEmbedding.ReasoningEffort(System.String@)">
      <summary>
            IModelUser: Gets or sets the reasoning effort level
            </summary>
      <param name="currentReasoning">
            Pass null to get the current reasoning effort level. Pass a string to set a new reasoning effort level. Empty string to remove reasoning effort level.
            </param>
      <returns>
            List of available reasoning effort levels, Null if the model does not support reasoning effort levels.
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIEmbedding.CreateEmbedding">
      <summary>
            IEmbedding: Create an embedding vector
            </summary>
      <returns>
            List of embedding vectors, which are lists of floating point numbers.
            </returns>
    </member>
    <member name="T:OpenAIAPI.Players.OpenAIResponse">
      <summary>
            OpenAI ow response object
            </summary>
      <remarks>
            This is an extension of the response completion API, with more resources and new tools.
            </remarks>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.ResponseData">
      <summary>
            Property specific for OpenAI Responses to get and set the response ow data
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.Identifier">
      <summary>
            IAPIElement: Unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.Name">
      <summary>
            IAPIElement: Element name
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.Description">
      <summary>
            IAPIElement: Element description
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.GenericType">
      <summary>
            IAPIElement: Element generic type
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.Capabilities">
      <summary>
            IAPIElement: Element capabilities
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.APIManager">
      <summary>
            IAPIElement: API manager object
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.EditorInfo">
      <summary>
            IAPIElement: Information to edit the object
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.ConfigInfo">
      <summary>
            IAPIElement: Information to edit the object configuration
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.Usage">
      <summary>
            IAPIElement: Usage information of this element after the current request.
            </summary>
      <remarks>
            This is a dictionary with information useful to billing and limits.
            Each dictionary key is the name of anusage element field, such as input tokens, audio tokens, etc.
            Keys can be names of composite properties, such as "input_token_details.text_tokens".
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.QueryExtraArgs(System.String)">
      <summary>
            IAPIElement: Query for function extra arguments
            </summary>
      <param name="functionName">
            Name of the function
            </param>
      <returns>
            List of extra arguments
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.UpdateConfiguration(AIAssistants.Interfaces.IAPIElement)">
      <summary>
            IAPIElement: Update the element configuration
            </summary>
      <param name="fromElement">
            IAPIelement needed to update the configuration
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.UpdateObject(GlobalCommonEntities.DependencyInjection.ObjectWrapper)">
      <summary>
            IAPIElement: Update the element properties (exposed in the EditorInfo property)  in the provider server
            </summary>
      <param name="odata">
            Custom object information contained in an ObjectWrapper object
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.Equals(AIAssistants.Interfaces.IAPIElement)">
      <summary>
            IEquatable interface
            </summary>
      <param name="other">
            Object to compare with
            </param>
      <returns>
            True if both objects are the same
            </returns>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.MaxRequestRatePerMinute">
      <summary>
            IModelUser: Maxumum number of requests per minute
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.MaxRequestRatePerDay">
      <summary>
            IModelUser: Maximum number of requests per day
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.Model">
      <summary>
            IModelUser: AI model identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.Temperature">
      <summary>
            IModelUser: What sampling temperature to use, between 0 and 2.
            Higher values make the output more random, lower values make it more deterministic. Defaults to 1.
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.TopP">
      <summary>
            IModelUser: An alternative to sampling with temperature, called nucleus sampling. 
            Model considers the results of tokens with top_p probability mass. Defaults to 1.
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.ModelProperty">
      <summary>
            IModelUser: Property editor information to set the available model list.
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.ReasoningEffort(System.String@)">
      <summary>
            IModelUser: Gets or sets the reasoning effort level
            </summary>
      <param name="currentReasoning">
            Pass null to get the current reasoning effort level. Pass a string to set a new reasoning effort level. Empty string to remove reasoning effort level.
            </param>
      <returns>
            List of available reasoning effort levels, Null if the model does not support reasoning effort levels.
            </returns>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.SystemInstructions">
      <summary>
            IAPIPlayer: Main instructions for the player
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.Tools">
      <summary>
            IAPIPlayer: Tools available for the player
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.UserFunctions">
      <summary>
            IAPIPlayer: List of functions available for user calling too
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.ParallelTools">
      <summary>
            IAPIPlayer: Allow parallel use of tools. This is mainly for function or MCP calls.
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.AllFunctions">
      <summary>
            IAPIPlayer: List of all functions available for this player
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.Assets">
      <summary>
            IAPIPlayer: Asset list
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.Voice">
      <summary>
            IAPIPlayer: Player voice name
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.Busy">
      <summary>
            IAPIPLayer: Player availability
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.AppRoles">
      <summary>
            IAPIPlayer: List of application specific roles
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.ImageFilter">
      <summary>
            IAPIPlayer: Provides a proper file filter to select images
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.ImgFormat">
      <summary>
            IAPIPlayer: Format of the image attachment for messages to player
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.CurrentRequest">
      <summary>
            IAPIPlayer: Current request the player is processing
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.ToolName(AIAssistants.Interfaces.ToolTypes,System.String@)">
      <summary>
            IAPIPlayer: Get the tool name amd description for a given type
            </summary>
      <param name="tool">
            Tool type
            </param>
      <param name="description">
            Tool description as out parameter
            </param>
      <returns>
            Tool name
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.AddContext(System.Collections.Generic.List{AIAssistants.Data.ContextMessage})">
      <summary>
            IAPIPlayer: Add context to the player
            </summary>
      <param name="messages">
            List of context messages
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.GetExtensionFor(System.String)">
      <summary>
            IAPIPLayer: Get the extension to call a set of functions
            </summary>
      <param name="interfaceName">
            Standardized interface name
            </param>
      <returns>
            Extension to call the function or null if not found
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.AddServices(System.Collections.Generic.List{AIAssistants.Interfaces.IApplicationService})">
      <summary>
            IAPIPLayer: Add application services to the player to use in the conversation
            </summary>
      <param name="services">
            List of available services. Null to reset the services
            </param>
      <remarks>
            The application services provide function calls for the player to interact with the current application.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.AddFunctions(System.Collections.Generic.List{AIAssistants.JSON.FunctionDef})">
      <summary>
            IAPIPLayer: Add functions to the player
            </summary>
      <example>
            You can add very simple and generic functions as for instance to get the currente date and time.
            </example>
      <param name="functions">
            List of function definition objects
            </param>
      <remarks>
            Use this method to add simple functions not organized as a service.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.RemoveServices(System.Collections.Generic.List{AIAssistants.Interfaces.IApplicationService})">
      <summary>
            IAPIPlayer: Remove application services to the player
            </summary>
      <param name="services">
            List of services to remove.
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.RemoveFunctions(System.Collections.Generic.List{AIAssistants.JSON.FunctionDef})">
      <summary>
            IAPIPlayer: Remove functions from the player
            </summary>
      <param name="functions">
            List of function definition objects to remove
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.SendPrompt(AIAssistants.Interfaces.IPlayer,System.Collections.Generic.List{AIAssistants.Data.ContextMessage},System.Boolean)">
      <summary>
            IAPIPlayer: Send a message to the player
            </summary>
      <param name="from">
            Player sending the message
            </param>
      <param name="prompt">
            Message list to process as prompt
            </param>
      <param name="reset">
            Reset conversation before process the request
            </param>
      <returns>
            List of ow messages
            </returns>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.PlayerName">
      <summary>
            IPlayer: player name
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.PlayerRole">
      <summary>
            IPlayer: Player role
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.Reminder">
      <summary>
            IPlayer: Message that will be sent on each request to remind the player important things
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.BackColor">
      <summary>
            IPlayer: Bubble header background color
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.ForeColor">
      <summary>
            IPlayer: Bubble header foreground color
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.AllowedServices">
      <summary>
            IPlayer: List of allowed application service identifiers
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.PrivateConsole">
      <summary>
            IPlayer: Console to show player messages
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.PlayerSettings">
      <summary>
            IPlayer: Player settings
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.Equals(AIAssistants.Interfaces.IAPIPlayer)">
      <summary>
            IEquatable interface
            </summary>
      <param name="other">
            Object to compare with
            </param>
      <returns>
            True if both objects are the same
            </returns>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.AvailableRoles">
      <summary>
            ITaskAgent: List of all available roles to prompt the agent.
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.Instructions">
      <summary>
            ITaskAgent: The system instructions that the agent uses.
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.ChangeInstructions(System.String)">
      <summary>
            ITaskAgent: Set the system instructions for the agent.
            </summary>
      <param name="instructions">
            New instructions for the agent.
            </param>
      <returns>
            True if the instructions were changed successfully, false otherwise.
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.GetStoredElements(System.Object[])">
      <summary>
            IStorableElement: List of stored messages of a given response
            </summary>
      <param name="args">
            Arguments to filter the list of elements. The first argument is the response identifier and is mandatory.
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.CreateFromID(System.String)">
      <summary>
            IStorableElement: Get a response from its identifier
            </summary>
      <param name="id">
            Response unique identifier
            </param>
      <returns>
            Object with the specific configuration of the response
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.CreateStorableElement(GlobalCommonEntities.DependencyInjection.ObjectWrapper)">
      <summary>
            IStorableElement: Create a new response from a generic object
            </summary>
      <param name="request">
            Generic object wrapping the response request
            </param>
      <returns>
            Object with the specific configuration of the response
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.DeleteStorableElement">
      <summary>
            IStorableElement: Remove a response
            </summary>
      <returns>
            True if the responde was removed
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.ModifyStoredElement">
      <summary>
            IStorableElement: Modify reponse
            </summary>
      <returns>
            Always null
            </returns>
      <remarks>
            Responses cannot be modified. This method is only implemented to satisfy the interface.
            </remarks>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.Title">
      <summary>
            ISelectionObjectProvider: Title for the selection user interface
            </summary>
    </member>
    <member name="E:OpenAIAPI.Players.OpenAIResponse.SelectionUIInvoked">
      <summary>
            ISelectionObjectProvider: Event to notify that the user wants to select an object
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.ReleaseEvent">
      <summary>
            ISelectionObjectProvider: Release SelectObjectsHandler event subscriptions
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.HasMore(GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Check if there are more objects to select from
            </summary>
      <param name="property">
            Property editor invoking the selection
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.GetSelectionObjects(GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Get a list of objects to select from
            </summary>
      <returns>
            List of objects
            </returns>
      <param name="property">
            Property to get the object
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.GetSelectedObjects(GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Get a list of objects already selected
            </summary>
      <returns>
            List of objects
            </returns>
      <param name="property">
            Property to get the object list
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.SetSelection(System.Collections.Generic.List{System.Object},GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Set the list of selected objects
            </summary>
      <param name="objects">
            Selected object list
            </param>
      <param name="property">
            Property to set the selection
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.RemoveSelection(System.Collections.Generic.List{System.Object},GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Remove a list of objects
            </summary>
      <param name="objects">
            Object to remove list
            </param>
      <param name="property">
            Property to remove the selection
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.RemoveContainer(GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Remove the object container
            </summary>
      <param name="property">
            Property editor invoking the selection
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.InvokeAction(System.Object,GlobalCommonEntities.UI.PropertyEditorInfo)">
      <summary>
            ISelectionObjectProvider: Fire event to select an object
            </summary>
      <param name="sender">
            Object invoking the selection
            </param>
      <param name="property">
            Property editor invoking the selection
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.SaveToStream(System.IO.Stream,System.Boolean)">
      <summary>
            IStreamReadWriter: Save the element to a stream
            </summary>
      <param name="stream">
            Target Stream
            </param>
      <param name="formatted">
            Save formatted data
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.LoadFromStream(System.IO.Stream)">
      <summary>
            IStreamReadWriter: Load the element from a stream
            </summary>
      <param name="stream">
            Source Stream
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.GetDocumentStoreManager">
      <summary>
            IDocumentAnalyzer: Provide a IDocumentVectorManager to manage documents
            </summary>
      <returns>
            IDocumentVectorManager object or null if not available
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.AnalyzeDocument(AIAssistants.Interfaces.IPlayer,System.String,AIAssistants.Data.ContextMessage)">
      <summary>
            IDocumentAnalyzer: Analyze a document and return a context message with the results
            </summary>
      <param name="from">
            Player that requested the analysis
            </param>
      <param name="instructions">
            Agent general instructions to proceed
            </param>
      <param name="prompt">
            Prompt with the request to answer
            </param>
      <returns>
            Response message with the answer found
            </returns>
      <remarks>
            Use this method to force a file search tool to analyze a document and return the results.
            Use the document store manager to store the documents before calling this method, if needed.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.ProcessDocument(AIAssistants.Interfaces.IPlayer,System.String,AIAssistants.Data.ContextMessage,System.String)">
      <summary>
            IDocumentAnalyzer: Process a document and return a context message with the results
            </summary>
      <param name="from">
            Player that sends the request
            </param>
      <param name="instructions">
            Agent general instructions to proceed
            </param>
      <param name="prompt">
            Prompt with the request to answer
            </param>
      <param name="documentID">
            Document id in the application repository to upload to the cloud
            </param>
      <returns>
            Response message with the answer and document generated attachments
            </returns>
      <remarks>
            Use this method to force a code interpreter tool to analyze a document and possibly generate a new document with the results.
            Use the document store manager to store the documents before calling this method, if needed.
            </remarks>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.ChatMessages">
      <summary>
            IChat: Chat messages collection
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.NewChat(System.Collections.Generic.List{AIAssistants.Data.ContextMessage})">
      <summary>
            IChat: Create a new response conversation
            </summary>
      <param name="context">
            Conversation context
            </param>
      <returns>
            Object with the response implementation
            </returns>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAIResponse.CurrentThread">
      <summary>
            IConversationalPlayer: Current thread
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.GetThreadList">
      <summary>
            IConversationalPlayer: Get the list of stored threads
            </summary>
      <returns>
            Thread list as generic objects
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.JoinConversation(AIAssistants.Interfaces.IConversationContainer)">
      <summary>
            IConversationalPlayer: Join a global conversation
            </summary>
      <param name="container">
            Conversation container
            </param>
      <remarks>
            Find a compatible conversation in the container and join it, or create a new one.
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.CreateThread(System.Collections.Generic.List{AIAssistants.Data.ContextMessage})">
      <summary>
            IConversationalPlayer: Create new thread
            </summary>
      <param name="prompt">
            List of the first messages to the assistant
            </param>
      <returns>
            Wrapped Thread Object
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.RetrieveThread(System.String)">
      <summary>
            IConversationalPlayer: Retrieve a thread from its identifier
            </summary>
      <param name="id">
            Thread identifier
            </param>
      <returns>
            Generic object containing the thread object
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAIResponse.SendPrompt(AIAssistants.Interfaces.IPlayer,System.Collections.Generic.List{AIAssistants.Data.ContextMessage},AIAssistants.Interfaces.IConversation)">
      <summary>
            IConversationalPlayer: Send a message to the assistant
            </summary>
      <param name="from">
            Player sending the message
            </param>
      <param name="prompt">
            Message list to process as prompt
            </param>
      <param name="thread">
            Thread to prompt
            </param>
      <returns>
            Message ow
            </returns>
    </member>
    <member name="T:OpenAIAPI.Players.OpenAISpeech">
      <summary>
            ISpeechManager OpenAI implementation.
            </summary>
      <example>
            You can find an example of use of this class in the AIAPIWinAdmin.cfSpeech Form. This form allows managing OpenAI speech using all the API calls.
            </example>
      <remarks>
            This object allow players to convert text to speech and speech to text.
            OpenAISpeech objects are created by the OpenAIAPIManager object.
            The APIConfiguration class contains the default settings and all endpoint definition for this class.
            The OpenAIAPIConfiguration.json contains the default configuration for this class in the "tools" element with id "default_SpeechManager".
            The SoundRequest class is used to create a request for text / sound conversion.
            The IStreamReadWriter interface is used to save and load the object configuration to a stream.
            Speech managers are player assets.
            </remarks>
      <seealso cref="T:AIAssistants.Interfaces.ISpeechManager" />
      <seealso cref="T:OpenAIAPI.JSON.ElementConfiguration" />
      <seealso cref="T:GlobalCommonEntities.API.APIEndpoint" />
      <seealso cref="T:AIAssistants.Interfaces.IAPIManager" />
      <seealso cref="T:AIAssistants.Interfaces.ElementCapabilities" />
      <seealso cref="T:GlobalCommonEntities.DependencyInjection.ObjectWrapper" />
      <seealso cref="T:OpenAIAPI.JSON.SoundRequest" />
      <seealso cref="T:AIAssistants.Interfaces.IStreamReadWriter" />
      <seealso cref="T:AIAssistants.Data.APIUIDataSheet" />
      <seealso cref="T:OpenAIAPI.OpenAIAPIManager" />
      <seealso cref="!:OpenAIAPIConfiguration.json" />
      <seealso cref="!:AIAPIWinAdmin.cfSpeech" />
    </member>
    <member name="P:OpenAIAPI.Players.OpenAISpeech.SpeechData">
      <summary>
            Property specific for OpenAI Speech players to get and set the speech data
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAISpeech.Identifier">
      <summary>
            IAPIElement: Unique identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAISpeech.Name">
      <summary>
            IAPIElement: Element name
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAISpeech.Description">
      <summary>
            IAPIElement: Element description
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAISpeech.GenericType">
      <summary>
            IAPIElement: Element generic type
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAISpeech.Capabilities">
      <summary>
            IAPIElement: Element capabilities
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAISpeech.APIManager">
      <summary>
            IAPIElement: API manager object
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAISpeech.EditorInfo">
      <summary>
            IAPIElement: Information to edit the object
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAISpeech.ConfigInfo">
      <summary>
            IAPIElement: Information to edit the object configuration
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAISpeech.Usage">
      <summary>
            IAPIElement: Usage information of this element after the current request.
            </summary>
      <remarks>
            This is a dictionary with information useful to billing and limits.
            Each dictionary key is the name of anusage element field, such as input tokens, audio tokens, etc.
            Keys can be names of composite properties, such as "input_token_details.text_tokens".
            </remarks>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAISpeech.QueryExtraArgs(System.String)">
      <summary>
            IAPIElement: Query for function extra arguments
            </summary>
      <param name="functionName">
            Name of the function
            </param>
      <returns>
            List of extra arguments
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAISpeech.UpdateConfiguration(AIAssistants.Interfaces.IAPIElement)">
      <summary>
            IAPIElement: Update the element configuration
            </summary>
      <param name="fromElement">
            IAPIelement needed to update the configuration
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAISpeech.UpdateObject(GlobalCommonEntities.DependencyInjection.ObjectWrapper)">
      <summary>
            IAPIElement: Update the element properties (exposed in the EditorInfo property) in the provider server
            </summary>
      <param name="odata">
            Custom object information contained in an ObjectWrapper object
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAISpeech.Equals(AIAssistants.Interfaces.IAPIElement)">
      <summary>
            IEquatable interface
            </summary>
      <param name="other">
            Object to compare with
            </param>
      <returns>
            True if both objects are the same
            </returns>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAISpeech.MaxRequestRatePerMinute">
      <summary>
            IModelUser: Maxumum number of requests per minute
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAISpeech.MaxRequestRatePerDay">
      <summary>
            IModelUser: Maximum number of requests per day
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAISpeech.Model">
      <summary>
            IModelUser: AI model identifier
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAISpeech.Temperature">
      <summary>
            IModelUser: Not used
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAISpeech.TopP">
      <summary>
            IModelUser: Not used
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAISpeech.ModelProperty">
      <summary>
            IModelUser: Property editor information to set the available model list.
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAISpeech.ReasoningEffort(System.String@)">
      <summary>
            IModelUser: Gets or sets the reasoning effort level
            </summary>
      <param name="currentReasoning">
            Pass null to get the current reasoning effort level. Pass a string to set a new reasoning effort level. Empty string to remove reasoning effort level.
            </param>
      <returns>
            List of available reasoning effort levels, Null if the model does not support reasoning effort levels.
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAISpeech.SaveToStream(System.IO.Stream,System.Boolean)">
      <summary>
            IStreamReadWriter: Save the element to a stream
            </summary>
      <param name="stream">
            Target Stream
            </param>
      <param name="formatted">
            Save formatted data
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAISpeech.LoadFromStream(System.IO.Stream)">
      <summary>
            IStreamReadWriter: Load the element from a stream
            </summary>
      <param name="stream">
            Source Stream
            </param>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAISpeech.Cancel">
      <summary>
            ISpeechManager: Cancel the current operation
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.OpenAISpeech.AvailableVoices">
      <summary>
            ISpeechManager: List of available voices
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAISpeech.TextToSpeech(System.Collections.Generic.List{System.String},System.String,AIAssistants.Interfaces.PlaySpeechHandler)">
      <summary>
            ISpeechManager: Create speech from text
            </summary>
      <param name="text">
            Text to convert to speech
            </param>
      <param name="voice">
            Voice to use
            </param>
      <param name="speaker">
            Delegate to reproduce the audio
            </param>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAISpeech.TextToSpeech(System.String,System.String)">
      <summary>
            ISpeechManager: Create speech from text
            </summary>
      <param name="text">
            Text to convert to speech
            </param>
      <param name="voice">
            Voice to use
            </param>
      <returns>
            Audio bytes
            </returns>
    </member>
    <member name="M:OpenAIAPI.Players.OpenAISpeech.SpeechToText(System.Byte[],System.Boolean)">
      <summary>
            ISpeechManager: Convert speech to text
            </summary>
      <param name="speech">
            Array of bytes with the audio data
            </param>
      <param name="translate">
            Translate or transcript the text
            </param>
      <returns>
            Audio text
            </returns>
    </member>
    <member name="T:OpenAIAPI.Players.PlayerTextFormatter">
      <summary>
            Player output plain text to rtf converter
            </summary>
      <seealso cref="T:AIAssistants.Interfaces.IObjectToFormattedString" />
    </member>
    <member name="P:OpenAIAPI.Players.PlayerTextFormatter.TextLimits">
      <summary>
            IObjectToFormattedString: Text container size limits
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.PlayerTextFormatter.BoldLines">
      <summary>
            IObjectToFormattedString: Bold Text lines count
            </summary>
    </member>
    <member name="P:OpenAIAPI.Players.PlayerTextFormatter.CodeLines">
      <summary>
            IObjectToFormattedString: Lines of text detected as source code
            </summary>
    </member>
    <member name="M:OpenAIAPI.Players.PlayerTextFormatter.ConvertObjectToString(System.Object)">
      <summary>
            IObjectToFormattedString: Format text to RTF format
            </summary>
      <param name="obj">
            Text to format
            </param>
      <returns>
            RTF formatted text
            </returns>
    </member>
  </members>
</doc>